using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace Layer.Core.Models
{
    public partial class TİGER3Context : DbContext
    {
        public TİGER3Context()
        {
        }

        public TİGER3Context(DbContextOptions<TİGER3Context> options)
            : base(options)
        {
        }

        public virtual DbSet<LAdlog> LAdlogs { get; set; }
        public virtual DbSet<LBankcode> LBankcodes { get; set; }
        public virtual DbSet<LBnbranch> LBnbranches { get; set; }
        public virtual DbSet<LBrwsstat> LBrwsstats { get; set; }
        public virtual DbSet<LCapidept> LCapidepts { get; set; }
        public virtual DbSet<LCapidiv> LCapidivs { get; set; }
        public virtual DbSet<LCapidmconn> LCapidmconns { get; set; }
        public virtual DbSet<LCapido> LCapidos { get; set; }
        public virtual DbSet<LCapidoc> LCapidocs { get; set; }
        public virtual DbSet<LCapidright> LCapidrights { get; set; }
        public virtual DbSet<LCapieshop> LCapieshops { get; set; }
        public virtual DbSet<LCapiextinfo> LCapiextinfos { get; set; }
        public virtual DbSet<LCapifactdiv> LCapifactdivs { get; set; }
        public virtual DbSet<LCapifactory> LCapifactories { get; set; }
        public virtual DbSet<LCapifirm> LCapifirms { get; set; }
        public virtual DbSet<LCapigroup> LCapigroups { get; set; }
        public virtual DbSet<LCapiperiod> LCapiperiods { get; set; }
        public virtual DbSet<LCapiprog> LCapiprogs { get; set; }
        public virtual DbSet<LCapiright> LCapirights { get; set; }
        public virtual DbSet<LCapirole> LCapiroles { get; set; }
        public virtual DbSet<LCapiroleobj> LCapiroleobjs { get; set; }
        public virtual DbSet<LCapiroletask> LCapiroletasks { get; set; }
        public virtual DbSet<LCapisign> LCapisigns { get; set; }
        public virtual DbSet<LCapisite> LCapisites { get; set; }
        public virtual DbSet<LCapiterminal> LCapiterminals { get; set; }
        public virtual DbSet<LCapiunit> LCapiunits { get; set; }
        public virtual DbSet<LCapiupdate> LCapiupdates { get; set; }
        public virtual DbSet<LCapiuser> LCapiusers { get; set; }
        public virtual DbSet<LCapiver> LCapivers { get; set; }
        public virtual DbSet<LCapiwebconn> LCapiwebconns { get; set; }
        public virtual DbSet<LCapiwhouse> LCapiwhouses { get; set; }
        public virtual DbSet<LCdbtmp> LCdbtmps { get; set; }
        public virtual DbSet<LCity> LCities { get; set; }
        public virtual DbSet<LConscode> LConscodes { get; set; }
        public virtual DbSet<LCountry> LCountries { get; set; }
        public virtual DbSet<LCpaCode> LCpaCodes { get; set; }
        public virtual DbSet<LCpaDef> LCpaDefs { get; set; }
        public virtual DbSet<LCtycode> LCtycodes { get; set; }
        public virtual DbSet<LCurrencylist> LCurrencylists { get; set; }
        public virtual DbSet<LCurrencypar> LCurrencypars { get; set; }
        public virtual DbSet<LCustom> LCustoms { get; set; }
        public virtual DbSet<LDailyexchange> LDailyexchanges { get; set; }
        public virtual DbSet<LDefnfldsd> LDefnfldsds { get; set; }
        public virtual DbSet<LDistrict> LDistricts { get; set; }
        public virtual DbSet<LDriver> LDrivers { get; set; }
        public virtual DbSet<LDynrep> LDynreps { get; set; }
        public virtual DbSet<LDynrepusrr> LDynrepusrrs { get; set; }
        public virtual DbSet<LEbusiness> LEbusinesses { get; set; }
        public virtual DbSet<LFaculty> LFaculties { get; set; }
        public virtual DbSet<LFaregexpc> LFaregexpcs { get; set; }
        public virtual DbSet<LFaregtype> LFaregtypes { get; set; }
        public virtual DbSet<LFirmparam> LFirmparams { get; set; }
        public virtual DbSet<LFreezone> LFreezones { get; set; }
        public virtual DbSet<LFrgtype> LFrgtypes { get; set; }
        public virtual DbSet<LFrmod> LFrmods { get; set; }
        public virtual DbSet<LGibdoclinetyperel> LGibdoclinetyperels { get; set; }
        public virtual DbSet<LGibdoctype> LGibdoctypes { get; set; }
        public virtual DbSet<LGibfaregtype> LGibfaregtypes { get; set; }
        public virtual DbSet<LGiblinerectyperel> LGiblinerectyperels { get; set; }
        public virtual DbSet<LGiblinetype> LGiblinetypes { get; set; }
        public virtual DbSet<LGiblnsbrctyprel> LGiblnsbrctyprels { get; set; }
        public virtual DbSet<LGibmmparam> LGibmmparams { get; set; }
        public virtual DbSet<LGibotherparam> LGibotherparams { get; set; }
        public virtual DbSet<LGibrectype> LGibrectypes { get; set; }
        public virtual DbSet<LGibsubrectype> LGibsubrectypes { get; set; }
        public virtual DbSet<LGouser> LGousers { get; set; }
        public virtual DbSet<LGtipCode> LGtipCodes { get; set; }
        public virtual DbSet<LGtipDef> LGtipDefs { get; set; }
        public virtual DbSet<LLbsloadgrpright> LLbsloadgrprights { get; set; }
        public virtual DbSet<LLbsloadusrright> LLbsloadusrrights { get; set; }
        public virtual DbSet<LLdocnum> LLdocnums { get; set; }
        public virtual DbSet<LLngexcl> LLngexcls { get; set; }
        public virtual DbSet<LLog> LLogs { get; set; }
        public virtual DbSet<LMandfld> LMandflds { get; set; }
        public virtual DbSet<LMapconfig> LMapconfigs { get; set; }
        public virtual DbSet<LMessage> LMessages { get; set; }
        public virtual DbSet<LMessageatt> LMessageatts { get; set; }
        public virtual DbSet<LNet> LNets { get; set; }
        public virtual DbSet<LOrgdef> LOrgdefs { get; set; }
        public virtual DbSet<LOrgdoc> LOrgdocs { get; set; }
        public virtual DbSet<LPaytype> LPaytypes { get; set; }
        public virtual DbSet<LPckcode> LPckcodes { get; set; }
        public virtual DbSet<LPosdef> LPosdefs { get; set; }
        public virtual DbSet<LPostcode> LPostcodes { get; set; }
        public virtual DbSet<LPriceindex> LPriceindices { get; set; }
        public virtual DbSet<LPriceindextyp> LPriceindextyps { get; set; }
        public virtual DbSet<LRediscintrate> LRediscintrates { get; set; }
        public virtual DbSet<LRegimetyp> LRegimetyps { get; set; }
        public virtual DbSet<LRpfilts001> LRpfilts001s { get; set; }
        public virtual DbSet<LRplays001> LRplays001s { get; set; }
        public virtual DbSet<LSchool> LSchools { get; set; }
        public virtual DbSet<LShpagent> LShpagents { get; set; }
        public virtual DbSet<LShptype> LShptypes { get; set; }
        public virtual DbSet<LSm> LSms { get; set; }
        public virtual DbSet<LSmsuser> LSmsusers { get; set; }
        public virtual DbSet<LStatusinfo> LStatusinfos { get; set; }
        public virtual DbSet<LTablelays001> LTablelays001s { get; set; }
        public virtual DbSet<LTaxoffice> LTaxoffices { get; set; }
        public virtual DbSet<LTextfav> LTextfavs { get; set; }
        public virtual DbSet<LTown> LTowns { get; set; }
        public virtual DbSet<LTradgrp> LTradgrps { get; set; }
        public virtual DbSet<LTscont> LTsconts { get; set; }
        public virtual DbSet<LTsprop> LTsprops { get; set; }
        public virtual DbSet<LUserblobtable> LUserblobtables { get; set; }
        public virtual DbSet<LUsercom> LUsercoms { get; set; }
        public virtual DbSet<LUsersdef> LUsersdefs { get; set; }
        public virtual DbSet<LUserwinpref> LUserwinprefs { get; set; }
        public virtual DbSet<LWebpage> LWebpages { get; set; }
        public virtual DbSet<Lg000Syslog> Lg000Syslogs { get; set; }
        public virtual DbSet<Lg00101Accdistdetln> Lg00101Accdistdetlns { get; set; }
        public virtual DbSet<Lg00101Accfcasgn> Lg00101Accfcasgns { get; set; }
        public virtual DbSet<Lg00101Anbdgtallocfc> Lg00101Anbdgtallocfcs { get; set; }
        public virtual DbSet<Lg00101Anbdgtallocln> Lg00101Anbdgtalloclns { get; set; }
        public virtual DbSet<Lg00101Anbdgtallocprd> Lg00101Anbdgtallocprds { get; set; }
        public virtual DbSet<Lg00101Anbdgtrevfc> Lg00101Anbdgtrevfcs { get; set; }
        public virtual DbSet<Lg00101Anbdgtrevln> Lg00101Anbdgtrevlns { get; set; }
        public virtual DbSet<Lg00101Anbdgtrevprd> Lg00101Anbdgtrevprds { get; set; }
        public virtual DbSet<Lg00101Approval> Lg00101Approvals { get; set; }
        public virtual DbSet<Lg00101Approve> Lg00101Approves { get; set; }
        public virtual DbSet<Lg00101Approver> Lg00101Approvers { get; set; }
        public virtual DbSet<Lg00101Bnfiche> Lg00101Bnfiches { get; set; }
        public virtual DbSet<Lg00101Bnfline> Lg00101Bnflines { get; set; }
        public virtual DbSet<Lg00101Bntotfil> Lg00101Bntotfils { get; set; }
        public virtual DbSet<Lg00101Cashflowcard> Lg00101Cashflowcards { get; set; }
        public virtual DbSet<Lg00101Cashflowline> Lg00101Cashflowlines { get; set; }
        public virtual DbSet<Lg00101Clbranchpayplan> Lg00101Clbranchpayplans { get; set; }
        public virtual DbSet<Lg00101Clcollatrlrisk> Lg00101Clcollatrlrisks { get; set; }
        public virtual DbSet<Lg00101Clfiche> Lg00101Clfiches { get; set; }
        public virtual DbSet<Lg00101Clfline> Lg00101Clflines { get; set; }
        public virtual DbSet<Lg00101Clparam> Lg00101Clparams { get; set; }
        public virtual DbSet<Lg00101Clparamheader> Lg00101Clparamheaders { get; set; }
        public virtual DbSet<Lg00101Clrnum> Lg00101Clrnums { get; set; }
        public virtual DbSet<Lg00101Cltotfil> Lg00101Cltotfils { get; set; }
        public virtual DbSet<Lg00101Collatrlcard> Lg00101Collatrlcards { get; set; }
        public virtual DbSet<Lg00101Collatrlroll> Lg00101Collatrlrolls { get; set; }
        public virtual DbSet<Lg00101Collatrltran> Lg00101Collatrltrans { get; set; }
        public virtual DbSet<Lg00101Collcommpaytr> Lg00101Collcommpaytrs { get; set; }
        public virtual DbSet<Lg00101Costdistfc> Lg00101Costdistfcs { get; set; }
        public virtual DbSet<Lg00101Costdistln> Lg00101Costdistlns { get; set; }
        public virtual DbSet<Lg00101Costdistpeg> Lg00101Costdistpegs { get; set; }
        public virtual DbSet<Lg00101Cscard> Lg00101Cscards { get; set; }
        public virtual DbSet<Lg00101Cshtot> Lg00101Cshtots { get; set; }
        public virtual DbSet<Lg00101Csroll> Lg00101Csrolls { get; set; }
        public virtual DbSet<Lg00101Cstran> Lg00101Cstrans { get; set; }
        public virtual DbSet<Lg00101Dataexchhistory> Lg00101Dataexchhistories { get; set; }
        public virtual DbSet<Lg00101Defnfldstranv> Lg00101Defnfldstranvs { get; set; }
        public virtual DbSet<Lg00101Demandfiche> Lg00101Demandfiches { get; set; }
        public virtual DbSet<Lg00101Demandline> Lg00101Demandlines { get; set; }
        public virtual DbSet<Lg00101Demandpegging> Lg00101Demandpeggings { get; set; }
        public virtual DbSet<Lg00101Diib> Lg00101Diibs { get; set; }
        public virtual DbSet<Lg00101Diibbomline> Lg00101Diibbomlines { get; set; }
        public virtual DbSet<Lg00101Diibline> Lg00101Diiblines { get; set; }
        public virtual DbSet<Lg00101Discpaytran> Lg00101Discpaytrans { get; set; }
        public virtual DbSet<Lg00101Distord> Lg00101Distords { get; set; }
        public virtual DbSet<Lg00101Distordline> Lg00101Distordlines { get; set; }
        public virtual DbSet<Lg00101Divatran> Lg00101Divatrans { get; set; }
        public virtual DbSet<Lg00101Docprint> Lg00101Docprints { get; set; }
        public virtual DbSet<Lg00101Docschema> Lg00101Docschemas { get; set; }
        public virtual DbSet<Lg00101Docsellist> Lg00101Docsellists { get; set; }
        public virtual DbSet<Lg00101Earchivedet> Lg00101Earchivedets { get; set; }
        public virtual DbSet<Lg00101Ebookdetaildoc> Lg00101Ebookdetaildocs { get; set; }
        public virtual DbSet<Lg00101Einvoicedet> Lg00101Einvoicedets { get; set; }
        public virtual DbSet<Lg00101Einvoicelog> Lg00101Einvoicelogs { get; set; }
        public virtual DbSet<Lg00101Emdemdetln> Lg00101Emdemdetlns { get; set; }
        public virtual DbSet<Lg00101Emdemfiche> Lg00101Emdemfiches { get; set; }
        public virtual DbSet<Lg00101Emdemfline> Lg00101Emdemflines { get; set; }
        public virtual DbSet<Lg00101Emfiche> Lg00101Emfiches { get; set; }
        public virtual DbSet<Lg00101Emfline> Lg00101Emflines { get; set; }
        public virtual DbSet<Lg00101Emflninfcoef> Lg00101Emflninfcoefs { get; set; }
        public virtual DbSet<Lg00101Emuhtot> Lg00101Emuhtots { get; set; }
        public virtual DbSet<Lg00101Eproducerrecdet> Lg00101Eproducerrecdets { get; set; }
        public virtual DbSet<Lg00101Etradesmaninvdet> Lg00101Etradesmaninvdets { get; set; }
        public virtual DbSet<Lg00101Eximdistfc> Lg00101Eximdistfcs { get; set; }
        public virtual DbSet<Lg00101Eximdistln> Lg00101Eximdistlns { get; set; }
        public virtual DbSet<Lg00101Eximdistpeg> Lg00101Eximdistpegs { get; set; }
        public virtual DbSet<Lg00101Eximhistory> Lg00101Eximhistories { get; set; }
        public virtual DbSet<Lg00101Eximwhfc> Lg00101Eximwhfcs { get; set; }
        public virtual DbSet<Lg00101Eximwhtran> Lg00101Eximwhtrans { get; set; }
        public virtual DbSet<Lg00101Extrainfo> Lg00101Extrainfos { get; set; }
        public virtual DbSet<Lg00101Fcaccref> Lg00101Fcaccrefs { get; set; }
        public virtual DbSet<Lg00101Ficheobject> Lg00101Ficheobjects { get; set; }
        public virtual DbSet<Lg00101Folder> Lg00101Folders { get; set; }
        public virtual DbSet<Lg00101Gibaccfiche> Lg00101Gibaccfiches { get; set; }
        public virtual DbSet<Lg00101Gibaccficheln> Lg00101Gibaccfichelns { get; set; }
        public virtual DbSet<Lg00101Gntotbn> Lg00101Gntotbns { get; set; }
        public virtual DbSet<Lg00101Gntotcl> Lg00101Gntotcls { get; set; }
        public virtual DbSet<Lg00101Gntotcsh> Lg00101Gntotcshes { get; set; }
        public virtual DbSet<Lg00101Gntotst> Lg00101Gntotsts { get; set; }
        public virtual DbSet<Lg00101Gntotvrnt> Lg00101Gntotvrnts { get; set; }
        public virtual DbSet<Lg00101Guarantor> Lg00101Guarantors { get; set; }
        public virtual DbSet<Lg00101History> Lg00101Histories { get; set; }
        public virtual DbSet<Lg00101Impsrvrel> Lg00101Impsrvrels { get; set; }
        public virtual DbSet<Lg00101Instalcard> Lg00101Instalcards { get; set; }
        public virtual DbSet<Lg00101Invenval> Lg00101Invenvals { get; set; }
        public virtual DbSet<Lg00101Invenvalln> Lg00101Invenvallns { get; set; }
        public virtual DbSet<Lg00101Inveximinfo> Lg00101Inveximinfos { get; set; }
        public virtual DbSet<Lg00101Inveximline> Lg00101Inveximlines { get; set; }
        public virtual DbSet<Lg00101Invoice> Lg00101Invoices { get; set; }
        public virtual DbSet<Lg00101Invoiceexch> Lg00101Invoiceexches { get; set; }
        public virtual DbSet<Lg00101Invoiceintel> Lg00101Invoiceintels { get; set; }
        public virtual DbSet<Lg00101Itmwstot> Lg00101Itmwstots { get; set; }
        public virtual DbSet<Lg00101Journal> Lg00101Journals { get; set; }
        public virtual DbSet<Lg00101Ksdistdetline> Lg00101Ksdistdetlines { get; set; }
        public virtual DbSet<Lg00101Ksline> Lg00101Kslines { get; set; }
        public virtual DbSet<Lg00101Label> Lg00101Labels { get; set; }
        public virtual DbSet<Lg00101Ldxrecdelreq> Lg00101Ldxrecdelreqs { get; set; }
        public virtual DbSet<Lg00101Mbscrmrelp> Lg00101Mbscrmrelps { get; set; }
        public virtual DbSet<Lg00101Multiaddtaxln> Lg00101Multiaddtaxlns { get; set; }
        public virtual DbSet<Lg00101Okcinfo> Lg00101Okcinfos { get; set; }
        public virtual DbSet<Lg00101Ordfexch> Lg00101Ordfexches { get; set; }
        public virtual DbSet<Lg00101Ordlineexch> Lg00101Ordlineexches { get; set; }
        public virtual DbSet<Lg00101Ordpegging> Lg00101Ordpeggings { get; set; }
        public virtual DbSet<Lg00101Orfiche> Lg00101Orfiches { get; set; }
        public virtual DbSet<Lg00101Orfline> Lg00101Orflines { get; set; }
        public virtual DbSet<Lg00101Packageasgn> Lg00101Packageasgns { get; set; }
        public virtual DbSet<Lg00101Packagefcln> Lg00101Packagefclns { get; set; }
        public virtual DbSet<Lg00101Packagefiche> Lg00101Packagefiches { get; set; }
        public virtual DbSet<Lg00101Paytran> Lg00101Paytrans { get; set; }
        public virtual DbSet<Lg00101Perdoc> Lg00101Perdocs { get; set; }
        public virtual DbSet<Lg00101Plugin> Lg00101Plugins { get; set; }
        public virtual DbSet<Lg00101Prdcost> Lg00101Prdcosts { get; set; }
        public virtual DbSet<Lg00101Preaccdistdetline> Lg00101Preaccdistdetlines { get; set; }
        public virtual DbSet<Lg00101Processlog> Lg00101Processlogs { get; set; }
        public virtual DbSet<Lg00101Procurement> Lg00101Procurements { get; set; }
        public virtual DbSet<Lg00101Producer> Lg00101Producers { get; set; }
        public virtual DbSet<Lg00101Qprodline> Lg00101Qprodlines { get; set; }
        public virtual DbSet<Lg00101Qproduct> Lg00101Qproducts { get; set; }
        public virtual DbSet<Lg00101Reckeeping> Lg00101Reckeepings { get; set; }
        public virtual DbSet<Lg00101Reflectasgn> Lg00101Reflectasgns { get; set; }
        public virtual DbSet<Lg00101Remindhist> Lg00101Remindhists { get; set; }
        public virtual DbSet<Lg00101Responsehistory> Lg00101Responsehistories { get; set; }
        public virtual DbSet<Lg00101Rule> Lg00101Rules { get; set; }
        public virtual DbSet<Lg00101Rulehistory> Lg00101Rulehistories { get; set; }
        public virtual DbSet<Lg00101Serilotn> Lg00101Serilotns { get; set; }
        public virtual DbSet<Lg00101Slqcasgn> Lg00101Slqcasgns { get; set; }
        public virtual DbSet<Lg00101Sltran> Lg00101Sltrans { get; set; }
        public virtual DbSet<Lg00101Spectemplate> Lg00101Spectemplates { get; set; }
        public virtual DbSet<Lg00101Srvnum> Lg00101Srvnums { get; set; }
        public virtual DbSet<Lg00101Srvtot> Lg00101Srvtots { get; set; }
        public virtual DbSet<Lg00101Stfcextinf> Lg00101Stfcextinfs { get; set; }
        public virtual DbSet<Lg00101Stfexch> Lg00101Stfexches { get; set; }
        public virtual DbSet<Lg00101Stfiche> Lg00101Stfiches { get; set; }
        public virtual DbSet<Lg00101Stinven> Lg00101Stinvens { get; set; }
        public virtual DbSet<Lg00101Stinvtot> Lg00101Stinvtots { get; set; }
        public virtual DbSet<Lg00101Stline> Lg00101Stlines { get; set; }
        public virtual DbSet<Lg00101Stlinecost> Lg00101Stlinecosts { get; set; }
        public virtual DbSet<Lg00101Stlineexch> Lg00101Stlineexches { get; set; }
        public virtual DbSet<Lg00101Stlninfcoef> Lg00101Stlninfcoefs { get; set; }
        public virtual DbSet<Lg00101Stlniopegging> Lg00101Stlniopeggings { get; set; }
        public virtual DbSet<Lg00101Stshippedamount> Lg00101Stshippedamounts { get; set; }
        public virtual DbSet<Lg00101Tmpacasgn> Lg00101Tmpacasgns { get; set; }
        public virtual DbSet<Lg00101Transac> Lg00101Transacs { get; set; }
        public virtual DbSet<Lg00101Uetdscargoinfo> Lg00101Uetdscargoinfos { get; set; }
        public virtual DbSet<Lg00101Uetdsvoyage> Lg00101Uetdsvoyages { get; set; }
        public virtual DbSet<Lg00101Vrntinven> Lg00101Vrntinvens { get; set; }
        public virtual DbSet<Lg00101Vrntinvtot> Lg00101Vrntinvtots { get; set; }
        public virtual DbSet<Lg001Abudgetprd> Lg001Abudgetprds { get; set; }
        public virtual DbSet<Lg001Acccode> Lg001Acccodes { get; set; }
        public virtual DbSet<Lg001Accdisttemp> Lg001Accdisttemps { get; set; }
        public virtual DbSet<Lg001Accdisttempln> Lg001Accdisttemplns { get; set; }
        public virtual DbSet<Lg001Accounttemplate> Lg001Accounttemplates { get; set; }
        public virtual DbSet<Lg001Activityamnt> Lg001Activityamnts { get; set; }
        public virtual DbSet<Lg001Actovrhddist> Lg001Actovrhddists { get; set; }
        public virtual DbSet<Lg001Addtax> Lg001Addtaxes { get; set; }
        public virtual DbSet<Lg001Addtaxline> Lg001Addtaxlines { get; set; }
        public virtual DbSet<Lg001Anbudget> Lg001Anbudgets { get; set; }
        public virtual DbSet<Lg001Anbudgetln> Lg001Anbudgetlns { get; set; }
        public virtual DbSet<Lg001Anbudgetprd> Lg001Anbudgetprds { get; set; }
        public virtual DbSet<Lg001Appparam> Lg001Appparams { get; set; }
        public virtual DbSet<Lg001Approveuser> Lg001Approveusers { get; set; }
        public virtual DbSet<Lg001Ascond> Lg001Asconds { get; set; }
        public virtual DbSet<Lg001Autoctemplate> Lg001Autoctemplates { get; set; }
        public virtual DbSet<Lg001Avgcurr> Lg001Avgcurrs { get; set; }
        public virtual DbSet<Lg001Bankacc> Lg001Bankaccs { get; set; }
        public virtual DbSet<Lg001Barcodetmp> Lg001Barcodetmps { get; set; }
        public virtual DbSet<Lg001Bncard> Lg001Bncards { get; set; }
        public virtual DbSet<Lg001Bncreditcard> Lg001Bncreditcards { get; set; }
        public virtual DbSet<Lg001Bncrepaytr> Lg001Bncrepaytrs { get; set; }
        public virtual DbSet<Lg001Bomaster> Lg001Bomasters { get; set; }
        public virtual DbSet<Lg001Bomline> Lg001Bomlines { get; set; }
        public virtual DbSet<Lg001Bomparam> Lg001Bomparams { get; set; }
        public virtual DbSet<Lg001Bomrevsn> Lg001Bomrevsns { get; set; }
        public virtual DbSet<Lg001Bomvrntformula> Lg001Bomvrntformulas { get; set; }
        public virtual DbSet<Lg001Campaign> Lg001Campaigns { get; set; }
        public virtual DbSet<Lg001Cashflowdef> Lg001Cashflowdefs { get; set; }
        public virtual DbSet<Lg001Changelog> Lg001Changelogs { get; set; }
        public virtual DbSet<Lg001Charasgn> Lg001Charasgns { get; set; }
        public virtual DbSet<Lg001Charcode> Lg001Charcodes { get; set; }
        public virtual DbSet<Lg001Charset> Lg001Charsets { get; set; }
        public virtual DbSet<Lg001Charsetasgn> Lg001Charsetasgns { get; set; }
        public virtual DbSet<Lg001Charval> Lg001Charvals { get; set; }
        public virtual DbSet<Lg001Clcard> Lg001Clcards { get; set; }
        public virtual DbSet<Lg001Clintel> Lg001Clintels { get; set; }
        public virtual DbSet<Lg001Cmpgnline> Lg001Cmpgnlines { get; set; }
        public virtual DbSet<Lg001Companseacc> Lg001Companseaccs { get; set; }
        public virtual DbSet<Lg001Coprdbom> Lg001Coprdboms { get; set; }
        public virtual DbSet<Lg001Crdacref> Lg001Crdacrefs { get; set; }
        public virtual DbSet<Lg001Creditletter> Lg001Creditletters { get; set; }
        public virtual DbSet<Lg001Decard> Lg001Decards { get; set; }
        public virtual DbSet<Lg001Deductlimit> Lg001Deductlimits { get; set; }
        public virtual DbSet<Lg001Defnfldscardv> Lg001Defnfldscardvs { get; set; }
        public virtual DbSet<Lg001Discpayline> Lg001Discpaylines { get; set; }
        public virtual DbSet<Lg001Displine> Lg001Displines { get; set; }
        public virtual DbSet<Lg001Displinecost> Lg001Displinecosts { get; set; }
        public virtual DbSet<Lg001Distline> Lg001Distlines { get; set; }
        public virtual DbSet<Lg001Distlist> Lg001Distlists { get; set; }
        public virtual DbSet<Lg001Distrouting> Lg001Distroutings { get; set; }
        public virtual DbSet<Lg001Distroutline> Lg001Distroutlines { get; set; }
        public virtual DbSet<Lg001Disttemp> Lg001Disttemps { get; set; }
        public virtual DbSet<Lg001Distvehicle> Lg001Distvehicles { get; set; }
        public virtual DbSet<Lg001Divamain> Lg001Divamains { get; set; }
        public virtual DbSet<Lg001Dsplnopcmppg> Lg001Dsplnopcmppgs { get; set; }
        public virtual DbSet<Lg001Ebookinfo> Lg001Ebookinfos { get; set; }
        public virtual DbSet<Lg001Ebookparam> Lg001Ebookparams { get; set; }
        public virtual DbSet<Lg001Emcenter> Lg001Emcenters { get; set; }
        public virtual DbSet<Lg001Emgrpass> Lg001Emgrpasses { get; set; }
        public virtual DbSet<Lg001Empgroup> Lg001Empgroups { get; set; }
        public virtual DbSet<Lg001Employee> Lg001Employees { get; set; }
        public virtual DbSet<Lg001Emuhacc> Lg001Emuhaccs { get; set; }
        public virtual DbSet<Lg001Emuhaccsubaccasgn> Lg001Emuhaccsubaccasgns { get; set; }
        public virtual DbSet<Lg001Engcline> Lg001Engclines { get; set; }
        public virtual DbSet<Lg001Except> Lg001Excepts { get; set; }
        public virtual DbSet<Lg001Eximbustyp> Lg001Eximbustyps { get; set; }
        public virtual DbSet<Lg001Expcreditcrd> Lg001Expcreditcrds { get; set; }
        public virtual DbSet<Lg001Expcreditln> Lg001Expcreditlns { get; set; }
        public virtual DbSet<Lg001Faanncost> Lg001Faanncosts { get; set; }
        public virtual DbSet<Lg001Faexpense> Lg001Faexpenses { get; set; }
        public virtual DbSet<Lg001Faprodnum> Lg001Faprodnums { get; set; }
        public virtual DbSet<Lg001Faregist> Lg001Faregists { get; set; }
        public virtual DbSet<Lg001Faregnewvalue> Lg001Faregnewvalues { get; set; }
        public virtual DbSet<Lg001Fatran> Lg001Fatrans { get; set; }
        public virtual DbSet<Lg001Fayear> Lg001Fayears { get; set; }
        public virtual DbSet<Lg001Fayearstop> Lg001Fayearstops { get; set; }
        public virtual DbSet<Lg001Fichestatus> Lg001Fichestatuses { get; set; }
        public virtual DbSet<Lg001Fintableitem> Lg001Fintableitems { get; set; }
        public virtual DbSet<Lg001Fintblheader> Lg001Fintblheaders { get; set; }
        public virtual DbSet<Lg001Fintbllineacc> Lg001Fintbllineaccs { get; set; }
        public virtual DbSet<Lg001Firmdoc> Lg001Firmdocs { get; set; }
        public virtual DbSet<Lg001Forecasthead> Lg001Forecastheads { get; set; }
        public virtual DbSet<Lg001Forecastline> Lg001Forecastlines { get; set; }
        public virtual DbSet<Lg001Frmprdparam> Lg001Frmprdparams { get; set; }
        public virtual DbSet<Lg001Gaugparam> Lg001Gaugparams { get; set; }
        public virtual DbSet<Lg001Genmodp> Lg001Genmodps { get; set; }
        public virtual DbSet<Lg001Germanydef> Lg001Germanydefs { get; set; }
        public virtual DbSet<Lg001Glassgn> Lg001Glassgns { get; set; }
        public virtual DbSet<Lg001Glconnfilt> Lg001Glconnfilts { get; set; }
        public virtual DbSet<Lg001Guaranteeline> Lg001Guaranteelines { get; set; }
        public virtual DbSet<Lg001History> Lg001Histories { get; set; }
        public virtual DbSet<Lg001Invdef> Lg001Invdefs { get; set; }
        public virtual DbSet<Lg001Item> Lg001Items { get; set; }
        public virtual DbSet<Lg001Itemcategory> Lg001Itemcategories { get; set; }
        public virtual DbSet<Lg001Itemcategoryline> Lg001Itemcategorylines { get; set; }
        public virtual DbSet<Lg001Itemobtainlimit> Lg001Itemobtainlimits { get; set; }
        public virtual DbSet<Lg001Itemsub> Lg001Itemsubs { get; set; }
        public virtual DbSet<Lg001Itmboma> Lg001Itmbomas { get; set; }
        public virtual DbSet<Lg001Itmclsa> Lg001Itmclsas { get; set; }
        public virtual DbSet<Lg001Itmfactp> Lg001Itmfactps { get; set; }
        public virtual DbSet<Lg001Itmlvltmp> Lg001Itmlvltmps { get; set; }
        public virtual DbSet<Lg001Itmlvltmpln> Lg001Itmlvltmplns { get; set; }
        public virtual DbSet<Lg001Itmunitum> Lg001Itmunita { get; set; }
        public virtual DbSet<Lg001Itmwsdef> Lg001Itmwsdefs { get; set; }
        public virtual DbSet<Lg001Kscard> Lg001Kscards { get; set; }
        public virtual DbSet<Lg001Laborreq> Lg001Laborreqs { get; set; }
        public virtual DbSet<Lg001Leasingpayment> Lg001Leasingpayments { get; set; }
        public virtual DbSet<Lg001Leasingpaymentsln> Lg001Leasingpaymentslns { get; set; }
        public virtual DbSet<Lg001Leasingreg> Lg001Leasingregs { get; set; }
        public virtual DbSet<Lg001Leasingregln> Lg001Leasingreglns { get; set; }
        public virtual DbSet<Lg001Lngexcset> Lg001Lngexcsets { get; set; }
        public virtual DbSet<Lg001Lnopasgn> Lg001Lnopasgns { get; set; }
        public virtual DbSet<Lg001Location> Lg001Locations { get; set; }
        public virtual DbSet<Lg001Locationsfor> Lg001Locationsfors { get; set; }
        public virtual DbSet<Lg001Logrep> Lg001Logreps { get; set; }
        public virtual DbSet<Lg001Maintanenceline> Lg001Maintanencelines { get; set; }
        public virtual DbSet<Lg001Mark> Lg001Marks { get; set; }
        public virtual DbSet<Lg001Market> Lg001Markets { get; set; }
        public virtual DbSet<Lg001Mblinfogroup> Lg001Mblinfogroups { get; set; }
        public virtual DbSet<Lg001Mblinfouser> Lg001Mblinfousers { get; set; }
        public virtual DbSet<Lg001Mblinfusrgrpln> Lg001Mblinfusrgrplns { get; set; }
        public virtual DbSet<Lg001Mbscrmrelf> Lg001Mbscrmrelves { get; set; }
        public virtual DbSet<Lg001Mntdemandfiche> Lg001Mntdemandfiches { get; set; }
        public virtual DbSet<Lg001Mntdemandline> Lg001Mntdemandlines { get; set; }
        public virtual DbSet<Lg001Mntlifehist> Lg001Mntlifehists { get; set; }
        public virtual DbSet<Lg001Mntorderfiche> Lg001Mntorderfiches { get; set; }
        public virtual DbSet<Lg001Mntorderline> Lg001Mntorderlines { get; set; }
        public virtual DbSet<Lg001Mnttemplate> Lg001Mnttemplates { get; set; }
        public virtual DbSet<Lg001Mnttemplateasgn> Lg001Mnttemplateasgns { get; set; }
        public virtual DbSet<Lg001Mnttemplateline> Lg001Mnttemplatelines { get; set; }
        public virtual DbSet<Lg001Mobileasset> Lg001Mobileassets { get; set; }
        public virtual DbSet<Lg001Moldreq> Lg001Moldreqs { get; set; }
        public virtual DbSet<Lg001Mrphead> Lg001Mrpheads { get; set; }
        public virtual DbSet<Lg001Mrpitem> Lg001Mrpitems { get; set; }
        public virtual DbSet<Lg001Mrpitemchg> Lg001Mrpitemchgs { get; set; }
        public virtual DbSet<Lg001Mrpline> Lg001Mrplines { get; set; }
        public virtual DbSet<Lg001Mrppegging> Lg001Mrppeggings { get; set; }
        public virtual DbSet<Lg001Mrpproposal> Lg001Mrpproposals { get; set; }
        public virtual DbSet<Lg001Msgtemplate> Lg001Msgtemplates { get; set; }
        public virtual DbSet<Lg001Multiaddtax> Lg001Multiaddtaxes { get; set; }
        public virtual DbSet<Lg001Nmmsgtemplate> Lg001Nmmsgtemplates { get; set; }
        public virtual DbSet<Lg001Occupation> Lg001Occupations { get; set; }
        public virtual DbSet<Lg001Offfcexch> Lg001Offfcexches { get; set; }
        public virtual DbSet<Lg001Offlineexch> Lg001Offlineexches { get; set; }
        public virtual DbSet<Lg001Opattasg> Lg001Opattasgs { get; set; }
        public virtual DbSet<Lg001Opertion> Lg001Opertions { get; set; }
        public virtual DbSet<Lg001Opreqactivity> Lg001Opreqactivities { get; set; }
        public virtual DbSet<Lg001Oprtreq> Lg001Oprtreqs { get; set; }
        public virtual DbSet<Lg001Overhead> Lg001Overheads { get; set; }
        public virtual DbSet<Lg001Ovhcdistrate> Lg001Ovhcdistrates { get; set; }
        public virtual DbSet<Lg001Ovhdtran> Lg001Ovhdtrans { get; set; }
        public virtual DbSet<Lg001Ovrhdaccref> Lg001Ovrhdaccrefs { get; set; }
        public virtual DbSet<Lg001Ovrhdcenter> Lg001Ovrhdcenters { get; set; }
        public virtual DbSet<Lg001Ovrhdcenterln> Lg001Ovrhdcenterlns { get; set; }
        public virtual DbSet<Lg001Paramasgn> Lg001Paramasgns { get; set; }
        public virtual DbSet<Lg001Payline> Lg001Paylines { get; set; }
        public virtual DbSet<Lg001Payplan> Lg001Payplans { get; set; }
        public virtual DbSet<Lg001Pegging> Lg001Peggings { get; set; }
        public virtual DbSet<Lg001Perftest> Lg001Perftests { get; set; }
        public virtual DbSet<Lg001Poaccref> Lg001Poaccrefs { get; set; }
        public virtual DbSet<Lg001Poline> Lg001Polines { get; set; }
        public virtual DbSet<Lg001Prcard> Lg001Prcards { get; set; }
        public virtual DbSet<Lg001Prclist> Lg001Prclists { get; set; }
        public virtual DbSet<Lg001Prclstdiv> Lg001Prclstdivs { get; set; }
        public virtual DbSet<Lg001Prevdispline> Lg001Prevdisplines { get; set; }
        public virtual DbSet<Lg001Printlimit> Lg001Printlimits { get; set; }
        public virtual DbSet<Lg001Prodord> Lg001Prodords { get; set; }
        public virtual DbSet<Lg001Producerparam> Lg001Producerparams { get; set; }
        public virtual DbSet<Lg001Productline> Lg001Productlines { get; set; }
        public virtual DbSet<Lg001Project> Lg001Projects { get; set; }
        public virtual DbSet<Lg001Prvopasg> Lg001Prvopasgs { get; set; }
        public virtual DbSet<Lg001Purchoffer> Lg001Purchoffers { get; set; }
        public virtual DbSet<Lg001Purchofferln> Lg001Purchofferlns { get; set; }
        public virtual DbSet<Lg001Qasgn> Lg001Qasgns { get; set; }
        public virtual DbSet<Lg001Qclval> Lg001Qclvals { get; set; }
        public virtual DbSet<Lg001Qcset> Lg001Qcsets { get; set; }
        public virtual DbSet<Lg001Qcsline> Lg001Qcslines { get; set; }
        public virtual DbSet<Lg001Qctransferparam> Lg001Qctransferparams { get; set; }
        public virtual DbSet<Lg001Reckeeping> Lg001Reckeepings { get; set; }
        public virtual DbSet<Lg001Reflect> Lg001Reflects { get; set; }
        public virtual DbSet<Lg001Reflecttran> Lg001Reflecttrans { get; set; }
        public virtual DbSet<Lg001Relateddoc> Lg001Relateddocs { get; set; }
        public virtual DbSet<Lg001Repayplan> Lg001Repayplans { get; set; }
        public virtual DbSet<Lg001Repayplan1> Lg001Repayplans1 { get; set; }
        public virtual DbSet<Lg001Repayplansln> Lg001Repayplanslns { get; set; }
        public virtual DbSet<Lg001Repqueue> Lg001Repqueues { get; set; }
        public virtual DbSet<Lg001Rettaxpegg> Lg001Rettaxpeggs { get; set; }
        public virtual DbSet<Lg001Route> Lg001Routes { get; set; }
        public virtual DbSet<Lg001Routetr> Lg001Routetrs { get; set; }
        public virtual DbSet<Lg001Routing> Lg001Routings { get; set; }
        public virtual DbSet<Lg001Rtngline> Lg001Rtnglines { get; set; }
        public virtual DbSet<Lg001Sectormain> Lg001Sectormains { get; set; }
        public virtual DbSet<Lg001Sectorsub> Lg001Sectorsubs { get; set; }
        public virtual DbSet<Lg001Selchval> Lg001Selchvals { get; set; }
        public virtual DbSet<Lg001Shftasgn> Lg001Shftasgns { get; set; }
        public virtual DbSet<Lg001Shfttime> Lg001Shfttimes { get; set; }
        public virtual DbSet<Lg001Shift> Lg001Shifts { get; set; }
        public virtual DbSet<Lg001Shipinfo> Lg001Shipinfos { get; set; }
        public virtual DbSet<Lg001Slsclrel> Lg001Slsclrels { get; set; }
        public virtual DbSet<Lg001Specode> Lg001Specodes { get; set; }
        public virtual DbSet<Lg001Spevallnscore> Lg001Spevallnscores { get; set; }
        public virtual DbSet<Lg001Srvcard> Lg001Srvcards { get; set; }
        public virtual DbSet<Lg001Srvunitum> Lg001Srvunita { get; set; }
        public virtual DbSet<Lg001Stcompln> Lg001Stcomplns { get; set; }
        public virtual DbSet<Lg001Stdbomcost> Lg001Stdbomcosts { get; set; }
        public virtual DbSet<Lg001Stdcost> Lg001Stdcosts { get; set; }
        public virtual DbSet<Lg001Stdcostperiod> Lg001Stdcostperiods { get; set; }
        public virtual DbSet<Lg001Stdunitcost> Lg001Stdunitcosts { get; set; }
        public virtual DbSet<Lg001Stopasgn> Lg001Stopasgns { get; set; }
        public virtual DbSet<Lg001Stopcause> Lg001Stopcauses { get; set; }
        public virtual DbSet<Lg001Stoptran> Lg001Stoptrans { get; set; }
        public virtual DbSet<Lg001Suppasgn> Lg001Suppasgns { get; set; }
        public virtual DbSet<Lg001Suppcrset> Lg001Suppcrsets { get; set; }
        public virtual DbSet<Lg001Suppcrsetln> Lg001Suppcrsetlns { get; set; }
        public virtual DbSet<Lg001Suppcrsetsub> Lg001Suppcrsetsubs { get; set; }
        public virtual DbSet<Lg001Suppevalcr> Lg001Suppevalcrs { get; set; }
        public virtual DbSet<Lg001Suppevalcrln> Lg001Suppevalcrlns { get; set; }
        public virtual DbSet<Lg001Suppevalfiche> Lg001Suppevalfiches { get; set; }
        public virtual DbSet<Lg001Suppevaltran> Lg001Suppevaltrans { get; set; }
        public virtual DbSet<Lg001Suppevaltrset> Lg001Suppevaltrsets { get; set; }
        public virtual DbSet<Lg001Suppevaltrsub> Lg001Suppevaltrsubs { get; set; }
        public virtual DbSet<Lg001Target> Lg001Targets { get; set; }
        public virtual DbSet<Lg001Taxdeclhdr> Lg001Taxdeclhdrs { get; set; }
        public virtual DbSet<Lg001Taxdeclline> Lg001Taxdecllines { get; set; }
        public virtual DbSet<Lg001Taxdecllineacc> Lg001Taxdecllineaccs { get; set; }
        public virtual DbSet<Lg001Toolreq> Lg001Toolreqs { get; set; }
        public virtual DbSet<Lg001Tradgrpayplancon> Lg001Tradgrpayplancons { get; set; }
        public virtual DbSet<Lg001Trgpar> Lg001Trgpars { get; set; }
        public virtual DbSet<Lg001Tsksheln> Lg001Tskshelns { get; set; }
        public virtual DbSet<Lg001Ucostcontrol> Lg001Ucostcontrols { get; set; }
        public virtual DbSet<Lg001Unitbarcode> Lg001Unitbarcodes { get; set; }
        public virtual DbSet<Lg001Unitsetc> Lg001Unitsetcs { get; set; }
        public virtual DbSet<Lg001Unitsetf> Lg001Unitsetfs { get; set; }
        public virtual DbSet<Lg001Unitsetl> Lg001Unitsetls { get; set; }
        public virtual DbSet<Lg001Utilinvmtch> Lg001Utilinvmtches { get; set; }
        public virtual DbSet<Lg001Utilinvmtchln> Lg001Utilinvmtchlns { get; set; }
        public virtual DbSet<Lg001Variant> Lg001Variants { get; set; }
        public virtual DbSet<Lg001Vehicleclship> Lg001Vehicleclships { get; set; }
        public virtual DbSet<Lg001Vehiclewhouse> Lg001Vehiclewhouses { get; set; }
        public virtual DbSet<Lg001Vrntcharasgn> Lg001Vrntcharasgns { get; set; }
        public virtual DbSet<Lg001Vrntgenericinf> Lg001Vrntgenericinfs { get; set; }
        public virtual DbSet<Lg001Wflowrole> Lg001Wflowroles { get; set; }
        public virtual DbSet<Lg001Wflowroleln> Lg001Wflowrolelns { get; set; }
        public virtual DbSet<Lg001Wftask> Lg001Wftasks { get; set; }
        public virtual DbSet<Lg001Wftaskper> Lg001Wftaskpers { get; set; }
        public virtual DbSet<Lg001Whlist> Lg001Whlists { get; set; }
        public virtual DbSet<Lg001Workday> Lg001Workdays { get; set; }
        public virtual DbSet<Lg001Workflowcard> Lg001Workflowcards { get; set; }
        public virtual DbSet<Lg001Workflowline> Lg001Workflowlines { get; set; }
        public virtual DbSet<Lg001Workstat> Lg001Workstats { get; set; }
        public virtual DbSet<Lg001Wsattasg> Lg001Wsattasgs { get; set; }
        public virtual DbSet<Lg001Wsattva> Lg001Wsattvas { get; set; }
        public virtual DbSet<Lg001Wschcode> Lg001Wschcodes { get; set; }
        public virtual DbSet<Lg001Wschval> Lg001Wschvals { get; set; }
        public virtual DbSet<Lg001Wsgrpass> Lg001Wsgrpasses { get; set; }
        public virtual DbSet<Lg001Wsgrpf> Lg001Wsgrpfs { get; set; }
        public virtual DbSet<Lg001Wsovhcasgn> Lg001Wsovhcasgns { get; set; }
        public virtual DbSet<Lg001Wstatpart> Lg001Wstatparts { get; set; }
        public virtual DbSet<LgActpepl> LgActpepls { get; set; }
        public virtual DbSet<LgCateglist> LgCateglists { get; set; }
        public virtual DbSet<LgCntslsmasg> LgCntslsmasgs { get; set; }
        public virtual DbSet<LgContact> LgContacts { get; set; }
        public virtual DbSet<LgContspecday> LgContspecdays { get; set; }
        public virtual DbSet<LgCstvnd> LgCstvnds { get; set; }
        public virtual DbSet<LgCvarpasg> LgCvarpasgs { get; set; }
        public virtual DbSet<LgCvindasg> LgCvindasgs { get; set; }
        public virtual DbSet<LgFirmdoc> LgFirmdocs { get; set; }
        public virtual DbSet<LgHistory> LgHistories { get; set; }
        public virtual DbSet<LgIndustry> LgIndustries { get; set; }
        public virtual DbSet<LgNtlck000> LgNtlck000s { get; set; }
        public virtual DbSet<LgNtlck001> LgNtlck001s { get; set; }
        public virtual DbSet<LgSati> LgSatis { get; set; }
        public virtual DbSet<LgSatifilter> LgSatifilters { get; set; }
        public virtual DbSet<LgSlsactiv> LgSlsactivs { get; set; }
        public virtual DbSet<LgSlsclrel> LgSlsclrels { get; set; }
        public virtual DbSet<LgSlsdoc> LgSlsdocs { get; set; }
        public virtual DbSet<LgSlsfile> LgSlsfiles { get; set; }
        public virtual DbSet<LgSlsman> LgSlsmen { get; set; }
        public virtual DbSet<LgSlsohistory> LgSlsohistories { get; set; }
        public virtual DbSet<LgSlsoppor> LgSlsoppors { get; set; }
        public virtual DbSet<LgUsagestat> LgUsagestats { get; set; }
        public virtual DbSet<Logrpflt> Logrpflts { get; set; }
        public virtual DbSet<Logrplay> Logrplays { get; set; }
        public virtual DbSet<Lv00101Bnfline> Lv00101Bnflines { get; set; }
        public virtual DbSet<Lv00101Clcard> Lv00101Clcards { get; set; }
        public virtual DbSet<Lv00101Clekstre> Lv00101Clekstres { get; set; }
        public virtual DbSet<Lv00101Clfline> Lv00101Clflines { get; set; }
        public virtual DbSet<Lv00101Cltotfil> Lv00101Cltotfils { get; set; }
        public virtual DbSet<Lv00101Cltotfilv1> Lv00101Cltotfilv1s { get; set; }
        public virtual DbSet<Lv00101Cscard> Lv00101Cscards { get; set; }
        public virtual DbSet<Lv00101Emuhtot> Lv00101Emuhtots { get; set; }
        public virtual DbSet<Lv00101Emuhtotv1> Lv00101Emuhtotv1s { get; set; }
        public virtual DbSet<Lv00101Emuhtotv2> Lv00101Emuhtotv2s { get; set; }
        public virtual DbSet<Lv00101Emuhtotv3> Lv00101Emuhtotv3s { get; set; }
        public virtual DbSet<Lv00101Eximdistpeg> Lv00101Eximdistpegs { get; set; }
        public virtual DbSet<Lv00101Gntotcl> Lv00101Gntotcls { get; set; }
        public virtual DbSet<Lv00101Gntotst> Lv00101Gntotsts { get; set; }
        public virtual DbSet<Lv00101Gntotvrnt> Lv00101Gntotvrnts { get; set; }
        public virtual DbSet<Lv00101Multiaddtaxln> Lv00101Multiaddtaxlns { get; set; }
        public virtual DbSet<Lv00101Orfline> Lv00101Orflines { get; set; }
        public virtual DbSet<Lv00101Srvnum> Lv00101Srvnums { get; set; }
        public virtual DbSet<Lv00101Srvtot> Lv00101Srvtots { get; set; }
        public virtual DbSet<Lv00101Stinven> Lv00101Stinvens { get; set; }
        public virtual DbSet<Lv00101Stinvtot> Lv00101Stinvtots { get; set; }
        public virtual DbSet<Lv00101StinvtotV1> Lv00101StinvtotV1s { get; set; }
        public virtual DbSet<Lv00101StinvtotV2> Lv00101StinvtotV2s { get; set; }
        public virtual DbSet<Lv00101StinvtotV3> Lv00101StinvtotV3s { get; set; }
        public virtual DbSet<Lv00101StinvtotV4> Lv00101StinvtotV4s { get; set; }
        public virtual DbSet<Lv00101StinvtotV5> Lv00101StinvtotV5s { get; set; }
        public virtual DbSet<Lv00101Stline> Lv00101Stlines { get; set; }
        public virtual DbSet<Lv00101Stlineforinvcalc> Lv00101Stlineforinvcalcs { get; set; }
        public virtual DbSet<Lv00101Trdgrp> Lv00101Trdgrps { get; set; }
        public virtual DbSet<Lv00101Vrntinven> Lv00101Vrntinvens { get; set; }
        public virtual DbSet<Lv00101Vrntinvtot> Lv00101Vrntinvtots { get; set; }
        public virtual DbSet<Lv001Clcard> Lv001Clcards { get; set; }
        public virtual DbSet<Lv001Item> Lv001Items { get; set; }
        public virtual DbSet<Lv001OrderItem> Lv001OrderItems { get; set; }
        public virtual DbSet<Lv001OrderService> Lv001OrderServices { get; set; }
        public virtual DbSet<Lv001Qcfichecheck> Lv001Qcfichechecks { get; set; }
        public virtual DbSet<Lv001Qcparamcheck> Lv001Qcparamchecks { get; set; }
        public virtual DbSet<Lv001SalesItem> Lv001SalesItems { get; set; }
        public virtual DbSet<Lv001SalesItemsTotal> Lv001SalesItemsTotals { get; set; }
        public virtual DbSet<Lv001SalesService> Lv001SalesServices { get; set; }
        public virtual DbSet<Lv001SalesServiceTotal> Lv001SalesServiceTotals { get; set; }
        public virtual DbSet<Report> Reports { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Server=DESKTOP-BHQ87CQ\\SQLEXPRESS;Database=TİGER3;User Id=sa;Password=Password01?;");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Turkish_CI_AS");

            modelBuilder.Entity<LAdlog>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("ADLOGS_I1");

                entity.ToTable("L_ADLOGS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addate)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("ADDATE");

                entity.Property(e => e.Adinfo)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("ADINFO");

                entity.Property(e => e.Admsg)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("ADMSG");

                entity.Property(e => e.Adtime)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("ADTIME");

                entity.Property(e => e.Aduser)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("ADUSER");
            });

            modelBuilder.Entity<LBankcode>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("BANKCODE_I1");

                entity.ToTable("L_BANKCODE");

                entity.HasIndex(e => new { e.Cntrnr, e.Code }, "BANKCODE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "BANKCODE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bicode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BICODE");

                entity.Property(e => e.Cntrnr).HasColumnName("CNTRNR");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Corrpacc)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CORRPACC");

                entity.Property(e => e.Edicode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EDICODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Voen)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VOEN");
            });

            modelBuilder.Entity<LBnbranch>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("BNBRANCH_I1");

                entity.ToTable("L_BNBRANCH");

                entity.HasIndex(e => new { e.Cntrnr, e.Bankref, e.Code }, "BNBRANCH_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "BNBRANCH_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bankref).HasColumnName("BANKREF");

                entity.Property(e => e.Cntrnr).HasColumnName("CNTRNR");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Edicode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EDICODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<LBrwsstat>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("BRWSSTAT_I1");

                entity.ToTable("L_BRWSSTAT");

                entity.HasIndex(e => new { e.Owner, e.Brwnr }, "BRWSSTAT_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Activated).HasColumnName("ACTIVATED");

                entity.Property(e => e.Brwnr).HasColumnName("BRWNR");

                entity.Property(e => e.Curref).HasColumnName("CURREF");

                entity.Property(e => e.Doctype).HasColumnName("DOCTYPE");

                entity.Property(e => e.Idxnr).HasColumnName("IDXNR");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.Stattype).HasColumnName("STATTYPE");
            });

            modelBuilder.Entity<LCapidept>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIDEPT_I1");

                entity.ToTable("L_CAPIDEPT");

                entity.HasIndex(e => new { e.Firmnr, e.Nr }, "CAPIDEPT_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Firmnr, e.Name }, "CAPIDEPT_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Moddate)
                    .HasColumnType("datetime")
                    .HasColumnName("MODDATE");

                entity.Property(e => e.Modtime).HasColumnName("MODTIME");

                entity.Property(e => e.Name)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Netflag)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("NETFLAG");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Passive).HasColumnName("PASSIVE");

                entity.Property(e => e.Userext).HasColumnName("USEREXT");
            });

            modelBuilder.Entity<LCapidiv>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIDIV_I1");

                entity.ToTable("L_CAPIDIV");

                entity.HasIndex(e => new { e.Firmnr, e.Nr }, "CAPIDIV_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Firmnr, e.Name }, "CAPIDIV_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Backupebooks).HasColumnName("BACKUPEBOOKS");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Cntrycode)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CNTRYCODE");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Cpachambnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CPACHAMBNR");

                entity.Property(e => e.Cpacity)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CPACITY");

                entity.Property(e => e.Cpacntrycode)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CPACNTRYCODE");

                entity.Property(e => e.Cpacontractdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CPACONTRACTDATE");

                entity.Property(e => e.Cpacontractdesc)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPACONTRACTDESC");

                entity.Property(e => e.Cpacontractnumber)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPACONTRACTNUMBER");

                entity.Property(e => e.Cpacontracttype)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPACONTRACTTYPE");

                entity.Property(e => e.Cpacountry)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CPACOUNTRY");

                entity.Property(e => e.Cpadistrict)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CPADISTRICT");

                entity.Property(e => e.Cpadoornr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CPADOORNR");

                entity.Property(e => e.Cpaemail)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPAEMAIL");

                entity.Property(e => e.Cpafaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CPAFAXNR");

                entity.Property(e => e.Cpaidtcno)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CPAIDTCNO");

                entity.Property(e => e.Cpaisebookkeptbyfirm).HasColumnName("CPAISEBOOKKEPTBYFIRM");

                entity.Property(e => e.Cpaisymmcontractmade).HasColumnName("CPAISYMMCONTRACTMADE");

                entity.Property(e => e.Cpaname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("CPANAME");

                entity.Property(e => e.Cpaparole)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CPAPAROLE");

                entity.Property(e => e.Cpapasswordtaxdecl)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CPAPASSWORDTAXDECL");

                entity.Property(e => e.Cpaphone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CPAPHONE");

                entity.Property(e => e.Cparoad)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CPAROAD");

                entity.Property(e => e.Cpastreet)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CPASTREET");

                entity.Property(e => e.Cpasurname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("CPASURNAME");

                entity.Property(e => e.Cpataxnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CPATAXNR");

                entity.Property(e => e.Cpataxoff)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPATAXOFF");

                entity.Property(e => e.Cpatitle).HasColumnName("CPATITLE");

                entity.Property(e => e.Cpausercode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CPAUSERCODE");

                entity.Property(e => e.Cpaymmcontdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CPAYMMCONTDATE");

                entity.Property(e => e.Cpaymmcontdesc)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPAYMMCONTDESC");

                entity.Property(e => e.Cpaymmcontnumber)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPAYMMCONTNUMBER");

                entity.Property(e => e.Cpaymmconttype)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPAYMMCONTTYPE");

                entity.Property(e => e.Cpaymmemail)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPAYMMEMAIL");

                entity.Property(e => e.Cpaymmfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CPAYMMFAXNR");

                entity.Property(e => e.Cpaymmname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("CPAYMMNAME");

                entity.Property(e => e.Cpaymmphone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CPAYMMPHONE");

                entity.Property(e => e.Cpaymmsurname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("CPAYMMSURNAME");

                entity.Property(e => e.Cpazipcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CPAZIPCODE");

                entity.Property(e => e.Csgbfileno)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CSGBFILENO");

                entity.Property(e => e.Csgbworkcode)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CSGBWORKCODE");

                entity.Property(e => e.District)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Divpassword)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DIVPASSWORD");

                entity.Property(e => e.Doornr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DOORNR");

                entity.Property(e => e.Earcentdefaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EARCENTDEFADDR");

                entity.Property(e => e.Earcentpass)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EARCENTPASS");

                entity.Property(e => e.Earcentsend).HasColumnName("EARCENTSEND");

                entity.Property(e => e.Earcentuser)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EARCENTUSER");

                entity.Property(e => e.Earchivetype).HasColumnName("EARCHIVETYPE");

                entity.Property(e => e.Ebookcurrtype).HasColumnName("EBOOKCURRTYPE");

                entity.Property(e => e.Ebookdivname)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("EBOOKDIVNAME");

                entity.Property(e => e.Ebookfileno).HasColumnName("EBOOKFILENO");

                entity.Property(e => e.Ebookfirmname)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("EBOOKFIRMNAME");

                entity.Property(e => e.Ebookfirmtitle)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EBOOKFIRMTITLE");

                entity.Property(e => e.Ebookstartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("EBOOKSTARTDATE");

                entity.Property(e => e.Einvcustom).HasColumnName("EINVCUSTOM");

                entity.Property(e => e.Einvoicetypsgk).HasColumnName("EINVOICETYPSGK");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Fax)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("FAX");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Firmtype).HasColumnName("FIRMTYPE");

                entity.Property(e => e.Founddate)
                    .HasColumnType("datetime")
                    .HasColumnName("FOUNDDATE");

                entity.Property(e => e.Indsector)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INDSECTOR");

                entity.Property(e => e.Intsalesaddr)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("INTSALESADDR");

                entity.Property(e => e.Iskurdept)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ISKURDEPT");

                entity.Property(e => e.Iskurnr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ISKURNR");

                entity.Property(e => e.Iskurpass)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("ISKURPASS");

                entity.Property(e => e.Iskurtckno)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("ISKURTCKNO");

                entity.Property(e => e.Lastcontrolno).HasColumnName("LASTCONTROLNO");

                entity.Property(e => e.Lastgloblineno).HasColumnName("LASTGLOBLINENO");

                entity.Property(e => e.Lastjournalno).HasColumnName("LASTJOURNALNO");

                entity.Property(e => e.Locationtype).HasColumnName("LOCATIONTYPE");

                entity.Property(e => e.Locbranchaddressnr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("LOCBRANCHADDRESSNR");

                entity.Property(e => e.Locbranchcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("LOCBRANCHCODE");

                entity.Property(e => e.Logoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("LOGOID");

                entity.Property(e => e.Mersisno)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("MERSISNO");

                entity.Property(e => e.Moddate)
                    .HasColumnType("datetime")
                    .HasColumnName("MODDATE");

                entity.Property(e => e.Modtime).HasColumnName("MODTIME");

                entity.Property(e => e.Nacecode)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NACECODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Passive).HasColumnName("PASSIVE");

                entity.Property(e => e.Phone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("PHONE");

                entity.Property(e => e.Postlabelcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("POSTLABELCODE");

                entity.Property(e => e.Postlabelcodedesp)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("POSTLABELCODEDESP");

                entity.Property(e => e.Propertystatus).HasColumnName("PROPERTYSTATUS");

                entity.Property(e => e.Road)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ROAD");

                entity.Property(e => e.Securnr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SECURNR");

                entity.Property(e => e.Senderlabelcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("SENDERLABELCODE");

                entity.Property(e => e.Senderlabelcodedesp)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("SENDERLABELCODEDESP");

                entity.Property(e => e.Sgksyspass)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SGKSYSPASS");

                entity.Property(e => e.Sgkusercode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SGKUSERCODE");

                entity.Property(e => e.Sgkusername)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SGKUSERNAME");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Street)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("STREET");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Taxoff)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFF");

                entity.Property(e => e.Taxoffcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFFCODE");

                entity.Property(e => e.Taxpayercode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("TAXPAYERCODE");

                entity.Property(e => e.Taxpayername)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("TAXPAYERNAME");

                entity.Property(e => e.Title)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TITLE");

                entity.Property(e => e.Traderegcode).HasColumnName("TRADEREGCODE");

                entity.Property(e => e.Traderegisno)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("TRADEREGISNO");

                entity.Property(e => e.Useearchive).HasColumnName("USEEARCHIVE");

                entity.Property(e => e.Useebook).HasColumnName("USEEBOOK");

                entity.Property(e => e.Useedespatch).HasColumnName("USEEDESPATCH");

                entity.Property(e => e.Useeinv).HasColumnName("USEEINV");

                entity.Property(e => e.Useeproducerrec).HasColumnName("USEEPRODUCERREC");

                entity.Property(e => e.Useetradesmaninv).HasColumnName("USEETRADESMANINV");

                entity.Property(e => e.Usepaperinv).HasColumnName("USEPAPERINV");

                entity.Property(e => e.Userext).HasColumnName("USEREXT");

                entity.Property(e => e.Webadd)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("WEBADD");

                entity.Property(e => e.Zipcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ZIPCODE");
            });

            modelBuilder.Entity<LCapidmconn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIDMCONN_I1");

                entity.ToTable("L_CAPIDMCONN");

                entity.HasIndex(e => e.Nr, "CAPIDMCONN_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Conntype).HasColumnName("CONNTYPE");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Password)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("PASSWORD");

                entity.Property(e => e.Rootdir)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("ROOTDIR");

                entity.Property(e => e.Saverootdir)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("SAVEROOTDIR");

                entity.Property(e => e.Username)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("USERNAME");

                entity.Property(e => e.Workspace)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("WORKSPACE");
            });

            modelBuilder.Entity<LCapido>(entity =>
            {
                entity.HasKey(e => e.Lref)
                    .HasName("CAPIDO_I2");

                entity.ToTable("L_CAPIDO");

                entity.HasIndex(e => new { e.Infotyp, e.Inforef, e.Doctyp, e.Docnr }, "CAPIDO_I1");

                entity.Property(e => e.Lref).HasColumnName("LREF");

                entity.Property(e => e.Docnr).HasColumnName("DOCNR");

                entity.Property(e => e.Doctyp).HasColumnName("DOCTYP");

                entity.Property(e => e.Inforef).HasColumnName("INFOREF");

                entity.Property(e => e.Infotyp).HasColumnName("INFOTYP");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");
            });

            modelBuilder.Entity<LCapidoc>(entity =>
            {
                entity.HasKey(e => e.Lref)
                    .HasName("CAPIDOC_I1");

                entity.ToTable("L_CAPIDOC");

                entity.HasIndex(e => new { e.Infotyp, e.Inforef, e.Doctyp, e.Docnr }, "CAPIDOC_I2");

                entity.Property(e => e.Lref).HasColumnName("LREF");

                entity.Property(e => e.Docnr).HasColumnName("DOCNR");

                entity.Property(e => e.Doctyp).HasColumnName("DOCTYP");

                entity.Property(e => e.Inforef).HasColumnName("INFOREF");

                entity.Property(e => e.Infotyp).HasColumnName("INFOTYP");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");
            });

            modelBuilder.Entity<LCapidright>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIDRIGHT_I1");

                entity.ToTable("L_CAPIDRIGHT");

                entity.HasIndex(e => new { e.Typ, e.Owner, e.Id, e.Item }, "CAPIDRIGHT_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Acskey)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("ACSKEY");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasColumnName("ITEM");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<LCapieshop>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIESHOP_I1");

                entity.ToTable("L_CAPIESHOP");

                entity.HasIndex(e => e.Nr, "CAPIESHOP_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Adr1)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("ADR1");

                entity.Property(e => e.Adr2)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("ADR2");

                entity.Property(e => e.Authemail)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("AUTHEMAIL");

                entity.Property(e => e.Authmphone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("AUTHMPHONE");

                entity.Property(e => e.Authname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("AUTHNAME");

                entity.Property(e => e.Authphone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("AUTHPHONE");

                entity.Property(e => e.Authsname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("AUTHSNAME");

                entity.Property(e => e.Capacity).HasColumnName("CAPACITY");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.Emailadr)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADR");

                entity.Property(e => e.Eshopcode)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("ESHOPCODE");

                entity.Property(e => e.Exptot).HasColumnName("EXPTOT");

                entity.Property(e => e.Fax)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("FAX");

                entity.Property(e => e.Founddate).HasColumnName("FOUNDDATE");

                entity.Property(e => e.Frmname)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("FRMNAME");

                entity.Property(e => e.Mark)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("MARK");

                entity.Property(e => e.Mexpmark)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("MEXPMARK");

                entity.Property(e => e.Mission)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("MISSION");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Password)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("PASSWORD");

                entity.Property(e => e.Phone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("PHONE");

                entity.Property(e => e.Qualitydoc)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("QUALITYDOC");

                entity.Property(e => e.Sectors1).HasColumnName("SECTORS1");

                entity.Property(e => e.Sectors10).HasColumnName("SECTORS10");

                entity.Property(e => e.Sectors11).HasColumnName("SECTORS11");

                entity.Property(e => e.Sectors12).HasColumnName("SECTORS12");

                entity.Property(e => e.Sectors13).HasColumnName("SECTORS13");

                entity.Property(e => e.Sectors14).HasColumnName("SECTORS14");

                entity.Property(e => e.Sectors15).HasColumnName("SECTORS15");

                entity.Property(e => e.Sectors16).HasColumnName("SECTORS16");

                entity.Property(e => e.Sectors17).HasColumnName("SECTORS17");

                entity.Property(e => e.Sectors18).HasColumnName("SECTORS18");

                entity.Property(e => e.Sectors19).HasColumnName("SECTORS19");

                entity.Property(e => e.Sectors2).HasColumnName("SECTORS2");

                entity.Property(e => e.Sectors20).HasColumnName("SECTORS20");

                entity.Property(e => e.Sectors21).HasColumnName("SECTORS21");

                entity.Property(e => e.Sectors22).HasColumnName("SECTORS22");

                entity.Property(e => e.Sectors23).HasColumnName("SECTORS23");

                entity.Property(e => e.Sectors24).HasColumnName("SECTORS24");

                entity.Property(e => e.Sectors25).HasColumnName("SECTORS25");

                entity.Property(e => e.Sectors26).HasColumnName("SECTORS26");

                entity.Property(e => e.Sectors27).HasColumnName("SECTORS27");

                entity.Property(e => e.Sectors28).HasColumnName("SECTORS28");

                entity.Property(e => e.Sectors29).HasColumnName("SECTORS29");

                entity.Property(e => e.Sectors3).HasColumnName("SECTORS3");

                entity.Property(e => e.Sectors30).HasColumnName("SECTORS30");

                entity.Property(e => e.Sectors31).HasColumnName("SECTORS31");

                entity.Property(e => e.Sectors32).HasColumnName("SECTORS32");

                entity.Property(e => e.Sectors33).HasColumnName("SECTORS33");

                entity.Property(e => e.Sectors34).HasColumnName("SECTORS34");

                entity.Property(e => e.Sectors35).HasColumnName("SECTORS35");

                entity.Property(e => e.Sectors36).HasColumnName("SECTORS36");

                entity.Property(e => e.Sectors37).HasColumnName("SECTORS37");

                entity.Property(e => e.Sectors38).HasColumnName("SECTORS38");

                entity.Property(e => e.Sectors39).HasColumnName("SECTORS39");

                entity.Property(e => e.Sectors4).HasColumnName("SECTORS4");

                entity.Property(e => e.Sectors40).HasColumnName("SECTORS40");

                entity.Property(e => e.Sectors41).HasColumnName("SECTORS41");

                entity.Property(e => e.Sectors42).HasColumnName("SECTORS42");

                entity.Property(e => e.Sectors43).HasColumnName("SECTORS43");

                entity.Property(e => e.Sectors44).HasColumnName("SECTORS44");

                entity.Property(e => e.Sectors45).HasColumnName("SECTORS45");

                entity.Property(e => e.Sectors46).HasColumnName("SECTORS46");

                entity.Property(e => e.Sectors47).HasColumnName("SECTORS47");

                entity.Property(e => e.Sectors48).HasColumnName("SECTORS48");

                entity.Property(e => e.Sectors49).HasColumnName("SECTORS49");

                entity.Property(e => e.Sectors5).HasColumnName("SECTORS5");

                entity.Property(e => e.Sectors50).HasColumnName("SECTORS50");

                entity.Property(e => e.Sectors6).HasColumnName("SECTORS6");

                entity.Property(e => e.Sectors7).HasColumnName("SECTORS7");

                entity.Property(e => e.Sectors8).HasColumnName("SECTORS8");

                entity.Property(e => e.Sectors9).HasColumnName("SECTORS9");

                entity.Property(e => e.Sendcollect).HasColumnName("SENDCOLLECT");

                entity.Property(e => e.Sendsample).HasColumnName("SENDSAMPLE");

                entity.Property(e => e.Textinceng).HasColumnName("TEXTINCENG");

                entity.Property(e => e.Textinctr).HasColumnName("TEXTINCTR");

                entity.Property(e => e.Username)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("USERNAME");

                entity.Property(e => e.Webadr)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("WEBADR");

                entity.Property(e => e.Workercnt).HasColumnName("WORKERCNT");

                entity.Property(e => e.Zipcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ZIPCODE");
            });

            modelBuilder.Entity<LCapiextinfo>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIEXTINFO_I1");

                entity.ToTable("L_CAPIEXTINFO");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Countrytype).HasColumnName("COUNTRYTYPE");

                entity.Property(e => e.Default).HasColumnName("DEFAULT_");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Password)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PASSWORD");

                entity.Property(e => e.Senderdef)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SENDERDEF");

                entity.Property(e => e.Subscriber)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("SUBSCRIBER");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Username)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("USERNAME");
            });

            modelBuilder.Entity<LCapifactdiv>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIFACTDIV_I1");

                entity.ToTable("L_CAPIFACTDIV");

                entity.HasIndex(e => new { e.Firmnr, e.Recordnr }, "CAPIFACTDIV_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Factnr).HasColumnName("FACTNR");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Moddate)
                    .HasColumnType("datetime")
                    .HasColumnName("MODDATE");

                entity.Property(e => e.Modtime).HasColumnName("MODTIME");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Recnr).HasColumnName("RECNR");

                entity.Property(e => e.Recordnr).HasColumnName("RECORDNR");

                entity.Property(e => e.Userext).HasColumnName("USEREXT");

                entity.Property(e => e.Workdays).HasColumnName("WORKDAYS");
            });

            modelBuilder.Entity<LCapifactory>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIFACTORY_I1");

                entity.ToTable("L_CAPIFACTORY");

                entity.HasIndex(e => new { e.Firmnr, e.Nr }, "CAPIFACTORY_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Firmnr, e.Name }, "CAPIFACTORY_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Divisnr).HasColumnName("DIVISNR");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Moddate)
                    .HasColumnType("datetime")
                    .HasColumnName("MODDATE");

                entity.Property(e => e.Modtime).HasColumnName("MODTIME");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Userext).HasColumnName("USEREXT");
            });

            modelBuilder.Entity<LCapifirm>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIFIRM_I1");

                entity.ToTable("L_CAPIFIRM");

                entity.HasIndex(e => e.Nr, "CAPIFIRM_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "CAPIFIRM_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accepteinv).HasColumnName("ACCEPTEINV");

                entity.Property(e => e.Accofficecode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("ACCOFFICECODE");

                entity.Property(e => e.Actarea).HasColumnName("ACTAREA");

                entity.Property(e => e.Advancedproduct).HasColumnName("ADVANCEDPRODUCT");

                entity.Property(e => e.Backupebooks).HasColumnName("BACKUPEBOOKS");

                entity.Property(e => e.Bagkurnr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("BAGKURNR");

                entity.Property(e => e.Begday).HasColumnName("BEGDAY");

                entity.Property(e => e.Begmon).HasColumnName("BEGMON");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Cntrycode)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CNTRYCODE");

                entity.Property(e => e.Conscoderef).HasColumnName("CONSCODEREF");

                entity.Property(e => e.Contractdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CONTRACTDATE");

                entity.Property(e => e.Contractdesc)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CONTRACTDESC");

                entity.Property(e => e.Contractnumber)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CONTRACTNUMBER");

                entity.Property(e => e.Contracttype)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CONTRACTTYPE");

                entity.Property(e => e.Countofleg).HasColumnName("COUNTOFLEG");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Cpachambnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CPACHAMBNR");

                entity.Property(e => e.Cpacity)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CPACITY");

                entity.Property(e => e.Cpacntrycode)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("CPACNTRYCODE");

                entity.Property(e => e.Cpacountry)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CPACOUNTRY");

                entity.Property(e => e.Cpadistrict)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPADISTRICT");

                entity.Property(e => e.Cpadoornr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPADOORNR");

                entity.Property(e => e.Cpaemail)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPAEMAIL");

                entity.Property(e => e.Cpaextension)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CPAEXTENSION");

                entity.Property(e => e.Cpafaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CPAFAXNR");

                entity.Property(e => e.Cpaidtcno)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CPAIDTCNO");

                entity.Property(e => e.Cpakdspassword)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPAKDSPASSWORD");

                entity.Property(e => e.Cpaname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("CPANAME");

                entity.Property(e => e.Cpaoccupation)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPAOCCUPATION");

                entity.Property(e => e.Cpaphone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CPAPHONE");

                entity.Property(e => e.Cparoad)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPAROAD");

                entity.Property(e => e.Cpastreet)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPASTREET");

                entity.Property(e => e.Cpasurname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("CPASURNAME");

                entity.Property(e => e.Cpataxnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CPATAXNR");

                entity.Property(e => e.Cpataxoff)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPATAXOFF");

                entity.Property(e => e.Cpatckn).HasColumnName("CPATCKN");

                entity.Property(e => e.Cpatitle).HasColumnName("CPATITLE");

                entity.Property(e => e.Cpausername)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CPAUSERNAME");

                entity.Property(e => e.Cpazipcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CPAZIPCODE");

                entity.Property(e => e.Ctable)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("CTABLE");

                entity.Property(e => e.Dbname)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("DBNAME");

                entity.Property(e => e.Deductlimit).HasColumnName("DEDUCTLIMIT");

                entity.Property(e => e.Direct)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("DIRECT");

                entity.Property(e => e.District)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Dncnstlen).HasColumnName("DNCNSTLEN");

                entity.Property(e => e.Doornr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DOORNR");

                entity.Property(e => e.Earcentdefaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EARCENTDEFADDR");

                entity.Property(e => e.Earcentpass)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EARCENTPASS");

                entity.Property(e => e.Earcentsend).HasColumnName("EARCENTSEND");

                entity.Property(e => e.Earcentuser)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EARCENTUSER");

                entity.Property(e => e.Ebookconttype).HasColumnName("EBOOKCONTTYPE");

                entity.Property(e => e.Ebookcurrtype).HasColumnName("EBOOKCURRTYPE");

                entity.Property(e => e.Ebookstartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("EBOOKSTARTDATE");

                entity.Property(e => e.Einvconttype).HasColumnName("EINVCONTTYPE");

                entity.Property(e => e.Einvcustom).HasColumnName("EINVCUSTOM");

                entity.Property(e => e.Einvoiceid)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("EINVOICEID");

                entity.Property(e => e.Einvoicetypsgk).HasColumnName("EINVOICETYPSGK");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Employeremail)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EMPLOYEREMAIL");

                entity.Property(e => e.Employeridtcno)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("EMPLOYERIDTCNO");

                entity.Property(e => e.Employername)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("EMPLOYERNAME");

                entity.Property(e => e.Employersurname)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("EMPLOYERSURNAME");

                entity.Property(e => e.Emutentdefaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMUTENTDEFADDR");

                entity.Property(e => e.Emutentpass)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EMUTENTPASS");

                entity.Property(e => e.Emutentsend).HasColumnName("EMUTENTSEND");

                entity.Property(e => e.Emutentuser)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EMUTENTUSER");

                entity.Property(e => e.Eturmobtoken)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("ETURMOBTOKEN");

                entity.Property(e => e.Exchcurrtype).HasColumnName("EXCHCURRTYPE");

                entity.Property(e => e.Fax)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("FAX");

                entity.Property(e => e.Faxemailaddr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("FAXEMAILADDR");

                entity.Property(e => e.Faxuserkey)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("FAXUSERKEY");

                entity.Property(e => e.Faxusername)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("FAXUSERNAME");

                entity.Property(e => e.Firmemailaddr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("FIRMEMAILADDR");

                entity.Property(e => e.Firmeuvatnumber)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("FIRMEUVATNUMBER");

                entity.Property(e => e.Firmlang).HasColumnName("FIRMLANG");

                entity.Property(e => e.Firmrepcurr).HasColumnName("FIRMREPCURR");

                entity.Property(e => e.Firmtype).HasColumnName("FIRMTYPE");

                entity.Property(e => e.Firmytlstatus).HasColumnName("FIRMYTLSTATUS");

                entity.Property(e => e.Getcpafromdiv).HasColumnName("GETCPAFROMDIV");

                entity.Property(e => e.Getwhrexchcur).HasColumnName("GETWHREXCHCUR");

                entity.Property(e => e.Hashvers)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("HASHVERS");

                entity.Property(e => e.Intsalesaddr)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("INTSALESADDR");

                entity.Property(e => e.Isccclient).HasColumnName("ISCCCLIENT");

                entity.Property(e => e.Isebookkeptbyfirm).HasColumnName("ISEBOOKKEPTBYFIRM");

                entity.Property(e => e.Isymmcontractmade).HasColumnName("ISYMMCONTRACTMADE");

                entity.Property(e => e.Jgcompanynr).HasColumnName("JGCOMPANYNR");

                entity.Property(e => e.Jghrfirmcode)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("JGHRFIRMCODE");

                entity.Property(e => e.Jgpassword)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("JGPASSWORD");

                entity.Property(e => e.Jgperiodnr).HasColumnName("JGPERIODNR");

                entity.Property(e => e.Jgserverurl)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("JGSERVERURL");

                entity.Property(e => e.Jgusername)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("JGUSERNAME");

                entity.Property(e => e.Lastcontrolno).HasColumnName("LASTCONTROLNO");

                entity.Property(e => e.Lastgloblineno).HasColumnName("LASTGLOBLINENO");

                entity.Property(e => e.Lastjournalno).HasColumnName("LASTJOURNALNO");

                entity.Property(e => e.Liquidatedfirm).HasColumnName("LIQUIDATEDFIRM");

                entity.Property(e => e.Liquidatingdate).HasColumnName("LIQUIDATINGDATE");

                entity.Property(e => e.Liquidationtyp).HasColumnName("LIQUIDATIONTYP");

                entity.Property(e => e.Localcaldr).HasColumnName("LOCALCALDR");

                entity.Property(e => e.Localctyp).HasColumnName("LOCALCTYP");

                entity.Property(e => e.Logoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("LOGOID");

                entity.Property(e => e.Longperiods).HasColumnName("LONGPERIODS");

                entity.Property(e => e.Majversnr).HasColumnName("MAJVERSNR");

                entity.Property(e => e.Mersisno)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("MERSISNO");

                entity.Property(e => e.Minversnr).HasColumnName("MINVERSNR");

                entity.Property(e => e.Mmgibbookinteg).HasColumnName("MMGIBBOOKINTEG");

                entity.Property(e => e.Mmgibbooktype).HasColumnName("MMGIBBOOKTYPE");

                entity.Property(e => e.Mmgibclientid)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("MMGIBCLIENTID");

                entity.Property(e => e.Mmgibworktype).HasColumnName("MMGIBWORKTYPE");

                entity.Property(e => e.Mobfirmalias)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("MOBFIRMALIAS");

                entity.Property(e => e.Mobpassword)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("MOBPASSWORD");

                entity.Property(e => e.Mobusername)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("MOBUSERNAME");

                entity.Property(e => e.Moddate)
                    .HasColumnType("datetime")
                    .HasColumnName("MODDATE");

                entity.Property(e => e.Modtime).HasColumnName("MODTIME");

                entity.Property(e => e.Nacecode)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("NACECODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Officaltitle)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("OFFICALTITLE");

                entity.Property(e => e.Orgchart).HasColumnName("ORGCHART");

                entity.Property(e => e.Parole)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("PAROLE");

                entity.Property(e => e.Parole2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("PAROLE2");

                entity.Property(e => e.Passive).HasColumnName("PASSIVE");

                entity.Property(e => e.Password)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PASSWORD");

                entity.Property(e => e.Passwordtaxdecl)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("PASSWORDTAXDECL");

                entity.Property(e => e.Passwordtaxdecl2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("PASSWORDTAXDECL2");

                entity.Property(e => e.Pernr).HasColumnName("PERNR");

                entity.Property(e => e.Phone1)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("PHONE1");

                entity.Property(e => e.Phone2)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("PHONE2");

                entity.Property(e => e.Postlabelcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("POSTLABELCODE");

                entity.Property(e => e.Postlabelcodedesp)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("POSTLABELCODEDESP");

                entity.Property(e => e.Profileid)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("PROFILEID");

                entity.Property(e => e.Ptimestamphost)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("PTIMESTAMPHOST");

                entity.Property(e => e.Ptimestamppass)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PTIMESTAMPPASS");

                entity.Property(e => e.Ptimestampport).HasColumnName("PTIMESTAMPPORT");

                entity.Property(e => e.Ptimestampuser)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PTIMESTAMPUSER");

                entity.Property(e => e.Relversnr).HasColumnName("RELVERSNR");

                entity.Property(e => e.Road)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ROAD");

                entity.Property(e => e.Sector).HasColumnName("SECTOR");

                entity.Property(e => e.Securnr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SECURNR");

                entity.Property(e => e.Senderlabelcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("SENDERLABELCODE");

                entity.Property(e => e.Senderlabelcodedesp)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("SENDERLABELCODEDESP");

                entity.Property(e => e.Sepexchtable).HasColumnName("SEPEXCHTABLE");

                entity.Property(e => e.Shaalgorithm).HasColumnName("SHAALGORITHM");

                entity.Property(e => e.Shpagncod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("SHPAGNCOD");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Srccriteria)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SRCCRITERIA");

                entity.Property(e => e.Statecode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("STATECODE");

                entity.Property(e => e.Statename)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("STATENAME");

                entity.Property(e => e.Street)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("STREET");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Taxoff)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFF");

                entity.Property(e => e.Taxoffcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFFCODE");

                entity.Property(e => e.Taxoffstatecd)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFFSTATECD");

                entity.Property(e => e.Taxoffstatenm)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFFSTATENM");

                entity.Property(e => e.Taxpayercode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("TAXPAYERCODE");

                entity.Property(e => e.Taxpayername)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("TAXPAYERNAME");

                entity.Property(e => e.Tcellappid)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("TCELLAPPID");

                entity.Property(e => e.Tcellapppw)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("TCELLAPPPW");

                entity.Property(e => e.Timestampapppth)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TIMESTAMPAPPPTH");

                entity.Property(e => e.Timestamppass)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TIMESTAMPPASS");

                entity.Property(e => e.Timestampport).HasColumnName("TIMESTAMPPORT");

                entity.Property(e => e.Timestampserver)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TIMESTAMPSERVER");

                entity.Property(e => e.Timestampuser)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TIMESTAMPUSER");

                entity.Property(e => e.Title)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TITLE");

                entity.Property(e => e.Traderegisno)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("TRADEREGISNO");

                entity.Property(e => e.Uetdsdefaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("UETDSDEFADDR");

                entity.Property(e => e.Uetdspass)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UETDSPASS");

                entity.Property(e => e.Uetdsuser).HasColumnName("UETDSUSER");

                entity.Property(e => e.Uetdsusername)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UETDSUSERNAME");

                entity.Property(e => e.Usechangelog).HasColumnName("USECHANGELOG");

                entity.Property(e => e.Usecommonparam).HasColumnName("USECOMMONPARAM");

                entity.Property(e => e.Useearchive).HasColumnName("USEEARCHIVE");

                entity.Property(e => e.Useebook).HasColumnName("USEEBOOK");

                entity.Property(e => e.Useedespatch).HasColumnName("USEEDESPATCH");

                entity.Property(e => e.Useeproducerrec).HasColumnName("USEEPRODUCERREC");

                entity.Property(e => e.Useetradesmaninv).HasColumnName("USEETRADESMANINV");

                entity.Property(e => e.Usepaperinv).HasColumnName("USEPAPERINV");

                entity.Property(e => e.Useproxy).HasColumnName("USEPROXY");

                entity.Property(e => e.Usercode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("USERCODE");

                entity.Property(e => e.Usercode2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("USERCODE2");

                entity.Property(e => e.Userext).HasColumnName("USEREXT");

                entity.Property(e => e.Username)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("USERNAME");

                entity.Property(e => e.Useserverdate).HasColumnName("USESERVERDATE");

                entity.Property(e => e.Vatroundmtd).HasColumnName("VATROUNDMTD");

                entity.Property(e => e.Webaddr)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("WEBADDR");

                entity.Property(e => e.Webnavisvcurl)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("WEBNAVISVCURL");

                entity.Property(e => e.Workdayflgs1).HasColumnName("WORKDAYFLGS1");

                entity.Property(e => e.Workdayflgs2).HasColumnName("WORKDAYFLGS2");

                entity.Property(e => e.Workdayflgs3).HasColumnName("WORKDAYFLGS3");

                entity.Property(e => e.Workdayflgs4).HasColumnName("WORKDAYFLGS4");

                entity.Property(e => e.Workdayflgs5).HasColumnName("WORKDAYFLGS5");

                entity.Property(e => e.Workdayflgs6).HasColumnName("WORKDAYFLGS6");

                entity.Property(e => e.Workdayflgs7).HasColumnName("WORKDAYFLGS7");

                entity.Property(e => e.Ymmchambnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("YMMCHAMBNR");

                entity.Property(e => e.Ymmcontdate).HasColumnName("YMMCONTDATE");

                entity.Property(e => e.Ymmcontdesc)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("YMMCONTDESC");

                entity.Property(e => e.Ymmcontnumber)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("YMMCONTNUMBER");

                entity.Property(e => e.Ymmconttype)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("YMMCONTTYPE");

                entity.Property(e => e.Ymmemail)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("YMMEMAIL");

                entity.Property(e => e.Ymmfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("YMMFAXNR");

                entity.Property(e => e.Ymmname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("YMMNAME");

                entity.Property(e => e.Ymmphone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("YMMPHONE");

                entity.Property(e => e.Ymmsurname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("YMMSURNAME");

                entity.Property(e => e.Ymmtaxnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("YMMTAXNR");

                entity.Property(e => e.Ymmtcno)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("YMMTCNO");

                entity.Property(e => e.Ytlsourcefirm).HasColumnName("YTLSOURCEFIRM");

                entity.Property(e => e.Zipcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ZIPCODE");

                entity.Property(e => e.Zusatzno)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("ZUSATZNO");
            });

            modelBuilder.Entity<LCapigroup>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIGROUP_I1");

                entity.ToTable("L_CAPIGROUP");

                entity.HasIndex(e => e.Nr, "CAPIGROUP_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "CAPIGROUP_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Name)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Superflg).HasColumnName("SUPERFLG");
            });

            modelBuilder.Entity<LCapiperiod>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIPERIOD_I1");

                entity.ToTable("L_CAPIPERIOD");

                entity.HasIndex(e => new { e.Firmnr, e.Nr }, "CAPIPERIOD_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Key1).HasColumnName("KEY1");

                entity.Property(e => e.Key2).HasColumnName("KEY2");

                entity.Property(e => e.Key3).HasColumnName("KEY3");

                entity.Property(e => e.Key4).HasColumnName("KEY4");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Perlocalctype).HasColumnName("PERLOCALCTYPE");

                entity.Property(e => e.Perrepcurr).HasColumnName("PERREPCURR");
            });

            modelBuilder.Entity<LCapiprog>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIPROG_I1");

                entity.ToTable("L_CAPIPROG");

                entity.HasIndex(e => new { e.Progid, e.Typ }, "CAPIPROG_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Forceuplowercase).HasColumnName("FORCEUPLOWERCASE");

                entity.Property(e => e.Keychg).HasColumnName("KEYCHG");

                entity.Property(e => e.Keyperd).HasColumnName("KEYPERD");

                entity.Property(e => e.Keywarn).HasColumnName("KEYWARN");

                entity.Property(e => e.Lastkeyuse).HasColumnName("LASTKEYUSE");

                entity.Property(e => e.Maxfailedlogins).HasColumnName("MAXFAILEDLOGINS");

                entity.Property(e => e.Minalphalen).HasColumnName("MINALPHALEN");

                entity.Property(e => e.Minkeylen).HasColumnName("MINKEYLEN");

                entity.Property(e => e.Minnumlen).HasColumnName("MINNUMLEN");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Progid).HasColumnName("PROGID");

                entity.Property(e => e.Serial).HasColumnName("SERIAL");

                entity.Property(e => e.Supervisorchk).HasColumnName("SUPERVISORCHK");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Version).HasColumnName("VERSION");
            });

            modelBuilder.Entity<LCapiright>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIRIGHT_I1");

                entity.ToTable("L_CAPIRIGHT");

                entity.HasIndex(e => new { e.Typ, e.Owner, e.Id, e.Item }, "CAPIRIGHT_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Id).HasColumnName("ID");

                entity.Property(e => e.Item).HasColumnName("ITEM");

                entity.Property(e => e.Owner).HasColumnName("OWNER");

                entity.Property(e => e.Rights)
                    .HasColumnType("image")
                    .HasColumnName("RIGHTS");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<LCapirole>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIROLE_I1");

                entity.ToTable("L_CAPIROLE");

                entity.HasIndex(e => e.Nr, "CAPIROLE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "CAPIROLE_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Custtable)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("CUSTTABLE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Nr).HasColumnName("NR");
            });

            modelBuilder.Entity<LCapiroleobj>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIROLEOBJ_I1");

                entity.ToTable("L_CAPIROLEOBJ");

                entity.HasIndex(e => new { e.Rolenr, e.Objid }, "CAPIROLEOBJ_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Appid).HasColumnName("APPID");

                entity.Property(e => e.Mdlid).HasColumnName("MDLID");

                entity.Property(e => e.Objid).HasColumnName("OBJID");

                entity.Property(e => e.Objtyp).HasColumnName("OBJTYP");

                entity.Property(e => e.Rolenr).HasColumnName("ROLENR");
            });

            modelBuilder.Entity<LCapiroletask>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIROLETASK_I1");

                entity.ToTable("L_CAPIROLETASK");

                entity.HasIndex(e => new { e.Rolenr, e.Taskid }, "CAPIROLETASK_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Rolenr).HasColumnName("ROLENR");

                entity.Property(e => e.Taskid).HasColumnName("TASKID");
            });

            modelBuilder.Entity<LCapisign>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPISIGN_I1");

                entity.ToTable("L_CAPISIGN");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Ebeyannamevers).HasColumnName("EBEYANNAMEVERS");

                entity.Property(e => e.Ebookvers).HasColumnName("EBOOKVERS");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Emailpass)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EMAILPASS");

                entity.Property(e => e.Emailserveraddr)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EMAILSERVERADDR");

                entity.Property(e => e.Emailserverport).HasColumnName("EMAILSERVERPORT");

                entity.Property(e => e.Emailusername)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("EMAILUSERNAME");

                entity.Property(e => e.Eslibrary).HasColumnName("ESLIBRARY");

                entity.Property(e => e.Key1).HasColumnName("KEY1");

                entity.Property(e => e.Key2).HasColumnName("KEY2");

                entity.Property(e => e.Key3).HasColumnName("KEY3");

                entity.Property(e => e.Key4).HasColumnName("KEY4");

                entity.Property(e => e.Lconnuser)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("LCONNUSER");

                entity.Property(e => e.Lconnuserpass)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("LCONNUSERPASS");

                entity.Property(e => e.Ldbbackupdatasetid)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("LDBBACKUPDATASETID");

                entity.Property(e => e.Ldbbackupdatasetname)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("LDBBACKUPDATASETNAME");

                entity.Property(e => e.Ldbbackupdomain)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("LDBBACKUPDOMAIN");

                entity.Property(e => e.Ldbbackupdomainip)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("LDBBACKUPDOMAINIP");

                entity.Property(e => e.Ldbbackupexecavreg).HasColumnName("LDBBACKUPEXECAVREG");

                entity.Property(e => e.Ldbbackupreportlink)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("LDBBACKUPREPORTLINK");

                entity.Property(e => e.Ldbbackupuser)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("LDBBACKUPUSER");

                entity.Property(e => e.Ldbbackupuserpass)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("LDBBACKUPUSERPASS");

                entity.Property(e => e.Ldbbackupwebsrvurl)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("LDBBACKUPWEBSRVURL");

                entity.Property(e => e.Liccheckdate)
                    .HasColumnType("datetime")
                    .HasColumnName("LICCHECKDATE");

                entity.Property(e => e.Maxdopnr).HasColumnName("MAXDOPNR");

                entity.Property(e => e.Mtype).HasColumnName("MTYPE");

                entity.Property(e => e.Notusehint).HasColumnName("NOTUSEHINT");

                entity.Property(e => e.Otherprgpath)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("OTHERPRGPATH");

                entity.Property(e => e.Sign)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SIGN");

                entity.Property(e => e.Ssltype).HasColumnName("SSLTYPE");

                entity.Property(e => e.Tigerhr).HasColumnName("TIGERHR");

                entity.Property(e => e.Tigerhrabsence).HasColumnName("TIGERHRABSENCE");

                entity.Property(e => e.Usesitebterm).HasColumnName("USESITEBTERM");

                entity.Property(e => e.Usetls).HasColumnName("USETLS");

                entity.Property(e => e.Vers).HasColumnName("VERS");

                entity.Property(e => e.Webacc)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("WEBACC");

                entity.Property(e => e.Weblink)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("WEBLINK");

                entity.Property(e => e.Webserver)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("WEBSERVER");
            });

            modelBuilder.Entity<LCapisite>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPISITE_I1");

                entity.ToTable("L_CAPISITE");

                entity.HasIndex(e => e.Siteid, "CAPISITE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "CAPISITE_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Curflg).HasColumnName("CURFLG");

                entity.Property(e => e.Licencestr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("LICENCESTR");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Progid).HasColumnName("PROGID");

                entity.Property(e => e.Serial).HasColumnName("SERIAL");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<LCapiterminal>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPITERMINAL_I1");

                entity.ToTable("L_CAPITERMINAL");

                entity.HasIndex(e => e.Nr, "CAPITERMINAL_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Code, "CAPITERMINAL_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Gatewayaddr)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("GATEWAYADDR");

                entity.Property(e => e.Key)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("KEY_");

                entity.Property(e => e.Licencestr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("LICENCESTR");

                entity.Property(e => e.Name)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Prnfiles1)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PRNFILES1");

                entity.Property(e => e.Prnfiles2)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PRNFILES2");

                entity.Property(e => e.Prnfiles3)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PRNFILES3");

                entity.Property(e => e.Prnfiles4)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PRNFILES4");

                entity.Property(e => e.Prnfiles5)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PRNFILES5");

                entity.Property(e => e.Prnnr1).HasColumnName("PRNNR1");

                entity.Property(e => e.Prnnr2).HasColumnName("PRNNR2");

                entity.Property(e => e.Progid).HasColumnName("PROGID");

                entity.Property(e => e.Serial).HasColumnName("SERIAL");

                entity.Property(e => e.Taskcode).HasColumnName("TASKCODE");

                entity.Property(e => e.Tattrib).HasColumnName("TATTRIB");

                entity.Property(e => e.Terminfo)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("TERMINFO");

                entity.Property(e => e.Termtype).HasColumnName("TERMTYPE");

                entity.Property(e => e.Userext).HasColumnName("USEREXT");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");
            });

            modelBuilder.Entity<LCapiunit>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIUNIT_I1");

                entity.ToTable("L_CAPIUNIT");

                entity.HasIndex(e => new { e.Firmnr, e.Nr }, "CAPIUNIT_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Firmnr, e.Name }, "CAPIUNIT_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Moddate)
                    .HasColumnType("datetime")
                    .HasColumnName("MODDATE");

                entity.Property(e => e.Modtime).HasColumnName("MODTIME");

                entity.Property(e => e.Name)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Netflag)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("NETFLAG");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Passive).HasColumnName("PASSIVE");

                entity.Property(e => e.Userext).HasColumnName("USEREXT");
            });

            modelBuilder.Entity<LCapiupdate>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIUPDATE_I1");

                entity.ToTable("L_CAPIUPDATE");

                entity.HasIndex(e => e.Updates, "CAPIUPDATE_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Hr).HasColumnName("HR");

                entity.Property(e => e.Min).HasColumnName("MIN_");

                entity.Property(e => e.Msec).HasColumnName("MSEC");

                entity.Property(e => e.Sec).HasColumnName("SEC");

                entity.Property(e => e.Updates)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UPDATES");
            });

            modelBuilder.Entity<LCapiuser>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIUSER_I1");

                entity.ToTable("L_CAPIUSER");

                entity.HasIndex(e => e.Nr, "CAPIUSER_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "CAPIUSER_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accesstype).HasColumnName("ACCESSTYPE");

                entity.Property(e => e.Activedirectoryuser).HasColumnName("ACTIVEDIRECTORYUSER");

                entity.Property(e => e.Adusercannotmodify).HasColumnName("ADUSERCANNOTMODIFY");

                entity.Property(e => e.Blocked).HasColumnName("BLOCKED");

                entity.Property(e => e.Blockedtheme).HasColumnName("BLOCKEDTHEME");

                entity.Property(e => e.Budgetadmin).HasColumnName("BUDGETADMIN");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Defrole).HasColumnName("DEFROLE");

                entity.Property(e => e.Deptnr).HasColumnName("DEPTNR");

                entity.Property(e => e.Disabled).HasColumnName("DISABLED");

                entity.Property(e => e.Divnr).HasColumnName("DIVNR");

                entity.Property(e => e.Dmconn).HasColumnName("DMCONN");

                entity.Property(e => e.Dontshowlogobipage).HasColumnName("DONTSHOWLOGOBIPAGE");

                entity.Property(e => e.Emaila)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EMAILA");

                entity.Property(e => e.Extroles1).HasColumnName("EXTROLES1");

                entity.Property(e => e.Extroles2).HasColumnName("EXTROLES2");

                entity.Property(e => e.Extroles3).HasColumnName("EXTROLES3");

                entity.Property(e => e.Extroles4).HasColumnName("EXTROLES4");

                entity.Property(e => e.Extroles5).HasColumnName("EXTROLES5");

                entity.Property(e => e.Factnr).HasColumnName("FACTNR");

                entity.Property(e => e.Failedlogins).HasColumnName("FAILEDLOGINS");

                entity.Property(e => e.Faxuseremail)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("FAXUSEREMAIL");

                entity.Property(e => e.Faxuserkey)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("FAXUSERKEY");

                entity.Property(e => e.Faxusername)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("FAXUSERNAME");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Focusadmin).HasColumnName("FOCUSADMIN");

                entity.Property(e => e.Forcerelogin).HasColumnName("FORCERELOGIN");

                entity.Property(e => e.Forcereloginmsg)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FORCERELOGINMSG");

                entity.Property(e => e.Groups1).HasColumnName("GROUPS1");

                entity.Property(e => e.Groups10).HasColumnName("GROUPS10");

                entity.Property(e => e.Groups100).HasColumnName("GROUPS100");

                entity.Property(e => e.Groups11).HasColumnName("GROUPS11");

                entity.Property(e => e.Groups12).HasColumnName("GROUPS12");

                entity.Property(e => e.Groups13).HasColumnName("GROUPS13");

                entity.Property(e => e.Groups14).HasColumnName("GROUPS14");

                entity.Property(e => e.Groups15).HasColumnName("GROUPS15");

                entity.Property(e => e.Groups16).HasColumnName("GROUPS16");

                entity.Property(e => e.Groups17).HasColumnName("GROUPS17");

                entity.Property(e => e.Groups18).HasColumnName("GROUPS18");

                entity.Property(e => e.Groups19).HasColumnName("GROUPS19");

                entity.Property(e => e.Groups2).HasColumnName("GROUPS2");

                entity.Property(e => e.Groups20).HasColumnName("GROUPS20");

                entity.Property(e => e.Groups21).HasColumnName("GROUPS21");

                entity.Property(e => e.Groups22).HasColumnName("GROUPS22");

                entity.Property(e => e.Groups23).HasColumnName("GROUPS23");

                entity.Property(e => e.Groups24).HasColumnName("GROUPS24");

                entity.Property(e => e.Groups25).HasColumnName("GROUPS25");

                entity.Property(e => e.Groups26).HasColumnName("GROUPS26");

                entity.Property(e => e.Groups27).HasColumnName("GROUPS27");

                entity.Property(e => e.Groups28).HasColumnName("GROUPS28");

                entity.Property(e => e.Groups29).HasColumnName("GROUPS29");

                entity.Property(e => e.Groups3).HasColumnName("GROUPS3");

                entity.Property(e => e.Groups30).HasColumnName("GROUPS30");

                entity.Property(e => e.Groups31).HasColumnName("GROUPS31");

                entity.Property(e => e.Groups32).HasColumnName("GROUPS32");

                entity.Property(e => e.Groups33).HasColumnName("GROUPS33");

                entity.Property(e => e.Groups34).HasColumnName("GROUPS34");

                entity.Property(e => e.Groups35).HasColumnName("GROUPS35");

                entity.Property(e => e.Groups36).HasColumnName("GROUPS36");

                entity.Property(e => e.Groups37).HasColumnName("GROUPS37");

                entity.Property(e => e.Groups38).HasColumnName("GROUPS38");

                entity.Property(e => e.Groups39).HasColumnName("GROUPS39");

                entity.Property(e => e.Groups4).HasColumnName("GROUPS4");

                entity.Property(e => e.Groups40).HasColumnName("GROUPS40");

                entity.Property(e => e.Groups41).HasColumnName("GROUPS41");

                entity.Property(e => e.Groups42).HasColumnName("GROUPS42");

                entity.Property(e => e.Groups43).HasColumnName("GROUPS43");

                entity.Property(e => e.Groups44).HasColumnName("GROUPS44");

                entity.Property(e => e.Groups45).HasColumnName("GROUPS45");

                entity.Property(e => e.Groups46).HasColumnName("GROUPS46");

                entity.Property(e => e.Groups47).HasColumnName("GROUPS47");

                entity.Property(e => e.Groups48).HasColumnName("GROUPS48");

                entity.Property(e => e.Groups49).HasColumnName("GROUPS49");

                entity.Property(e => e.Groups5).HasColumnName("GROUPS5");

                entity.Property(e => e.Groups50).HasColumnName("GROUPS50");

                entity.Property(e => e.Groups51).HasColumnName("GROUPS51");

                entity.Property(e => e.Groups52).HasColumnName("GROUPS52");

                entity.Property(e => e.Groups53).HasColumnName("GROUPS53");

                entity.Property(e => e.Groups54).HasColumnName("GROUPS54");

                entity.Property(e => e.Groups55).HasColumnName("GROUPS55");

                entity.Property(e => e.Groups56).HasColumnName("GROUPS56");

                entity.Property(e => e.Groups57).HasColumnName("GROUPS57");

                entity.Property(e => e.Groups58).HasColumnName("GROUPS58");

                entity.Property(e => e.Groups59).HasColumnName("GROUPS59");

                entity.Property(e => e.Groups6).HasColumnName("GROUPS6");

                entity.Property(e => e.Groups60).HasColumnName("GROUPS60");

                entity.Property(e => e.Groups61).HasColumnName("GROUPS61");

                entity.Property(e => e.Groups62).HasColumnName("GROUPS62");

                entity.Property(e => e.Groups63).HasColumnName("GROUPS63");

                entity.Property(e => e.Groups64).HasColumnName("GROUPS64");

                entity.Property(e => e.Groups65).HasColumnName("GROUPS65");

                entity.Property(e => e.Groups66).HasColumnName("GROUPS66");

                entity.Property(e => e.Groups67).HasColumnName("GROUPS67");

                entity.Property(e => e.Groups68).HasColumnName("GROUPS68");

                entity.Property(e => e.Groups69).HasColumnName("GROUPS69");

                entity.Property(e => e.Groups7).HasColumnName("GROUPS7");

                entity.Property(e => e.Groups70).HasColumnName("GROUPS70");

                entity.Property(e => e.Groups71).HasColumnName("GROUPS71");

                entity.Property(e => e.Groups72).HasColumnName("GROUPS72");

                entity.Property(e => e.Groups73).HasColumnName("GROUPS73");

                entity.Property(e => e.Groups74).HasColumnName("GROUPS74");

                entity.Property(e => e.Groups75).HasColumnName("GROUPS75");

                entity.Property(e => e.Groups76).HasColumnName("GROUPS76");

                entity.Property(e => e.Groups77).HasColumnName("GROUPS77");

                entity.Property(e => e.Groups78).HasColumnName("GROUPS78");

                entity.Property(e => e.Groups79).HasColumnName("GROUPS79");

                entity.Property(e => e.Groups8).HasColumnName("GROUPS8");

                entity.Property(e => e.Groups80).HasColumnName("GROUPS80");

                entity.Property(e => e.Groups81).HasColumnName("GROUPS81");

                entity.Property(e => e.Groups82).HasColumnName("GROUPS82");

                entity.Property(e => e.Groups83).HasColumnName("GROUPS83");

                entity.Property(e => e.Groups84).HasColumnName("GROUPS84");

                entity.Property(e => e.Groups85).HasColumnName("GROUPS85");

                entity.Property(e => e.Groups86).HasColumnName("GROUPS86");

                entity.Property(e => e.Groups87).HasColumnName("GROUPS87");

                entity.Property(e => e.Groups88).HasColumnName("GROUPS88");

                entity.Property(e => e.Groups89).HasColumnName("GROUPS89");

                entity.Property(e => e.Groups9).HasColumnName("GROUPS9");

                entity.Property(e => e.Groups90).HasColumnName("GROUPS90");

                entity.Property(e => e.Groups91).HasColumnName("GROUPS91");

                entity.Property(e => e.Groups92).HasColumnName("GROUPS92");

                entity.Property(e => e.Groups93).HasColumnName("GROUPS93");

                entity.Property(e => e.Groups94).HasColumnName("GROUPS94");

                entity.Property(e => e.Groups95).HasColumnName("GROUPS95");

                entity.Property(e => e.Groups96).HasColumnName("GROUPS96");

                entity.Property(e => e.Groups97).HasColumnName("GROUPS97");

                entity.Property(e => e.Groups98).HasColumnName("GROUPS98");

                entity.Property(e => e.Groups99).HasColumnName("GROUPS99");

                entity.Property(e => e.Idmloginname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("IDMLOGINNAME");

                entity.Property(e => e.Idmtransferred).HasColumnName("IDMTRANSFERRED");

                entity.Property(e => e.Intfres)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("INTFRES");

                entity.Property(e => e.Key)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("KEY_");

                entity.Property(e => e.KeyMd5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("KEY_MD5");

                entity.Property(e => e.Keycdate)
                    .HasColumnType("datetime")
                    .HasColumnName("KEYCDATE");

                entity.Property(e => e.Kvkkuser).HasColumnName("KVKKUSER");

                entity.Property(e => e.Lang).HasColumnName("LANG");

                entity.Property(e => e.Localcaldr).HasColumnName("LOCALCALDR");

                entity.Property(e => e.Logflag).HasColumnName("LOGFLAG");

                entity.Property(e => e.Loginblckcnt).HasColumnName("LOGINBLCKCNT");

                entity.Property(e => e.Mobilsecuritycode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("MOBILSECURITYCODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Objectfullright).HasColumnName("OBJECTFULLRIGHT");

                entity.Property(e => e.Onlyobject).HasColumnName("ONLYOBJECT");

                entity.Property(e => e.Options).HasColumnName("OPTIONS");

                entity.Property(e => e.Payrolluserkey)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("PAYROLLUSERKEY");

                entity.Property(e => e.Payrollusername)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("PAYROLLUSERNAME");

                entity.Property(e => e.Phoneno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("PHONENO");

                entity.Property(e => e.Prclimitgrp).HasColumnName("PRCLIMITGRP");

                entity.Property(e => e.Prevkey1)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("PREVKEY1");

                entity.Property(e => e.Prevkey2)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("PREVKEY2");

                entity.Property(e => e.Roles1).HasColumnName("ROLES1");

                entity.Property(e => e.Roles2).HasColumnName("ROLES2");

                entity.Property(e => e.Roles3).HasColumnName("ROLES3");

                entity.Property(e => e.Roles4).HasColumnName("ROLES4");

                entity.Property(e => e.Roles5).HasColumnName("ROLES5");

                entity.Property(e => e.Seller).HasColumnName("SELLER");

                entity.Property(e => e.Selleradmin).HasColumnName("SELLERADMIN");

                entity.Property(e => e.Singlesignon).HasColumnName("SINGLESIGNON");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Uniflog).HasColumnName("UNIFLOG");

                entity.Property(e => e.Useidmuser).HasColumnName("USEIDMUSER");

                entity.Property(e => e.Userext).HasColumnName("USEREXT");

                entity.Property(e => e.Username)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("USERNAME");

                entity.Property(e => e.Usersurname)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("USERSURNAME");

                entity.Property(e => e.Usertype).HasColumnName("USERTYPE");

                entity.Property(e => e.Usrprojectcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("USRPROJECTCODE");

                entity.Property(e => e.Webconn).HasColumnName("WEBCONN");

                entity.Property(e => e.Whnr).HasColumnName("WHNR");

                entity.Property(e => e.Workspace).HasColumnName("WORKSPACE");
            });

            modelBuilder.Entity<LCapiver>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIVERS_I1");

                entity.ToTable("L_CAPIVERS");

                entity.HasIndex(e => new { e.Firmnr, e.Nr }, "CAPIVERS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Majdbvers).HasColumnName("MAJDBVERS");

                entity.Property(e => e.Mindbvers).HasColumnName("MINDBVERS");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Reldbvers).HasColumnName("RELDBVERS");
            });

            modelBuilder.Entity<LCapiwebconn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIWEBCONN_I1");

                entity.ToTable("L_CAPIWEBCONN");

                entity.HasIndex(e => e.Nr, "CAPIWEBCONN_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Password)
                    .HasMaxLength(32)
                    .IsUnicode(false)
                    .HasColumnName("PASSWORD");

                entity.Property(e => e.Username)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("USERNAME");
            });

            modelBuilder.Entity<LCapiwhouse>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CAPIWHOUSE_I1");

                entity.ToTable("L_CAPIWHOUSE");

                entity.HasIndex(e => new { e.Firmnr, e.Nr }, "CAPIWHOUSE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Firmnr, e.Name }, "CAPIWHOUSE_I3");

                entity.HasIndex(e => new { e.Virtualinven, e.Nr }, "CAPIWHOUSE_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.Areacode).HasColumnName("AREACODE");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Citycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CITYCODE");

                entity.Property(e => e.Costgrp).HasColumnName("COSTGRP");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.District)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Districtcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICTCODE");

                entity.Property(e => e.Divisnr).HasColumnName("DIVISNR");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Factnr).HasColumnName("FACTNR");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Latitute)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("LATITUTE");

                entity.Property(e => e.Longitude)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("LONGITUDE");

                entity.Property(e => e.Moddate)
                    .HasColumnType("datetime")
                    .HasColumnName("MODDATE");

                entity.Property(e => e.Modtime).HasColumnName("MODTIME");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Shpagncod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("SHPAGNCOD");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Telcodes1)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELCODES1");

                entity.Property(e => e.Telcodes2)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELCODES2");

                entity.Property(e => e.Telextnums1)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELEXTNUMS1");

                entity.Property(e => e.Telextnums2)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELEXTNUMS2");

                entity.Property(e => e.Telnrs1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS1");

                entity.Property(e => e.Telnrs2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS2");

                entity.Property(e => e.Town)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Towncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TOWNCODE");

                entity.Property(e => e.Userext).HasColumnName("USEREXT");

                entity.Property(e => e.Virtualinven).HasColumnName("VIRTUALINVEN");
            });

            modelBuilder.Entity<LCdbtmp>(entity =>
            {
                entity.HasKey(e => e.Lref)
                    .HasName("CDBTMP_I2");

                entity.ToTable("L_CDBTMP");

                entity.HasIndex(e => new { e.Module, e.Infotype, e.Objid, e.Instid }, "CDBTMP_I1")
                    .IsUnique();

                entity.Property(e => e.Lref).HasColumnName("LREF");

                entity.Property(e => e.Infotype).HasColumnName("INFOTYPE");

                entity.Property(e => e.Instid).HasColumnName("INSTID");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Module).HasColumnName("MODULE_");

                entity.Property(e => e.Objid).HasColumnName("OBJID");
            });

            modelBuilder.Entity<LCity>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CITY_I1");

                entity.ToTable("L_CITY");

                entity.HasIndex(e => new { e.Country, e.Name }, "CITY_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "CITY_I3");

                entity.HasIndex(e => new { e.Country, e.Code }, "CITY_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Country).HasColumnName("COUNTRY");

                entity.Property(e => e.Name)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Name2)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Netflag)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("NETFLAG");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<LConscode>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CONSCODES_I1");

                entity.ToTable("L_CONSCODES");

                entity.HasIndex(e => new { e.Cardtype, e.Code }, "CONSCODES_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Definition }, "CONSCODES_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<LCountry>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("COUNTRY_I1");

                entity.ToTable("L_COUNTRY");

                entity.HasIndex(e => new { e.Code, e.Statestr }, "COUNTRY_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "COUNTRY_I3")
                    .IsUnique();

                entity.HasIndex(e => e.Countrynr, "COUNTRY_I4")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Countrynr).HasColumnName("COUNTRYNR");

                entity.Property(e => e.Edicode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EDICODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Name2)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Netflag)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("NETFLAG");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Statestr)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("STATESTR");
            });

            modelBuilder.Entity<LCpaCode>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CPA_CODE_I1");

                entity.ToTable("L_CPA_CODE");

                entity.HasIndex(e => e.Code, "CPA_CODE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Level, "CPA_CODE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Codeempty).HasColumnName("CODEEMPTY");

                entity.Property(e => e.Level).HasColumnName("LEVEL_");

                entity.Property(e => e.Selectable).HasColumnName("SELECTABLE");
            });

            modelBuilder.Entity<LCpaDef>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CPA_DEF_I1");

                entity.ToTable("L_CPA_DEF");

                entity.HasIndex(e => e.Cparef, "CPA_DEF_I2");

                entity.HasIndex(e => new { e.Cparef, e.Index }, "CPA_DEF_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Alsoscope)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("ALSOSCOPE");

                entity.Property(e => e.Cparef).HasColumnName("CPAREF");

                entity.Property(e => e.Description)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Index).HasColumnName("INDEX_");

                entity.Property(e => e.Outofscope)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("OUTOFSCOPE");

                entity.Property(e => e.Scope)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("SCOPE");
            });

            modelBuilder.Entity<LCtycode>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CTYCODES_I1");

                entity.ToTable("L_CTYCODES");

                entity.HasIndex(e => e.Cphcode, "CTYCODES_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CNAME");

                entity.Property(e => e.Cphcode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("CPHCODE");
            });

            modelBuilder.Entity<LCurrencylist>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CURRENCYLIST_I1");

                entity.ToTable("L_CURRENCYLIST");

                entity.HasIndex(e => new { e.Firmnr, e.Curtype }, "CURRENCYLIST_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Firmnr, e.Curcode }, "CURRENCYLIST_I3")
                    .IsUnique();

                entity.HasIndex(e => e.Globalid, "CURRENCYLIST_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Coef).HasColumnName("COEF");

                entity.Property(e => e.Curcode)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CURCODE");

                entity.Property(e => e.Curinuse).HasColumnName("CURINUSE");

                entity.Property(e => e.Curname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("CURNAME");

                entity.Property(e => e.Cursymbol)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("CURSYMBOL");

                entity.Property(e => e.Curtype).HasColumnName("CURTYPE");

                entity.Property(e => e.Divflag).HasColumnName("DIVFLAG");

                entity.Property(e => e.Emucurr).HasColumnName("EMUCURR");

                entity.Property(e => e.Eurorate).HasColumnName("EURORATE");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Roundmtd).HasColumnName("ROUNDMTD");

                entity.Property(e => e.Subdigits).HasColumnName("SUBDIGITS");

                entity.Property(e => e.Sublimit).HasColumnName("SUBLIMIT");

                entity.Property(e => e.Subname)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SUBNAME");

                entity.Property(e => e.Triexch).HasColumnName("TRIEXCH");
            });

            modelBuilder.Entity<LCurrencypar>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CURRENCYPARS_I1");

                entity.ToTable("L_CURRENCYPARS");

                entity.HasIndex(e => e.Firmnr, "CURRENCYPARS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Chktoler).HasColumnName("CHKTOLER");

                entity.Property(e => e.Chktolerexc).HasColumnName("CHKTOLEREXC");

                entity.Property(e => e.Chktolertrn).HasColumnName("CHKTOLERTRN");

                entity.Property(e => e.Exctypheads1)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("EXCTYPHEADS1");

                entity.Property(e => e.Exctypheads2)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("EXCTYPHEADS2");

                entity.Property(e => e.Exctypheads3)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("EXCTYPHEADS3");

                entity.Property(e => e.Exctypheads4)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("EXCTYPHEADS4");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Monfrac).HasColumnName("MONFRAC");

                entity.Property(e => e.Ntolerperc).HasColumnName("NTOLERPERC");

                entity.Property(e => e.Ptolerperc).HasColumnName("PTOLERPERC");

                entity.Property(e => e.Useexctype).HasColumnName("USEEXCTYPE");

                entity.Property(e => e.Useexctypebn).HasColumnName("USEEXCTYPEBN");

                entity.Property(e => e.Useexctypecash).HasColumnName("USEEXCTYPECASH");

                entity.Property(e => e.Useexctypecl).HasColumnName("USEEXCTYPECL");

                entity.Property(e => e.Useexctypecs).HasColumnName("USEEXCTYPECS");

                entity.Property(e => e.Useexctypeexport).HasColumnName("USEEXCTYPEEXPORT");

                entity.Property(e => e.Useexctypeimport).HasColumnName("USEEXCTYPEIMPORT");

                entity.Property(e => e.Useexctypeitm).HasColumnName("USEEXCTYPEITM");

                entity.Property(e => e.Useexctypeprch).HasColumnName("USEEXCTYPEPRCH");

                entity.Property(e => e.Useexctypesale).HasColumnName("USEEXCTYPESALE");
            });

            modelBuilder.Entity<LCustom>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CUSTOM_I1");

                entity.ToTable("L_CUSTOM");

                entity.HasIndex(e => new { e.Cntrnr, e.Code }, "CUSTOM_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "CUSTOM_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cntrnr).HasColumnName("CNTRNR");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Edicode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EDICODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<LDailyexchange>(entity =>
            {
                entity.HasKey(e => e.Lref)
                    .HasName("DAILYEXCHANGES_I1");

                entity.ToTable("L_DAILYEXCHANGES");

                entity.HasIndex(e => new { e.Crtype, e.Date }, "DAILYEXCHANGES_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Crtype }, "DAILYEXCHANGES_I3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Crtype, e.Edate, e.Lref }, "DAILYEXCHANGES_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Edate, e.Crtype, e.Lref }, "DAILYEXCHANGES_I5")
                    .IsUnique();

                entity.HasIndex(e => e.Globalid, "DAILYEXCHANGES_I6");

                entity.Property(e => e.Lref).HasColumnName("LREF");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate).HasColumnName("APPROVEDATE");

                entity.Property(e => e.Crtype).HasColumnName("CRTYPE");

                entity.Property(e => e.Date).HasColumnName("DATE_");

                entity.Property(e => e.Edate)
                    .HasColumnType("datetime")
                    .HasColumnName("EDATE");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Rates1).HasColumnName("RATES1");

                entity.Property(e => e.Rates2).HasColumnName("RATES2");

                entity.Property(e => e.Rates3).HasColumnName("RATES3");

                entity.Property(e => e.Rates4).HasColumnName("RATES4");
            });

            modelBuilder.Entity<LDefnfldsd>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("DEFNFLDSD_I1");

                entity.ToTable("L_DEFNFLDSD");

                entity.HasIndex(e => new { e.Modulenr, e.Level, e.Nr }, "DEFNFLDSD_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Caption)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("CAPTION");

                entity.Property(e => e.Firmstrcap)
                    .HasMaxLength(126)
                    .IsUnicode(false)
                    .HasColumnName("FIRMSTRCAP");

                entity.Property(e => e.Firmstrg1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FIRMSTRG1");

                entity.Property(e => e.Firmstrg2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FIRMSTRG2");

                entity.Property(e => e.Firmstrg3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FIRMSTRG3");

                entity.Property(e => e.Firmstrg4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FIRMSTRG4");

                entity.Property(e => e.Firmstrg5)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FIRMSTRG5");

                entity.Property(e => e.Level).HasColumnName("LEVEL_");

                entity.Property(e => e.Lineinfo)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("LINEINFO");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<LDistrict>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("DISTRICT_I1");

                entity.ToTable("L_DISTRICT");

                entity.HasIndex(e => new { e.Townnr, e.Code }, "DISTRICT_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "DISTRICT_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Name2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Netflag)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("NETFLAG");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Townnr).HasColumnName("TOWNNR");
            });

            modelBuilder.Entity<LDriver>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("DRIVERS_I1");

                entity.ToTable("L_DRIVERS");

                entity.HasIndex(e => e.Name, "DRIVERS_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Chassisnum)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CHASSISNUM");

                entity.Property(e => e.Name)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Platenum)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PLATENUM");

                entity.Property(e => e.Surname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("SURNAME");

                entity.Property(e => e.Tcno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TCNO");
            });

            modelBuilder.Entity<LDynrep>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("DYNREP_I1");

                entity.ToTable("L_DYNREP");

                entity.HasIndex(e => e.Repid, "DYNREP_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Dbtype).HasColumnName("DBTYPE");

                entity.Property(e => e.Dontprntmstrdetnotex).HasColumnName("DONTPRNTMSTRDETNOTEX");

                entity.Property(e => e.Enginever).HasColumnName("ENGINEVER");

                entity.Property(e => e.Flnamefornav)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("FLNAMEFORNAV");

                entity.Property(e => e.Getshwdetfilter).HasColumnName("GETSHWDETFILTER");

                entity.Property(e => e.Gettfromfilter).HasColumnName("GETTFROMFILTER");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Moduleid).HasColumnName("MODULEID");

                entity.Property(e => e.Name)
                    .HasMaxLength(129)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.NameLnglistid).HasColumnName("NAME_LNGLISTID");

                entity.Property(e => e.Prnttallpages).HasColumnName("PRNTTALLPAGES");

                entity.Property(e => e.Repid).HasColumnName("REPID");

                entity.Property(e => e.Reportgrpid).HasColumnName("REPORTGRPID");

                entity.Property(e => e.Reportowner).HasColumnName("REPORTOWNER");

                entity.Property(e => e.Reporttype).HasColumnName("REPORTTYPE");

                entity.Property(e => e.Reportver)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("REPORTVER");

                entity.Property(e => e.Title)
                    .HasMaxLength(129)
                    .IsUnicode(false)
                    .HasColumnName("TITLE");

                entity.Property(e => e.TitleLnglistid).HasColumnName("TITLE_LNGLISTID");

                entity.Property(e => e.Usercansortgrp).HasColumnName("USERCANSORTGRP");
            });

            modelBuilder.Entity<LDynrepusrr>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("DYNREPUSRR_I1");

                entity.ToTable("L_DYNREPUSRR");

                entity.HasIndex(e => new { e.Usernr, e.Firmnr }, "DYNREPUSRR_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Allowcustdsgn).HasColumnName("ALLOWCUSTDSGN");

                entity.Property(e => e.Allowcustdsgnsel).HasColumnName("ALLOWCUSTDSGNSEL");

                entity.Property(e => e.Allowusereport).HasColumnName("ALLOWUSEREPORT");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Repid).HasColumnName("REPID");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");
            });

            modelBuilder.Entity<LEbusiness>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("EBUSINESS_I1");

                entity.ToTable("L_EBUSINESS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Blastdate).HasColumnName("BLASTDATE");

                entity.Property(e => e.Bweekcount).HasColumnName("BWEEKCOUNT");

                entity.Property(e => e.Companyactive).HasColumnName("COMPANYACTIVE");

                entity.Property(e => e.Companydeployed).HasColumnName("COMPANYDEPLOYED");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Profileactive).HasColumnName("PROFILEACTIVE");

                entity.Property(e => e.Profilesended).HasColumnName("PROFILESENDED");

                entity.Property(e => e.Progid).HasColumnName("PROGID");

                entity.Property(e => e.Progserialnr).HasColumnName("PROGSERIALNR");

                entity.Property(e => e.Reminddate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMINDDATE");

                entity.Property(e => e.Trycount).HasColumnName("TRYCOUNT");
            });

            modelBuilder.Entity<LFaculty>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("FACULTY_I1");

                entity.ToTable("L_FACULTY");

                entity.HasIndex(e => new { e.Typ, e.Code }, "FACULTY_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cntrnr).HasColumnName("CNTRNR");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<LFaregexpc>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("FAREGEXPC_I1");

                entity.ToTable("L_FAREGEXPC");

                entity.HasIndex(e => e.Rcode, "FAREGEXPC_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Rcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("RCODE");

                entity.Property(e => e.Rdef)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("RDEF");
            });

            modelBuilder.Entity<LFaregtype>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("FAREGTYPES_I1");

                entity.ToTable("L_FAREGTYPES");

                entity.HasIndex(e => e.Rcode, "FAREGTYPES_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Rcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("RCODE");

                entity.Property(e => e.Rdef)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("RDEF");
            });

            modelBuilder.Entity<LFirmparam>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("FIRMPARAMS_I1");

                entity.ToTable("L_FIRMPARAMS");

                entity.HasIndex(e => new { e.Firmnr, e.Code }, "FIRMPARAMS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Groupnr).HasColumnName("GROUPNR");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Value)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("VALUE");
            });

            modelBuilder.Entity<LFreezone>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("FREEZONE_I1");

                entity.ToTable("L_FREEZONE");

                entity.HasIndex(e => new { e.Cntrnr, e.Code }, "FREEZONE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "FREEZONE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cntrnr).HasColumnName("CNTRNR");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Edicode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EDICODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<LFrgtype>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("FRGTYPES_I1");

                entity.ToTable("L_FRGTYPES");

                entity.HasIndex(e => e.Code, "FRGTYPES_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Name2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME2");
            });

            modelBuilder.Entity<LFrmod>(entity =>
            {
                entity.HasKey(e => e.Lref)
                    .HasName("FRMOD_I2");

                entity.ToTable("L_FRMOD");

                entity.HasIndex(e => new { e.Module, e.Infotype, e.Objid, e.Instid }, "FRMOD_I1")
                    .IsUnique();

                entity.Property(e => e.Lref).HasColumnName("LREF");

                entity.Property(e => e.Infotype).HasColumnName("INFOTYPE");

                entity.Property(e => e.Instid).HasColumnName("INSTID");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Module).HasColumnName("MODULE_");

                entity.Property(e => e.Objid).HasColumnName("OBJID");
            });

            modelBuilder.Entity<LGibdoclinetyperel>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("GIBDOCLINETYPEREL_I1");

                entity.ToTable("L_GIBDOCLINETYPEREL");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Gibbooktype).HasColumnName("GIBBOOKTYPE");

                entity.Property(e => e.Gibdoctypref).HasColumnName("GIBDOCTYPREF");

                entity.Property(e => e.Giblinetypref).HasColumnName("GIBLINETYPREF");
            });

            modelBuilder.Entity<LGibdoctype>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("GIBDOCTYPE_I1");

                entity.ToTable("L_GIBDOCTYPE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Fctype).HasColumnName("FCTYPE");

                entity.Property(e => e.Gibcode)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("GIBCODE");

                entity.Property(e => e.Gibdef)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("GIBDEF");

                entity.Property(e => e.Idaccount).HasColumnName("IDACCOUNT");

                entity.Property(e => e.Selfemp).HasColumnName("SELFEMP");

                entity.Property(e => e.Serialrequired).HasColumnName("SERIALREQUIRED");

                entity.Property(e => e.Simplemethod).HasColumnName("SIMPLEMETHOD");
            });

            modelBuilder.Entity<LGibfaregtype>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("GIBFAREGTYPE_I1");

                entity.ToTable("L_GIBFAREGTYPE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Gibcode)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("GIBCODE");

                entity.Property(e => e.Gibdef)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("GIBDEF");

                entity.Property(e => e.Itemno)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("ITEMNO");

                entity.Property(e => e.Notifno)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("NOTIFNO");

                entity.Property(e => e.Rate).HasColumnName("RATE");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<LGiblinerectyperel>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("GIBLINERECTYPEREL_I1");

                entity.ToTable("L_GIBLINERECTYPEREL");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Gibdoclinetypref).HasColumnName("GIBDOCLINETYPREF");

                entity.Property(e => e.Gibrectypref).HasColumnName("GIBRECTYPREF");
            });

            modelBuilder.Entity<LGiblinetype>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("GIBLINETYPE_I1");

                entity.ToTable("L_GIBLINETYPE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Fctype).HasColumnName("FCTYPE");

                entity.Property(e => e.Gibcode)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("GIBCODE");

                entity.Property(e => e.Gibdef)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("GIBDEF");
            });

            modelBuilder.Entity<LGiblnsbrctyprel>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("GIBLNSBRCTYPREL_I1");

                entity.ToTable("L_GIBLNSBRCTYPREL");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Giblinerectyprelref).HasColumnName("GIBLINERECTYPRELREF");

                entity.Property(e => e.Gibsubrectypref).HasColumnName("GIBSUBRECTYPREF");
            });

            modelBuilder.Entity<LGibmmparam>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("GIBMMPARAM_I1");

                entity.ToTable("L_GIBMMPARAM");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Gibmmapikey)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GIBMMAPIKEY");

                entity.Property(e => e.Gibmmapisecret)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GIBMMAPISECRET");
            });

            modelBuilder.Entity<LGibotherparam>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("GIBOTHERPARAMS_I1");

                entity.ToTable("L_GIBOTHERPARAMS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Fctype).HasColumnName("FCTYPE");

                entity.Property(e => e.Gibcode)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("GIBCODE");

                entity.Property(e => e.Gibdef)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("GIBDEF");

                entity.Property(e => e.Rate).HasColumnName("RATE");
            });

            modelBuilder.Entity<LGibrectype>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("GIBRECTYPE_I1");

                entity.ToTable("L_GIBRECTYPE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Constsubrectypref).HasColumnName("CONSTSUBRECTYPREF");

                entity.Property(e => e.Fctype).HasColumnName("FCTYPE");

                entity.Property(e => e.Gibcode)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("GIBCODE");

                entity.Property(e => e.Gibdef)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("GIBDEF");

                entity.Property(e => e.Subrecusetype).HasColumnName("SUBRECUSETYPE");
            });

            modelBuilder.Entity<LGibsubrectype>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("GIBSUBRECTYPE_I1");

                entity.ToTable("L_GIBSUBRECTYPE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Fctype).HasColumnName("FCTYPE");

                entity.Property(e => e.Gibclientid)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("GIBCLIENTID");

                entity.Property(e => e.Gibcode)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("GIBCODE");

                entity.Property(e => e.Gibdef)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("GIBDEF");

                entity.Property(e => e.Gibid)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("GIBID");

                entity.Property(e => e.Gibrectypref).HasColumnName("GIBRECTYPREF");

                entity.Property(e => e.Gibupdate).HasColumnName("GIBUPDATE");

                entity.Property(e => e.Recgibcode)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("RECGIBCODE");
            });

            modelBuilder.Entity<LGouser>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("GOUSERS_I3");

                entity.ToTable("L_GOUSERS");

                entity.HasIndex(e => new { e.Usrnr, e.Termnr, e.Firmnr }, "GOUSERS_I1");

                entity.HasIndex(e => new { e.Termnr, e.Usrnr }, "GOUSERS_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Abnterms).HasColumnName("ABNTERMS");

                entity.Property(e => e.Appname)
                    .HasMaxLength(129)
                    .IsUnicode(false)
                    .HasColumnName("APPNAME");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Llogindate).HasColumnName("LLOGINDATE");

                entity.Property(e => e.Llogintime).HasColumnName("LLOGINTIME");

                entity.Property(e => e.Llogoutdate).HasColumnName("LLOGOUTDATE");

                entity.Property(e => e.Llogouttime).HasColumnName("LLOGOUTTIME");

                entity.Property(e => e.Tdeferrors).HasColumnName("TDEFERRORS");

                entity.Property(e => e.Termnr).HasColumnName("TERMNR");

                entity.Property(e => e.Usrnr).HasColumnName("USRNR");
            });

            modelBuilder.Entity<LGtipCode>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("GTIP_CODE_I1");

                entity.ToTable("L_GTIP_CODE");

                entity.HasIndex(e => e.Code, "GTIP_CODE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Level, "GTIP_CODE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Codeempty).HasColumnName("CODEEMPTY");

                entity.Property(e => e.Level).HasColumnName("LEVEL_");

                entity.Property(e => e.Selectable).HasColumnName("SELECTABLE");

                entity.Property(e => e.Taxrate1).HasColumnName("TAXRATE1");

                entity.Property(e => e.Taxrate2).HasColumnName("TAXRATE2");

                entity.Property(e => e.Taxrate3).HasColumnName("TAXRATE3");

                entity.Property(e => e.Taxrate4).HasColumnName("TAXRATE4");

                entity.Property(e => e.Taxrate5).HasColumnName("TAXRATE5");
            });

            modelBuilder.Entity<LGtipDef>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("GTIP_DEF_I1");

                entity.ToTable("L_GTIP_DEF");

                entity.HasIndex(e => e.Gtipref, "GTIP_DEF_I2");

                entity.HasIndex(e => new { e.Gtipref, e.Index }, "GTIP_DEF_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Description)
                    .HasMaxLength(151)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Gtipref).HasColumnName("GTIPREF");

                entity.Property(e => e.Index).HasColumnName("INDEX_");
            });

            modelBuilder.Entity<LLbsloadgrpright>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("LBSLOADGRPRIGHTS_I1");

                entity.ToTable("L_LBSLOADGRPRIGHTS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Dllnm)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DLLNM");

                entity.Property(e => e.Grpnr).HasColumnName("GRPNR");

                entity.Property(e => e.Status).HasColumnName("STATUS");
            });

            modelBuilder.Entity<LLbsloadusrright>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("LBSLOADUSRRIGHTS_I1");

                entity.ToTable("L_LBSLOADUSRRIGHTS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Dllnm)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DLLNM");

                entity.Property(e => e.Grpnr1).HasColumnName("GRPNR1");

                entity.Property(e => e.Grpnr10).HasColumnName("GRPNR10");

                entity.Property(e => e.Grpnr100).HasColumnName("GRPNR100");

                entity.Property(e => e.Grpnr11).HasColumnName("GRPNR11");

                entity.Property(e => e.Grpnr12).HasColumnName("GRPNR12");

                entity.Property(e => e.Grpnr13).HasColumnName("GRPNR13");

                entity.Property(e => e.Grpnr14).HasColumnName("GRPNR14");

                entity.Property(e => e.Grpnr15).HasColumnName("GRPNR15");

                entity.Property(e => e.Grpnr16).HasColumnName("GRPNR16");

                entity.Property(e => e.Grpnr17).HasColumnName("GRPNR17");

                entity.Property(e => e.Grpnr18).HasColumnName("GRPNR18");

                entity.Property(e => e.Grpnr19).HasColumnName("GRPNR19");

                entity.Property(e => e.Grpnr2).HasColumnName("GRPNR2");

                entity.Property(e => e.Grpnr20).HasColumnName("GRPNR20");

                entity.Property(e => e.Grpnr21).HasColumnName("GRPNR21");

                entity.Property(e => e.Grpnr22).HasColumnName("GRPNR22");

                entity.Property(e => e.Grpnr23).HasColumnName("GRPNR23");

                entity.Property(e => e.Grpnr24).HasColumnName("GRPNR24");

                entity.Property(e => e.Grpnr25).HasColumnName("GRPNR25");

                entity.Property(e => e.Grpnr26).HasColumnName("GRPNR26");

                entity.Property(e => e.Grpnr27).HasColumnName("GRPNR27");

                entity.Property(e => e.Grpnr28).HasColumnName("GRPNR28");

                entity.Property(e => e.Grpnr29).HasColumnName("GRPNR29");

                entity.Property(e => e.Grpnr3).HasColumnName("GRPNR3");

                entity.Property(e => e.Grpnr30).HasColumnName("GRPNR30");

                entity.Property(e => e.Grpnr31).HasColumnName("GRPNR31");

                entity.Property(e => e.Grpnr32).HasColumnName("GRPNR32");

                entity.Property(e => e.Grpnr33).HasColumnName("GRPNR33");

                entity.Property(e => e.Grpnr34).HasColumnName("GRPNR34");

                entity.Property(e => e.Grpnr35).HasColumnName("GRPNR35");

                entity.Property(e => e.Grpnr36).HasColumnName("GRPNR36");

                entity.Property(e => e.Grpnr37).HasColumnName("GRPNR37");

                entity.Property(e => e.Grpnr38).HasColumnName("GRPNR38");

                entity.Property(e => e.Grpnr39).HasColumnName("GRPNR39");

                entity.Property(e => e.Grpnr4).HasColumnName("GRPNR4");

                entity.Property(e => e.Grpnr40).HasColumnName("GRPNR40");

                entity.Property(e => e.Grpnr41).HasColumnName("GRPNR41");

                entity.Property(e => e.Grpnr42).HasColumnName("GRPNR42");

                entity.Property(e => e.Grpnr43).HasColumnName("GRPNR43");

                entity.Property(e => e.Grpnr44).HasColumnName("GRPNR44");

                entity.Property(e => e.Grpnr45).HasColumnName("GRPNR45");

                entity.Property(e => e.Grpnr46).HasColumnName("GRPNR46");

                entity.Property(e => e.Grpnr47).HasColumnName("GRPNR47");

                entity.Property(e => e.Grpnr48).HasColumnName("GRPNR48");

                entity.Property(e => e.Grpnr49).HasColumnName("GRPNR49");

                entity.Property(e => e.Grpnr5).HasColumnName("GRPNR5");

                entity.Property(e => e.Grpnr50).HasColumnName("GRPNR50");

                entity.Property(e => e.Grpnr51).HasColumnName("GRPNR51");

                entity.Property(e => e.Grpnr52).HasColumnName("GRPNR52");

                entity.Property(e => e.Grpnr53).HasColumnName("GRPNR53");

                entity.Property(e => e.Grpnr54).HasColumnName("GRPNR54");

                entity.Property(e => e.Grpnr55).HasColumnName("GRPNR55");

                entity.Property(e => e.Grpnr56).HasColumnName("GRPNR56");

                entity.Property(e => e.Grpnr57).HasColumnName("GRPNR57");

                entity.Property(e => e.Grpnr58).HasColumnName("GRPNR58");

                entity.Property(e => e.Grpnr59).HasColumnName("GRPNR59");

                entity.Property(e => e.Grpnr6).HasColumnName("GRPNR6");

                entity.Property(e => e.Grpnr60).HasColumnName("GRPNR60");

                entity.Property(e => e.Grpnr61).HasColumnName("GRPNR61");

                entity.Property(e => e.Grpnr62).HasColumnName("GRPNR62");

                entity.Property(e => e.Grpnr63).HasColumnName("GRPNR63");

                entity.Property(e => e.Grpnr64).HasColumnName("GRPNR64");

                entity.Property(e => e.Grpnr65).HasColumnName("GRPNR65");

                entity.Property(e => e.Grpnr66).HasColumnName("GRPNR66");

                entity.Property(e => e.Grpnr67).HasColumnName("GRPNR67");

                entity.Property(e => e.Grpnr68).HasColumnName("GRPNR68");

                entity.Property(e => e.Grpnr69).HasColumnName("GRPNR69");

                entity.Property(e => e.Grpnr7).HasColumnName("GRPNR7");

                entity.Property(e => e.Grpnr70).HasColumnName("GRPNR70");

                entity.Property(e => e.Grpnr71).HasColumnName("GRPNR71");

                entity.Property(e => e.Grpnr72).HasColumnName("GRPNR72");

                entity.Property(e => e.Grpnr73).HasColumnName("GRPNR73");

                entity.Property(e => e.Grpnr74).HasColumnName("GRPNR74");

                entity.Property(e => e.Grpnr75).HasColumnName("GRPNR75");

                entity.Property(e => e.Grpnr76).HasColumnName("GRPNR76");

                entity.Property(e => e.Grpnr77).HasColumnName("GRPNR77");

                entity.Property(e => e.Grpnr78).HasColumnName("GRPNR78");

                entity.Property(e => e.Grpnr79).HasColumnName("GRPNR79");

                entity.Property(e => e.Grpnr8).HasColumnName("GRPNR8");

                entity.Property(e => e.Grpnr80).HasColumnName("GRPNR80");

                entity.Property(e => e.Grpnr81).HasColumnName("GRPNR81");

                entity.Property(e => e.Grpnr82).HasColumnName("GRPNR82");

                entity.Property(e => e.Grpnr83).HasColumnName("GRPNR83");

                entity.Property(e => e.Grpnr84).HasColumnName("GRPNR84");

                entity.Property(e => e.Grpnr85).HasColumnName("GRPNR85");

                entity.Property(e => e.Grpnr86).HasColumnName("GRPNR86");

                entity.Property(e => e.Grpnr87).HasColumnName("GRPNR87");

                entity.Property(e => e.Grpnr88).HasColumnName("GRPNR88");

                entity.Property(e => e.Grpnr89).HasColumnName("GRPNR89");

                entity.Property(e => e.Grpnr9).HasColumnName("GRPNR9");

                entity.Property(e => e.Grpnr90).HasColumnName("GRPNR90");

                entity.Property(e => e.Grpnr91).HasColumnName("GRPNR91");

                entity.Property(e => e.Grpnr92).HasColumnName("GRPNR92");

                entity.Property(e => e.Grpnr93).HasColumnName("GRPNR93");

                entity.Property(e => e.Grpnr94).HasColumnName("GRPNR94");

                entity.Property(e => e.Grpnr95).HasColumnName("GRPNR95");

                entity.Property(e => e.Grpnr96).HasColumnName("GRPNR96");

                entity.Property(e => e.Grpnr97).HasColumnName("GRPNR97");

                entity.Property(e => e.Grpnr98).HasColumnName("GRPNR98");

                entity.Property(e => e.Grpnr99).HasColumnName("GRPNR99");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Usrnr).HasColumnName("USRNR");
            });

            modelBuilder.Entity<LLdocnum>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("LDOCNUM_I1");

                entity.ToTable("L_LDOCNUM");

                entity.HasIndex(e => new { e.Dociden, e.Appmodule, e.Roleid, e.Firmid, e.Divisid, e.Whid, e.Factid, e.Groupid, e.Userid, e.Effsdate, e.Effedate, e.Termid }, "LDOCNUM_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Appmodule).HasColumnName("APPMODULE");

                entity.Property(e => e.Divisid).HasColumnName("DIVISID");

                entity.Property(e => e.Dociden).HasColumnName("DOCIDEN");

                entity.Property(e => e.Effedate)
                    .HasColumnType("datetime")
                    .HasColumnName("EFFEDATE");

                entity.Property(e => e.Effsdate)
                    .HasColumnType("datetime")
                    .HasColumnName("EFFSDATE");

                entity.Property(e => e.Factid).HasColumnName("FACTID");

                entity.Property(e => e.Firmid).HasColumnName("FIRMID");

                entity.Property(e => e.Firstnum)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("FIRSTNUM");

                entity.Property(e => e.Groupid).HasColumnName("GROUPID");

                entity.Property(e => e.Lastasgnd)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("LASTASGND");

                entity.Property(e => e.Lastnum)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("LASTNUM");

                entity.Property(e => e.Numform).HasColumnName("NUMFORM");

                entity.Property(e => e.Owncode)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("OWNCODE");

                entity.Property(e => e.Placecode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("PLACECODE");

                entity.Property(e => e.Placeref).HasColumnName("PLACEREF");

                entity.Property(e => e.Roleid).HasColumnName("ROLEID");

                entity.Property(e => e.Segments10Fillch).HasColumnName("SEGMENTS10_FILLCH");

                entity.Property(e => e.Segments10Increm).HasColumnName("SEGMENTS10_INCREM");

                entity.Property(e => e.Segments10Resvd1).HasColumnName("SEGMENTS10_RESVD1");

                entity.Property(e => e.Segments10Resvd2).HasColumnName("SEGMENTS10_RESVD2");

                entity.Property(e => e.Segments10Segattrb).HasColumnName("SEGMENTS10_SEGATTRB");

                entity.Property(e => e.Segments10Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS10_SEGEND");

                entity.Property(e => e.Segments10Segform).HasColumnName("SEGMENTS10_SEGFORM");

                entity.Property(e => e.Segments10Seglen).HasColumnName("SEGMENTS10_SEGLEN");

                entity.Property(e => e.Segments10Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS10_SEGSTART");

                entity.Property(e => e.Segments10Txtlang).HasColumnName("SEGMENTS10_TXTLANG");

                entity.Property(e => e.Segments11Fillch).HasColumnName("SEGMENTS11_FILLCH");

                entity.Property(e => e.Segments11Increm).HasColumnName("SEGMENTS11_INCREM");

                entity.Property(e => e.Segments11Resvd1).HasColumnName("SEGMENTS11_RESVD1");

                entity.Property(e => e.Segments11Resvd2).HasColumnName("SEGMENTS11_RESVD2");

                entity.Property(e => e.Segments11Segattrb).HasColumnName("SEGMENTS11_SEGATTRB");

                entity.Property(e => e.Segments11Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS11_SEGEND");

                entity.Property(e => e.Segments11Segform).HasColumnName("SEGMENTS11_SEGFORM");

                entity.Property(e => e.Segments11Seglen).HasColumnName("SEGMENTS11_SEGLEN");

                entity.Property(e => e.Segments11Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS11_SEGSTART");

                entity.Property(e => e.Segments11Txtlang).HasColumnName("SEGMENTS11_TXTLANG");

                entity.Property(e => e.Segments12Fillch).HasColumnName("SEGMENTS12_FILLCH");

                entity.Property(e => e.Segments12Increm).HasColumnName("SEGMENTS12_INCREM");

                entity.Property(e => e.Segments12Resvd1).HasColumnName("SEGMENTS12_RESVD1");

                entity.Property(e => e.Segments12Resvd2).HasColumnName("SEGMENTS12_RESVD2");

                entity.Property(e => e.Segments12Segattrb).HasColumnName("SEGMENTS12_SEGATTRB");

                entity.Property(e => e.Segments12Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS12_SEGEND");

                entity.Property(e => e.Segments12Segform).HasColumnName("SEGMENTS12_SEGFORM");

                entity.Property(e => e.Segments12Seglen).HasColumnName("SEGMENTS12_SEGLEN");

                entity.Property(e => e.Segments12Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS12_SEGSTART");

                entity.Property(e => e.Segments12Txtlang).HasColumnName("SEGMENTS12_TXTLANG");

                entity.Property(e => e.Segments13Fillch).HasColumnName("SEGMENTS13_FILLCH");

                entity.Property(e => e.Segments13Increm).HasColumnName("SEGMENTS13_INCREM");

                entity.Property(e => e.Segments13Resvd1).HasColumnName("SEGMENTS13_RESVD1");

                entity.Property(e => e.Segments13Resvd2).HasColumnName("SEGMENTS13_RESVD2");

                entity.Property(e => e.Segments13Segattrb).HasColumnName("SEGMENTS13_SEGATTRB");

                entity.Property(e => e.Segments13Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS13_SEGEND");

                entity.Property(e => e.Segments13Segform).HasColumnName("SEGMENTS13_SEGFORM");

                entity.Property(e => e.Segments13Seglen).HasColumnName("SEGMENTS13_SEGLEN");

                entity.Property(e => e.Segments13Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS13_SEGSTART");

                entity.Property(e => e.Segments13Txtlang).HasColumnName("SEGMENTS13_TXTLANG");

                entity.Property(e => e.Segments14Fillch).HasColumnName("SEGMENTS14_FILLCH");

                entity.Property(e => e.Segments14Increm).HasColumnName("SEGMENTS14_INCREM");

                entity.Property(e => e.Segments14Resvd1).HasColumnName("SEGMENTS14_RESVD1");

                entity.Property(e => e.Segments14Resvd2).HasColumnName("SEGMENTS14_RESVD2");

                entity.Property(e => e.Segments14Segattrb).HasColumnName("SEGMENTS14_SEGATTRB");

                entity.Property(e => e.Segments14Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS14_SEGEND");

                entity.Property(e => e.Segments14Segform).HasColumnName("SEGMENTS14_SEGFORM");

                entity.Property(e => e.Segments14Seglen).HasColumnName("SEGMENTS14_SEGLEN");

                entity.Property(e => e.Segments14Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS14_SEGSTART");

                entity.Property(e => e.Segments14Txtlang).HasColumnName("SEGMENTS14_TXTLANG");

                entity.Property(e => e.Segments15Fillch).HasColumnName("SEGMENTS15_FILLCH");

                entity.Property(e => e.Segments15Increm).HasColumnName("SEGMENTS15_INCREM");

                entity.Property(e => e.Segments15Resvd1).HasColumnName("SEGMENTS15_RESVD1");

                entity.Property(e => e.Segments15Resvd2).HasColumnName("SEGMENTS15_RESVD2");

                entity.Property(e => e.Segments15Segattrb).HasColumnName("SEGMENTS15_SEGATTRB");

                entity.Property(e => e.Segments15Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS15_SEGEND");

                entity.Property(e => e.Segments15Segform).HasColumnName("SEGMENTS15_SEGFORM");

                entity.Property(e => e.Segments15Seglen).HasColumnName("SEGMENTS15_SEGLEN");

                entity.Property(e => e.Segments15Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS15_SEGSTART");

                entity.Property(e => e.Segments15Txtlang).HasColumnName("SEGMENTS15_TXTLANG");

                entity.Property(e => e.Segments16Fillch).HasColumnName("SEGMENTS16_FILLCH");

                entity.Property(e => e.Segments16Increm).HasColumnName("SEGMENTS16_INCREM");

                entity.Property(e => e.Segments16Resvd1).HasColumnName("SEGMENTS16_RESVD1");

                entity.Property(e => e.Segments16Resvd2).HasColumnName("SEGMENTS16_RESVD2");

                entity.Property(e => e.Segments16Segattrb).HasColumnName("SEGMENTS16_SEGATTRB");

                entity.Property(e => e.Segments16Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS16_SEGEND");

                entity.Property(e => e.Segments16Segform).HasColumnName("SEGMENTS16_SEGFORM");

                entity.Property(e => e.Segments16Seglen).HasColumnName("SEGMENTS16_SEGLEN");

                entity.Property(e => e.Segments16Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS16_SEGSTART");

                entity.Property(e => e.Segments16Txtlang).HasColumnName("SEGMENTS16_TXTLANG");

                entity.Property(e => e.Segments1Fillch).HasColumnName("SEGMENTS1_FILLCH");

                entity.Property(e => e.Segments1Increm).HasColumnName("SEGMENTS1_INCREM");

                entity.Property(e => e.Segments1Resvd1).HasColumnName("SEGMENTS1_RESVD1");

                entity.Property(e => e.Segments1Resvd2).HasColumnName("SEGMENTS1_RESVD2");

                entity.Property(e => e.Segments1Segattrb).HasColumnName("SEGMENTS1_SEGATTRB");

                entity.Property(e => e.Segments1Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS1_SEGEND");

                entity.Property(e => e.Segments1Segform).HasColumnName("SEGMENTS1_SEGFORM");

                entity.Property(e => e.Segments1Seglen).HasColumnName("SEGMENTS1_SEGLEN");

                entity.Property(e => e.Segments1Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS1_SEGSTART");

                entity.Property(e => e.Segments1Txtlang).HasColumnName("SEGMENTS1_TXTLANG");

                entity.Property(e => e.Segments2Fillch).HasColumnName("SEGMENTS2_FILLCH");

                entity.Property(e => e.Segments2Increm).HasColumnName("SEGMENTS2_INCREM");

                entity.Property(e => e.Segments2Resvd1).HasColumnName("SEGMENTS2_RESVD1");

                entity.Property(e => e.Segments2Resvd2).HasColumnName("SEGMENTS2_RESVD2");

                entity.Property(e => e.Segments2Segattrb).HasColumnName("SEGMENTS2_SEGATTRB");

                entity.Property(e => e.Segments2Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS2_SEGEND");

                entity.Property(e => e.Segments2Segform).HasColumnName("SEGMENTS2_SEGFORM");

                entity.Property(e => e.Segments2Seglen).HasColumnName("SEGMENTS2_SEGLEN");

                entity.Property(e => e.Segments2Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS2_SEGSTART");

                entity.Property(e => e.Segments2Txtlang).HasColumnName("SEGMENTS2_TXTLANG");

                entity.Property(e => e.Segments3Fillch).HasColumnName("SEGMENTS3_FILLCH");

                entity.Property(e => e.Segments3Increm).HasColumnName("SEGMENTS3_INCREM");

                entity.Property(e => e.Segments3Resvd1).HasColumnName("SEGMENTS3_RESVD1");

                entity.Property(e => e.Segments3Resvd2).HasColumnName("SEGMENTS3_RESVD2");

                entity.Property(e => e.Segments3Segattrb).HasColumnName("SEGMENTS3_SEGATTRB");

                entity.Property(e => e.Segments3Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS3_SEGEND");

                entity.Property(e => e.Segments3Segform).HasColumnName("SEGMENTS3_SEGFORM");

                entity.Property(e => e.Segments3Seglen).HasColumnName("SEGMENTS3_SEGLEN");

                entity.Property(e => e.Segments3Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS3_SEGSTART");

                entity.Property(e => e.Segments3Txtlang).HasColumnName("SEGMENTS3_TXTLANG");

                entity.Property(e => e.Segments4Fillch).HasColumnName("SEGMENTS4_FILLCH");

                entity.Property(e => e.Segments4Increm).HasColumnName("SEGMENTS4_INCREM");

                entity.Property(e => e.Segments4Resvd1).HasColumnName("SEGMENTS4_RESVD1");

                entity.Property(e => e.Segments4Resvd2).HasColumnName("SEGMENTS4_RESVD2");

                entity.Property(e => e.Segments4Segattrb).HasColumnName("SEGMENTS4_SEGATTRB");

                entity.Property(e => e.Segments4Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS4_SEGEND");

                entity.Property(e => e.Segments4Segform).HasColumnName("SEGMENTS4_SEGFORM");

                entity.Property(e => e.Segments4Seglen).HasColumnName("SEGMENTS4_SEGLEN");

                entity.Property(e => e.Segments4Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS4_SEGSTART");

                entity.Property(e => e.Segments4Txtlang).HasColumnName("SEGMENTS4_TXTLANG");

                entity.Property(e => e.Segments5Fillch).HasColumnName("SEGMENTS5_FILLCH");

                entity.Property(e => e.Segments5Increm).HasColumnName("SEGMENTS5_INCREM");

                entity.Property(e => e.Segments5Resvd1).HasColumnName("SEGMENTS5_RESVD1");

                entity.Property(e => e.Segments5Resvd2).HasColumnName("SEGMENTS5_RESVD2");

                entity.Property(e => e.Segments5Segattrb).HasColumnName("SEGMENTS5_SEGATTRB");

                entity.Property(e => e.Segments5Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS5_SEGEND");

                entity.Property(e => e.Segments5Segform).HasColumnName("SEGMENTS5_SEGFORM");

                entity.Property(e => e.Segments5Seglen).HasColumnName("SEGMENTS5_SEGLEN");

                entity.Property(e => e.Segments5Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS5_SEGSTART");

                entity.Property(e => e.Segments5Txtlang).HasColumnName("SEGMENTS5_TXTLANG");

                entity.Property(e => e.Segments6Fillch).HasColumnName("SEGMENTS6_FILLCH");

                entity.Property(e => e.Segments6Increm).HasColumnName("SEGMENTS6_INCREM");

                entity.Property(e => e.Segments6Resvd1).HasColumnName("SEGMENTS6_RESVD1");

                entity.Property(e => e.Segments6Resvd2).HasColumnName("SEGMENTS6_RESVD2");

                entity.Property(e => e.Segments6Segattrb).HasColumnName("SEGMENTS6_SEGATTRB");

                entity.Property(e => e.Segments6Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS6_SEGEND");

                entity.Property(e => e.Segments6Segform).HasColumnName("SEGMENTS6_SEGFORM");

                entity.Property(e => e.Segments6Seglen).HasColumnName("SEGMENTS6_SEGLEN");

                entity.Property(e => e.Segments6Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS6_SEGSTART");

                entity.Property(e => e.Segments6Txtlang).HasColumnName("SEGMENTS6_TXTLANG");

                entity.Property(e => e.Segments7Fillch).HasColumnName("SEGMENTS7_FILLCH");

                entity.Property(e => e.Segments7Increm).HasColumnName("SEGMENTS7_INCREM");

                entity.Property(e => e.Segments7Resvd1).HasColumnName("SEGMENTS7_RESVD1");

                entity.Property(e => e.Segments7Resvd2).HasColumnName("SEGMENTS7_RESVD2");

                entity.Property(e => e.Segments7Segattrb).HasColumnName("SEGMENTS7_SEGATTRB");

                entity.Property(e => e.Segments7Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS7_SEGEND");

                entity.Property(e => e.Segments7Segform).HasColumnName("SEGMENTS7_SEGFORM");

                entity.Property(e => e.Segments7Seglen).HasColumnName("SEGMENTS7_SEGLEN");

                entity.Property(e => e.Segments7Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS7_SEGSTART");

                entity.Property(e => e.Segments7Txtlang).HasColumnName("SEGMENTS7_TXTLANG");

                entity.Property(e => e.Segments8Fillch).HasColumnName("SEGMENTS8_FILLCH");

                entity.Property(e => e.Segments8Increm).HasColumnName("SEGMENTS8_INCREM");

                entity.Property(e => e.Segments8Resvd1).HasColumnName("SEGMENTS8_RESVD1");

                entity.Property(e => e.Segments8Resvd2).HasColumnName("SEGMENTS8_RESVD2");

                entity.Property(e => e.Segments8Segattrb).HasColumnName("SEGMENTS8_SEGATTRB");

                entity.Property(e => e.Segments8Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS8_SEGEND");

                entity.Property(e => e.Segments8Segform).HasColumnName("SEGMENTS8_SEGFORM");

                entity.Property(e => e.Segments8Seglen).HasColumnName("SEGMENTS8_SEGLEN");

                entity.Property(e => e.Segments8Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS8_SEGSTART");

                entity.Property(e => e.Segments8Txtlang).HasColumnName("SEGMENTS8_TXTLANG");

                entity.Property(e => e.Segments9Fillch).HasColumnName("SEGMENTS9_FILLCH");

                entity.Property(e => e.Segments9Increm).HasColumnName("SEGMENTS9_INCREM");

                entity.Property(e => e.Segments9Resvd1).HasColumnName("SEGMENTS9_RESVD1");

                entity.Property(e => e.Segments9Resvd2).HasColumnName("SEGMENTS9_RESVD2");

                entity.Property(e => e.Segments9Segattrb).HasColumnName("SEGMENTS9_SEGATTRB");

                entity.Property(e => e.Segments9Segend)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS9_SEGEND");

                entity.Property(e => e.Segments9Segform).HasColumnName("SEGMENTS9_SEGFORM");

                entity.Property(e => e.Segments9Seglen).HasColumnName("SEGMENTS9_SEGLEN");

                entity.Property(e => e.Segments9Segstart)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SEGMENTS9_SEGSTART");

                entity.Property(e => e.Segments9Txtlang).HasColumnName("SEGMENTS9_TXTLANG");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Termid).HasColumnName("TERMID");

                entity.Property(e => e.Userid).HasColumnName("USERID");

                entity.Property(e => e.Whid).HasColumnName("WHID");

                entity.Property(e => e.Workarea).HasColumnName("WORKAREA");

                entity.Property(e => e.Workid).HasColumnName("WORKID");
            });

            modelBuilder.Entity<LLngexcl>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("LNGEXCLS_I1");

                entity.ToTable("L_LNGEXCLS");

                entity.HasIndex(e => new { e.Docid, e.Docref, e.Fieldid, e.Langid }, "LNGEXCLS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Docid).HasColumnName("DOCID");

                entity.Property(e => e.Docref).HasColumnName("DOCREF");

                entity.Property(e => e.Fieldcont)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("FIELDCONT");

                entity.Property(e => e.Fieldid).HasColumnName("FIELDID");

                entity.Property(e => e.Langid).HasColumnName("LANGID");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<LLog>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("LOG_I1");

                entity.ToTable("L_LOG");

                entity.HasIndex(e => new { e.Logtype, e.Sessioncode, e.Linenr }, "LOG_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Logtype).HasColumnName("LOGTYPE");

                entity.Property(e => e.Msgnum1).HasColumnName("MSGNUM1");

                entity.Property(e => e.Msgnum2).HasColumnName("MSGNUM2");

                entity.Property(e => e.Sessioncode)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("SESSIONCODE");
            });

            modelBuilder.Entity<LMandfld>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("MANDFLDS_I1");

                entity.ToTable("L_MANDFLDS");

                entity.HasIndex(e => e.Modulenr, "MANDFLDS_I2");

                entity.HasIndex(e => new { e.Modulenr, e.Level, e.Nr }, "MANDFLDS_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Caption)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CAPTION");

                entity.Property(e => e.Doctype1).HasColumnName("DOCTYPE1");

                entity.Property(e => e.Doctype10).HasColumnName("DOCTYPE10");

                entity.Property(e => e.Doctype11).HasColumnName("DOCTYPE11");

                entity.Property(e => e.Doctype12).HasColumnName("DOCTYPE12");

                entity.Property(e => e.Doctype13).HasColumnName("DOCTYPE13");

                entity.Property(e => e.Doctype14).HasColumnName("DOCTYPE14");

                entity.Property(e => e.Doctype15).HasColumnName("DOCTYPE15");

                entity.Property(e => e.Doctype16).HasColumnName("DOCTYPE16");

                entity.Property(e => e.Doctype17).HasColumnName("DOCTYPE17");

                entity.Property(e => e.Doctype18).HasColumnName("DOCTYPE18");

                entity.Property(e => e.Doctype19).HasColumnName("DOCTYPE19");

                entity.Property(e => e.Doctype2).HasColumnName("DOCTYPE2");

                entity.Property(e => e.Doctype20).HasColumnName("DOCTYPE20");

                entity.Property(e => e.Doctype21).HasColumnName("DOCTYPE21");

                entity.Property(e => e.Doctype22).HasColumnName("DOCTYPE22");

                entity.Property(e => e.Doctype23).HasColumnName("DOCTYPE23");

                entity.Property(e => e.Doctype24).HasColumnName("DOCTYPE24");

                entity.Property(e => e.Doctype25).HasColumnName("DOCTYPE25");

                entity.Property(e => e.Doctype3).HasColumnName("DOCTYPE3");

                entity.Property(e => e.Doctype4).HasColumnName("DOCTYPE4");

                entity.Property(e => e.Doctype5).HasColumnName("DOCTYPE5");

                entity.Property(e => e.Doctype6).HasColumnName("DOCTYPE6");

                entity.Property(e => e.Doctype7).HasColumnName("DOCTYPE7");

                entity.Property(e => e.Doctype8).HasColumnName("DOCTYPE8");

                entity.Property(e => e.Doctype9).HasColumnName("DOCTYPE9");

                entity.Property(e => e.Edespatchtype1).HasColumnName("EDESPATCHTYPE1");

                entity.Property(e => e.Edespatchtype10).HasColumnName("EDESPATCHTYPE10");

                entity.Property(e => e.Edespatchtype2).HasColumnName("EDESPATCHTYPE2");

                entity.Property(e => e.Edespatchtype3).HasColumnName("EDESPATCHTYPE3");

                entity.Property(e => e.Edespatchtype4).HasColumnName("EDESPATCHTYPE4");

                entity.Property(e => e.Edespatchtype5).HasColumnName("EDESPATCHTYPE5");

                entity.Property(e => e.Edespatchtype6).HasColumnName("EDESPATCHTYPE6");

                entity.Property(e => e.Edespatchtype7).HasColumnName("EDESPATCHTYPE7");

                entity.Property(e => e.Edespatchtype8).HasColumnName("EDESPATCHTYPE8");

                entity.Property(e => e.Edespatchtype9).HasColumnName("EDESPATCHTYPE9");

                entity.Property(e => e.Einvoicetype1).HasColumnName("EINVOICETYPE1");

                entity.Property(e => e.Einvoicetype10).HasColumnName("EINVOICETYPE10");

                entity.Property(e => e.Einvoicetype2).HasColumnName("EINVOICETYPE2");

                entity.Property(e => e.Einvoicetype3).HasColumnName("EINVOICETYPE3");

                entity.Property(e => e.Einvoicetype4).HasColumnName("EINVOICETYPE4");

                entity.Property(e => e.Einvoicetype5).HasColumnName("EINVOICETYPE5");

                entity.Property(e => e.Einvoicetype6).HasColumnName("EINVOICETYPE6");

                entity.Property(e => e.Einvoicetype7).HasColumnName("EINVOICETYPE7");

                entity.Property(e => e.Einvoicetype8).HasColumnName("EINVOICETYPE8");

                entity.Property(e => e.Einvoicetype9).HasColumnName("EINVOICETYPE9");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Frmstrcap)
                    .HasMaxLength(126)
                    .IsUnicode(false)
                    .HasColumnName("FRMSTRCAP");

                entity.Property(e => e.Frmstrg1)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FRMSTRG1");

                entity.Property(e => e.Frmstrg2)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FRMSTRG2");

                entity.Property(e => e.Frmstrg3)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FRMSTRG3");

                entity.Property(e => e.Frmstrg4)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FRMSTRG4");

                entity.Property(e => e.Frmstrg5)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("FRMSTRG5");

                entity.Property(e => e.Itemtype1).HasColumnName("ITEMTYPE1");

                entity.Property(e => e.Itemtype10).HasColumnName("ITEMTYPE10");

                entity.Property(e => e.Itemtype11).HasColumnName("ITEMTYPE11");

                entity.Property(e => e.Itemtype12).HasColumnName("ITEMTYPE12");

                entity.Property(e => e.Itemtype13).HasColumnName("ITEMTYPE13");

                entity.Property(e => e.Itemtype14).HasColumnName("ITEMTYPE14");

                entity.Property(e => e.Itemtype15).HasColumnName("ITEMTYPE15");

                entity.Property(e => e.Itemtype16).HasColumnName("ITEMTYPE16");

                entity.Property(e => e.Itemtype17).HasColumnName("ITEMTYPE17");

                entity.Property(e => e.Itemtype18).HasColumnName("ITEMTYPE18");

                entity.Property(e => e.Itemtype19).HasColumnName("ITEMTYPE19");

                entity.Property(e => e.Itemtype2).HasColumnName("ITEMTYPE2");

                entity.Property(e => e.Itemtype20).HasColumnName("ITEMTYPE20");

                entity.Property(e => e.Itemtype21).HasColumnName("ITEMTYPE21");

                entity.Property(e => e.Itemtype22).HasColumnName("ITEMTYPE22");

                entity.Property(e => e.Itemtype23).HasColumnName("ITEMTYPE23");

                entity.Property(e => e.Itemtype24).HasColumnName("ITEMTYPE24");

                entity.Property(e => e.Itemtype25).HasColumnName("ITEMTYPE25");

                entity.Property(e => e.Itemtype3).HasColumnName("ITEMTYPE3");

                entity.Property(e => e.Itemtype4).HasColumnName("ITEMTYPE4");

                entity.Property(e => e.Itemtype5).HasColumnName("ITEMTYPE5");

                entity.Property(e => e.Itemtype6).HasColumnName("ITEMTYPE6");

                entity.Property(e => e.Itemtype7).HasColumnName("ITEMTYPE7");

                entity.Property(e => e.Itemtype8).HasColumnName("ITEMTYPE8");

                entity.Property(e => e.Itemtype9).HasColumnName("ITEMTYPE9");

                entity.Property(e => e.Level).HasColumnName("LEVEL_");

                entity.Property(e => e.Lineinfo)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("LINEINFO");

                entity.Property(e => e.Mandatory).HasColumnName("MANDATORY");

                entity.Property(e => e.Mandmaxlen).HasColumnName("MANDMAXLEN");

                entity.Property(e => e.Mandminlen).HasColumnName("MANDMINLEN");

                entity.Property(e => e.Mandvaluetype).HasColumnName("MANDVALUETYPE");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Trntype1).HasColumnName("TRNTYPE1");

                entity.Property(e => e.Trntype10).HasColumnName("TRNTYPE10");

                entity.Property(e => e.Trntype11).HasColumnName("TRNTYPE11");

                entity.Property(e => e.Trntype12).HasColumnName("TRNTYPE12");

                entity.Property(e => e.Trntype13).HasColumnName("TRNTYPE13");

                entity.Property(e => e.Trntype14).HasColumnName("TRNTYPE14");

                entity.Property(e => e.Trntype15).HasColumnName("TRNTYPE15");

                entity.Property(e => e.Trntype16).HasColumnName("TRNTYPE16");

                entity.Property(e => e.Trntype17).HasColumnName("TRNTYPE17");

                entity.Property(e => e.Trntype18).HasColumnName("TRNTYPE18");

                entity.Property(e => e.Trntype19).HasColumnName("TRNTYPE19");

                entity.Property(e => e.Trntype2).HasColumnName("TRNTYPE2");

                entity.Property(e => e.Trntype20).HasColumnName("TRNTYPE20");

                entity.Property(e => e.Trntype21).HasColumnName("TRNTYPE21");

                entity.Property(e => e.Trntype22).HasColumnName("TRNTYPE22");

                entity.Property(e => e.Trntype23).HasColumnName("TRNTYPE23");

                entity.Property(e => e.Trntype24).HasColumnName("TRNTYPE24");

                entity.Property(e => e.Trntype25).HasColumnName("TRNTYPE25");

                entity.Property(e => e.Trntype3).HasColumnName("TRNTYPE3");

                entity.Property(e => e.Trntype4).HasColumnName("TRNTYPE4");

                entity.Property(e => e.Trntype5).HasColumnName("TRNTYPE5");

                entity.Property(e => e.Trntype6).HasColumnName("TRNTYPE6");

                entity.Property(e => e.Trntype7).HasColumnName("TRNTYPE7");

                entity.Property(e => e.Trntype8).HasColumnName("TRNTYPE8");

                entity.Property(e => e.Trntype9).HasColumnName("TRNTYPE9");
            });

            modelBuilder.Entity<LMapconfig>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("MAPCONFIG_I1");

                entity.ToTable("L_MAPCONFIG");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Activated).HasColumnName("ACTIVATED");

                entity.Property(e => e.Creationdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATIONDATE");

                entity.Property(e => e.Infotechid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INFOTECHID");

                entity.Property(e => e.Warnings).HasColumnName("WARNINGS");
            });

            modelBuilder.Entity<LMessage>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("MESSAGES_I1");

                entity.ToTable("L_MESSAGES");

                entity.HasIndex(e => e.Fromusernr, "MESSAGES_I2");

                entity.HasIndex(e => e.Tousernr, "MESSAGES_I3");

                entity.HasIndex(e => new { e.Date, e.Time, e.Priority }, "MESSAGES_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Fromuser)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("FROMUSER");

                entity.Property(e => e.Fromusernr).HasColumnName("FROMUSERNR");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Readflag).HasColumnName("READFLAG");

                entity.Property(e => e.Relatedno)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("RELATEDNO");

                entity.Property(e => e.Relatedref).HasColumnName("RELATEDREF");

                entity.Property(e => e.Relatedtyp).HasColumnName("RELATEDTYP");

                entity.Property(e => e.Sendedcopy).HasColumnName("SENDEDCOPY");

                entity.Property(e => e.Subject)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("SUBJECT");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Touser)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TOUSER");

                entity.Property(e => e.Tousernr).HasColumnName("TOUSERNR");
            });

            modelBuilder.Entity<LMessageatt>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("MESSAGEATT_I1");

                entity.ToTable("L_MESSAGEATT");

                entity.HasIndex(e => e.Messageref, "MESSAGEATT_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Attidx).HasColumnName("ATTIDX");

                entity.Property(e => e.Filename)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("FILENAME");

                entity.Property(e => e.Filesize).HasColumnName("FILESIZE");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Messageref).HasColumnName("MESSAGEREF");
            });

            modelBuilder.Entity<LNet>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("NET_I1");

                entity.ToTable("L_NET");

                entity.HasIndex(e => e.Lockstr, "NET_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Counter).HasColumnName("COUNTER");

                entity.Property(e => e.Lockstr)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("LOCKSTR");

                entity.Property(e => e.Programname)
                    .HasMaxLength(129)
                    .IsUnicode(false)
                    .HasColumnName("PROGRAMNAME");

                entity.Property(e => e.Sessioncode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SESSIONCODE");
            });

            modelBuilder.Entity<LOrgdef>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("ORGDEFS_I3");

                entity.ToTable("L_ORGDEFS");

                entity.HasIndex(e => new { e.Code, e.Revdate }, "ORGDEFS_I1")
                    .IsUnique();

                entity.HasIndex(e => new { e.Chartid, e.Revdate }, "ORGDEFS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Chartid).HasColumnName("CHARTID");

                entity.Property(e => e.Code)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Exp)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("EXP");

                entity.Property(e => e.Grouping).HasColumnName("GROUPING");

                entity.Property(e => e.Revdate)
                    .HasColumnType("datetime")
                    .HasColumnName("REVDATE");
            });

            modelBuilder.Entity<LOrgdoc>(entity =>
            {
                entity.HasKey(e => e.Lref)
                    .HasName("ORGDOC_I2");

                entity.ToTable("L_ORGDOC");

                entity.HasIndex(e => new { e.Infotyp, e.Inforef, e.Doctyp, e.Docnr }, "ORGDOC_I1");

                entity.Property(e => e.Lref).HasColumnName("LREF");

                entity.Property(e => e.Docnr).HasColumnName("DOCNR");

                entity.Property(e => e.Doctyp).HasColumnName("DOCTYP");

                entity.Property(e => e.Inforef).HasColumnName("INFOREF");

                entity.Property(e => e.Infotyp).HasColumnName("INFOTYP");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");
            });

            modelBuilder.Entity<LPaytype>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("PAYTYPES_I1");

                entity.ToTable("L_PAYTYPES");

                entity.HasIndex(e => e.Code, "PAYTYPES_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Name2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME2");
            });

            modelBuilder.Entity<LPckcode>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("PCKCODES_I1");

                entity.ToTable("L_PCKCODES");

                entity.HasIndex(e => e.Pcode, "PCKCODES_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Edicode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("EDICODE");

                entity.Property(e => e.Pcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PCODE");

                entity.Property(e => e.Pdef)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("PDEF");

                entity.Property(e => e.Pdef2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("PDEF2");
            });

            modelBuilder.Entity<LPosdef>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("POSDEFS_I3");

                entity.ToTable("L_POSDEFS");

                entity.HasIndex(e => new { e.Chartref, e.Workid }, "POSDEFS_I1")
                    .IsUnique();

                entity.HasIndex(e => new { e.Chartref, e.Upid, e.Code }, "POSDEFS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Assistant).HasColumnName("ASSISTANT");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Chartref).HasColumnName("CHARTREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Deptnr).HasColumnName("DEPTNR");

                entity.Property(e => e.Exp)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("EXP");

                entity.Property(e => e.Expcenter)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("EXPCENTER");

                entity.Property(e => e.Unitnr).HasColumnName("UNITNR");

                entity.Property(e => e.Upid).HasColumnName("UPID");

                entity.Property(e => e.Workid).HasColumnName("WORKID");
            });

            modelBuilder.Entity<LPostcode>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("POSTCODE_I1");

                entity.ToTable("L_POSTCODE");

                entity.HasIndex(e => new { e.Country, e.City, e.Postcode }, "POSTCODE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Country, e.Postcode }, "POSTCODE_I3");

                entity.HasIndex(e => e.Postcode, "POSTCODE_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.City).HasColumnName("CITY");

                entity.Property(e => e.Country).HasColumnName("COUNTRY");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<LPriceindex>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("PRICEINDEX_I1");

                entity.ToTable("L_PRICEINDEX");

                entity.HasIndex(e => new { e.Idxtypref, e.Idxdate }, "PRICEINDEX_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Idxdate)
                    .HasColumnType("datetime")
                    .HasColumnName("IDXDATE");

                entity.Property(e => e.Idxtypref).HasColumnName("IDXTYPREF");

                entity.Property(e => e.Priceidx).HasColumnName("PRICEIDX");
            });

            modelBuilder.Entity<LPriceindextyp>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("PRICEINDEXTYP_I1");

                entity.ToTable("L_PRICEINDEXTYP");

                entity.HasIndex(e => new { e.Typid, e.Typname }, "PRICEINDEXTYP_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Typid).HasColumnName("TYPID");

                entity.Property(e => e.Typname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TYPNAME");
            });

            modelBuilder.Entity<LRediscintrate>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("REDISCINTRATES_I1");

                entity.ToTable("L_REDISCINTRATES");

                entity.HasIndex(e => new { e.Crtype, e.Ratedate }, "REDISCINTRATES_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Crtype).HasColumnName("CRTYPE");

                entity.Property(e => e.Rate).HasColumnName("RATE");

                entity.Property(e => e.Ratedate)
                    .HasColumnType("datetime")
                    .HasColumnName("RATEDATE");
            });

            modelBuilder.Entity<LRegimetyp>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("REGIMETYP_I1");

                entity.ToTable("L_REGIMETYP");

                entity.HasIndex(e => e.Code, "REGIMETYP_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Def)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("DEF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<LRpfilts001>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("RPFILTS001_I1");

                entity.ToTable("L_RPFILTS001");

                entity.HasIndex(e => new { e.Datatype, e.Ownerid, e.Instance, e.Defaultflg }, "RPFILTS001_I2");

                entity.HasIndex(e => new { e.Datatype, e.Ownerid, e.Instance, e.Tempname }, "RPFILTS001_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Authcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("AUTHCODE");

                entity.Property(e => e.Datasize).HasColumnName("DATASIZE");

                entity.Property(e => e.Datatype).HasColumnName("DATATYPE");

                entity.Property(e => e.Defaultflg).HasColumnName("DEFAULTFLG");

                entity.Property(e => e.Explanation)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("EXPLANATION");

                entity.Property(e => e.Instance).HasColumnName("INSTANCE");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Ownerid).HasColumnName("OWNERID");

                entity.Property(e => e.Tempname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEMPNAME");

                entity.Property(e => e.UpdateinfoCreatedby).HasColumnName("UPDATEINFO_CREATEDBY");

                entity.Property(e => e.UpdateinfoCreateddate).HasColumnName("UPDATEINFO_CREATEDDATE");

                entity.Property(e => e.UpdateinfoCreatedhour).HasColumnName("UPDATEINFO_CREATEDHOUR");

                entity.Property(e => e.UpdateinfoCreatedmin).HasColumnName("UPDATEINFO_CREATEDMIN");

                entity.Property(e => e.UpdateinfoCreatedsec).HasColumnName("UPDATEINFO_CREATEDSEC");

                entity.Property(e => e.UpdateinfoModifiedby).HasColumnName("UPDATEINFO_MODIFIEDBY");

                entity.Property(e => e.UpdateinfoModifieddate).HasColumnName("UPDATEINFO_MODIFIEDDATE");

                entity.Property(e => e.UpdateinfoModifiedhour).HasColumnName("UPDATEINFO_MODIFIEDHOUR");

                entity.Property(e => e.UpdateinfoModifiedmin).HasColumnName("UPDATEINFO_MODIFIEDMIN");

                entity.Property(e => e.UpdateinfoModifiedsec).HasColumnName("UPDATEINFO_MODIFIEDSEC");

                entity.Property(e => e.Userdefault).HasColumnName("USERDEFAULT");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");

                entity.Property(e => e.Webdefflg).HasColumnName("WEBDEFFLG");
            });

            modelBuilder.Entity<LRplays001>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("RPLAYS_001_I1");

                entity.ToTable("L_RPLAYS_001");

                entity.HasIndex(e => new { e.Datatype, e.Ownerid, e.Instance, e.Defaultflg }, "RPLAYS_001_I2");

                entity.HasIndex(e => new { e.Datatype, e.Ownerid, e.Instance, e.Tempname }, "RPLAYS_001_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Authcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("AUTHCODE");

                entity.Property(e => e.Datasize).HasColumnName("DATASIZE");

                entity.Property(e => e.Datatype).HasColumnName("DATATYPE");

                entity.Property(e => e.Defaultflg).HasColumnName("DEFAULTFLG");

                entity.Property(e => e.Explanation)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("EXPLANATION");

                entity.Property(e => e.Instance).HasColumnName("INSTANCE");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Ownerid).HasColumnName("OWNERID");

                entity.Property(e => e.Tempname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEMPNAME");

                entity.Property(e => e.UpdateinfoCreatedby).HasColumnName("UPDATEINFO_CREATEDBY");

                entity.Property(e => e.UpdateinfoCreateddate).HasColumnName("UPDATEINFO_CREATEDDATE");

                entity.Property(e => e.UpdateinfoCreatedhour).HasColumnName("UPDATEINFO_CREATEDHOUR");

                entity.Property(e => e.UpdateinfoCreatedmin).HasColumnName("UPDATEINFO_CREATEDMIN");

                entity.Property(e => e.UpdateinfoCreatedsec).HasColumnName("UPDATEINFO_CREATEDSEC");

                entity.Property(e => e.UpdateinfoModifiedby).HasColumnName("UPDATEINFO_MODIFIEDBY");

                entity.Property(e => e.UpdateinfoModifieddate).HasColumnName("UPDATEINFO_MODIFIEDDATE");

                entity.Property(e => e.UpdateinfoModifiedhour).HasColumnName("UPDATEINFO_MODIFIEDHOUR");

                entity.Property(e => e.UpdateinfoModifiedmin).HasColumnName("UPDATEINFO_MODIFIEDMIN");

                entity.Property(e => e.UpdateinfoModifiedsec).HasColumnName("UPDATEINFO_MODIFIEDSEC");

                entity.Property(e => e.Userdefault).HasColumnName("USERDEFAULT");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");

                entity.Property(e => e.Webdefflg).HasColumnName("WEBDEFFLG");
            });

            modelBuilder.Entity<LSchool>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("SCHOOL_I1");

                entity.ToTable("L_SCHOOL");

                entity.HasIndex(e => new { e.Typ, e.Code }, "SCHOOL_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.Cntrnr).HasColumnName("CNTRNR");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<LShpagent>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("SHPAGENT_I1");

                entity.ToTable("L_SHPAGENT");

                entity.HasIndex(e => e.Code, "SHPAGENT_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.City)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Citycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CITYCODE");

                entity.Property(e => e.Clanguage).HasColumnName("CLANGUAGE");

                entity.Property(e => e.Code)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Country)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.District)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Districtcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICTCODE");

                entity.Property(e => e.Email)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("EMAIL");

                entity.Property(e => e.Faxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("FAXNR");

                entity.Property(e => e.Firmtype).HasColumnName("FIRMTYPE");

                entity.Property(e => e.Incharge)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("INCHARGE");

                entity.Property(e => e.Name)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Surname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("SURNAME");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Tcno)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("TCNO");

                entity.Property(e => e.Telnrs1)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS1");

                entity.Property(e => e.Telnrs2)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS2");

                entity.Property(e => e.Title)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TITLE");

                entity.Property(e => e.Town)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Towncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TOWNCODE");

                entity.Property(e => e.Trackingform)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TRACKINGFORM");

                entity.Property(e => e.Webaddr)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("WEBADDR");
            });

            modelBuilder.Entity<LShptype>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("SHPTYPES_I1");

                entity.ToTable("L_SHPTYPES");

                entity.HasIndex(e => e.Scode, "SHPTYPES_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Edicode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("EDICODE");

                entity.Property(e => e.Pricelevel).HasColumnName("PRICELEVEL");

                entity.Property(e => e.Scode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("SCODE");

                entity.Property(e => e.Sdef)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SDEF");

                entity.Property(e => e.Sdef2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SDEF2");
            });

            modelBuilder.Entity<LSm>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("SMS_I1");

                entity.ToTable("L_SMS");

                entity.HasIndex(e => new { e.Begdate, e.Begtime }, "SMS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Begtime).HasColumnName("BEGTIME");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Grpcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("GRPCODE");

                entity.Property(e => e.Issms).HasColumnName("ISSMS");

                entity.Property(e => e.Lastsmsday)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTSMSDAY");

                entity.Property(e => e.Missedsmscount).HasColumnName("MISSEDSMSCOUNT");

                entity.Property(e => e.Repdate)
                    .HasColumnType("datetime")
                    .HasColumnName("REPDATE");

                entity.Property(e => e.Repday36).HasColumnName("REPDAY36");

                entity.Property(e => e.Repeattype).HasColumnName("REPEATTYPE");

                entity.Property(e => e.Repmonth).HasColumnName("REPMONTH");

                entity.Property(e => e.Reptime).HasColumnName("REPTIME");

                entity.Property(e => e.Sendedsmscount).HasColumnName("SENDEDSMSCOUNT");

                entity.Property(e => e.Smsfirms)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("SMSFIRMS");

                entity.Property(e => e.Smslock).HasColumnName("SMSLOCK");

                entity.Property(e => e.Smsservice).HasColumnName("SMSSERVICE");

                entity.Property(e => e.Smsusers)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("SMSUSERS");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Suppliercode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SUPPLIERCODE");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");
            });

            modelBuilder.Entity<LSmsuser>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("SMSUSER_I1");

                entity.ToTable("L_SMSUSER");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Activestatus).HasColumnName("ACTIVESTATUS");

                entity.Property(e => e.Name)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Supplierconfirmed).HasColumnName("SUPPLIERCONFIRMED");

                entity.Property(e => e.Surname)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SURNAME");

                entity.Property(e => e.Telone)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("TELONE");
            });

            modelBuilder.Entity<LStatusinfo>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("STATUSINFO_I1");

                entity.ToTable("L_STATUSINFO");

                entity.HasIndex(e => new { e.Infotyp, e.Nr }, "STATUSINFO_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Description)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Fromwhere).HasColumnName("FROMWHERE");

                entity.Property(e => e.Infotyp).HasColumnName("INFOTYP");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Nr).HasColumnName("NR");
            });

            modelBuilder.Entity<LTablelays001>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("TABLELAYS_001_I1");

                entity.ToTable("L_TABLELAYS_001");

                entity.HasIndex(e => new { e.Datatype, e.Ownerid, e.Instance, e.Defaultflg }, "TABLELAYS_001_I2");

                entity.HasIndex(e => new { e.Datatype, e.Ownerid, e.Instance, e.Tempname }, "TABLELAYS_001_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Authcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("AUTHCODE");

                entity.Property(e => e.Datasize).HasColumnName("DATASIZE");

                entity.Property(e => e.Datatype).HasColumnName("DATATYPE");

                entity.Property(e => e.Defaultflg).HasColumnName("DEFAULTFLG");

                entity.Property(e => e.Explanation)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("EXPLANATION");

                entity.Property(e => e.Instance).HasColumnName("INSTANCE");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Ownerid).HasColumnName("OWNERID");

                entity.Property(e => e.Tempname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEMPNAME");

                entity.Property(e => e.UpdateinfoCreatedby).HasColumnName("UPDATEINFO_CREATEDBY");

                entity.Property(e => e.UpdateinfoCreateddate).HasColumnName("UPDATEINFO_CREATEDDATE");

                entity.Property(e => e.UpdateinfoCreatedhour).HasColumnName("UPDATEINFO_CREATEDHOUR");

                entity.Property(e => e.UpdateinfoCreatedmin).HasColumnName("UPDATEINFO_CREATEDMIN");

                entity.Property(e => e.UpdateinfoCreatedsec).HasColumnName("UPDATEINFO_CREATEDSEC");

                entity.Property(e => e.UpdateinfoModifiedby).HasColumnName("UPDATEINFO_MODIFIEDBY");

                entity.Property(e => e.UpdateinfoModifieddate).HasColumnName("UPDATEINFO_MODIFIEDDATE");

                entity.Property(e => e.UpdateinfoModifiedhour).HasColumnName("UPDATEINFO_MODIFIEDHOUR");

                entity.Property(e => e.UpdateinfoModifiedmin).HasColumnName("UPDATEINFO_MODIFIEDMIN");

                entity.Property(e => e.UpdateinfoModifiedsec).HasColumnName("UPDATEINFO_MODIFIEDSEC");

                entity.Property(e => e.Userdefault).HasColumnName("USERDEFAULT");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");

                entity.Property(e => e.Webdefflg).HasColumnName("WEBDEFFLG");
            });

            modelBuilder.Entity<LTaxoffice>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("TAXOFFICE_I1");

                entity.ToTable("L_TAXOFFICE");

                entity.HasIndex(e => new { e.Cntrnr, e.Code }, "TAXOFFICE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "TAXOFFICE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.Cntrnr).HasColumnName("CNTRNR");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<LTextfav>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("TEXTFAV_I1");

                entity.ToTable("L_TEXTFAV");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Info)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("INFO");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");
            });

            modelBuilder.Entity<LTown>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("TOWN_I1");

                entity.ToTable("L_TOWN");

                entity.HasIndex(e => new { e.Ctyref, e.Code }, "TOWN_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "TOWN_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cntrnr).HasColumnName("CNTRNR");

                entity.Property(e => e.Code)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Ctyref).HasColumnName("CTYREF");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Name2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Netflag)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("NETFLAG");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<LTradgrp>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("TRADGRP_I1");

                entity.ToTable("L_TRADGRP");

                entity.HasIndex(e => e.Gcode, "TRADGRP_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Gattrib).HasColumnName("GATTRIB");

                entity.Property(e => e.Gcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("GCODE");

                entity.Property(e => e.Gdef)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GDEF");

                entity.Property(e => e.Trdgrptype).HasColumnName("TRDGRPTYPE");
            });

            modelBuilder.Entity<LTscont>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("TSCONT_I1");

                entity.ToTable("L_TSCONT");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.AsciiAk)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("ASCII_AK");

                entity.Property(e => e.AsciiKa).HasColumnName("ASCII_KA");

                entity.Property(e => e.AsciiSkg).HasColumnName("ASCII_SKG");

                entity.Property(e => e.AsciiSs).HasColumnName("ASCII_SS");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Newprinter)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("NEWPRINTER");

                entity.Property(e => e.Paramname)
                    .HasMaxLength(255)
                    .IsUnicode(false)
                    .HasColumnName("PARAMNAME");

                entity.Property(e => e.Reporttype).HasColumnName("REPORTTYPE");
            });

            modelBuilder.Entity<LTsprop>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("TSPROPS_I1");

                entity.ToTable("L_TSPROPS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Customdir)
                    .HasMaxLength(235)
                    .IsUnicode(false)
                    .HasColumnName("CUSTOMDIR");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Reportname)
                    .HasMaxLength(20)
                    .IsUnicode(false)
                    .HasColumnName("REPORTNAME");

                entity.Property(e => e.Tsid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TSID");

                entity.Property(e => e.Usecustomdir).HasColumnName("USECUSTOMDIR");

                entity.Property(e => e.Usereportname).HasColumnName("USEREPORTNAME");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");
            });

            modelBuilder.Entity<LUserblobtable>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("USERBLOBTABLE_I1");

                entity.ToTable("L_USERBLOBTABLE");

                entity.HasIndex(e => e.Usernr, "USERBLOBTABLE_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");
            });

            modelBuilder.Entity<LUsercom>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("USERCOM_I1");

                entity.ToTable("L_USERCOM");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Comtype).HasColumnName("COMTYPE");

                entity.Property(e => e.Confirmdate)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CONFIRMDATE");

                entity.Property(e => e.Info)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INFO");

                entity.Property(e => e.Receiverusernr).HasColumnName("RECEIVERUSERNR");

                entity.Property(e => e.Requestdate)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("REQUESTDATE");

                entity.Property(e => e.Senderusernr).HasColumnName("SENDERUSERNR");

                entity.Property(e => e.Startdate)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("STARTDATE");

                entity.Property(e => e.Status).HasColumnName("STATUS");
            });

            modelBuilder.Entity<LUsersdef>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("USERSDEF_I1");

                entity.ToTable("L_USERSDEF");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Deptnr).HasColumnName("DEPTNR");

                entity.Property(e => e.Divnr).HasColumnName("DIVNR");

                entity.Property(e => e.Factnr).HasColumnName("FACTNR");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");

                entity.Property(e => e.Whnr).HasColumnName("WHNR");
            });

            modelBuilder.Entity<LUserwinpref>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("USERWINPREF_I1");

                entity.ToTable("L_USERWINPREF");

                entity.HasIndex(e => new { e.Usernr, e.Formid, e.Typ }, "USERWINPREF_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Formid).HasColumnName("FORMID");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");
            });

            modelBuilder.Entity<LWebpage>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("WEBPAGE_I1");

                entity.ToTable("L_WEBPAGE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Annusage).HasColumnName("ANNUSAGE");

                entity.Property(e => e.Campusage).HasColumnName("CAMPUSAGE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Commusage).HasColumnName("COMMUSAGE");

                entity.Property(e => e.Fintabusage).HasColumnName("FINTABUSAGE");

                entity.Property(e => e.Firminfo)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("FIRMINFO");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Imageinc).HasColumnName("IMAGEINC");

                entity.Property(e => e.Itemusage).HasColumnName("ITEMUSAGE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Refusage).HasColumnName("REFUSAGE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Subdomainname)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("SUBDOMAINNAME");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg000Syslog>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I000_SYSLOG_I1");

                entity.ToTable("LG_000_SYSLOG");

                entity.HasIndex(e => new { e.Username, e.Firmno, e.Date, e.Hour, e.Minute, e.Second }, "I000_SYSLOG_I2");

                entity.HasIndex(e => new { e.Firmno, e.Username, e.Date, e.Hour, e.Minute, e.Second }, "I000_SYSLOG_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Description)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Firmno).HasColumnName("FIRMNO");

                entity.Property(e => e.Hour).HasColumnName("HOUR_");

                entity.Property(e => e.Minute).HasColumnName("MINUTE_");

                entity.Property(e => e.Msgs1)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("MSGS1");

                entity.Property(e => e.Msgs2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("MSGS2");

                entity.Property(e => e.Perno).HasColumnName("PERNO");

                entity.Property(e => e.Portnr).HasColumnName("PORTNR");

                entity.Property(e => e.Portref).HasColumnName("PORTREF");

                entity.Property(e => e.Procs11).HasColumnName("PROCS11");

                entity.Property(e => e.Procs12).HasColumnName("PROCS12");

                entity.Property(e => e.Procs13).HasColumnName("PROCS13");

                entity.Property(e => e.Procs14).HasColumnName("PROCS14");

                entity.Property(e => e.Procs15).HasColumnName("PROCS15");

                entity.Property(e => e.Procs21).HasColumnName("PROCS21");

                entity.Property(e => e.Procs22).HasColumnName("PROCS22");

                entity.Property(e => e.Procs23).HasColumnName("PROCS23");

                entity.Property(e => e.Procs24).HasColumnName("PROCS24");

                entity.Property(e => e.Procs25).HasColumnName("PROCS25");

                entity.Property(e => e.Procs26).HasColumnName("PROCS26");

                entity.Property(e => e.Second).HasColumnName("SECOND_");

                entity.Property(e => e.Termcode)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("TERMCODE");

                entity.Property(e => e.Username)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("USERNAME");
            });

            modelBuilder.Entity<Lg00101Accdistdetln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_ACCDISTDETLN_I1");

                entity.ToTable("LG_001_01_ACCDISTDETLN");

                entity.HasIndex(e => e.Prevlineref, "I001_01_ACCDISTDETLN_I2");

                entity.HasIndex(e => new { e.Centerref, e.Date, e.Tsign }, "I001_01_ACCDISTDETLN_I3");

                entity.HasIndex(e => new { e.Projectref, e.Date, e.Tsign }, "I001_01_ACCDISTDETLN_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Credebnet).HasColumnName("CREDEBNET");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Distrate).HasColumnName("DISTRATE");

                entity.Property(e => e.Emucredebnet).HasColumnName("EMUCREDEBNET");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Prevlineref).HasColumnName("PREVLINEREF");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Tsign).HasColumnName("TSIGN");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg00101Accfcasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_ACCFCASGN_I1");

                entity.ToTable("LG_001_01_ACCFCASGN");

                entity.HasIndex(e => new { e.Accfcref, e.Fcref }, "I001_01_ACCFCASGN_I2");

                entity.HasIndex(e => new { e.Fcref, e.Accfcref }, "I001_01_ACCFCASGN_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accfcref).HasColumnName("ACCFCREF");

                entity.Property(e => e.Fcref).HasColumnName("FCREF");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<Lg00101Anbdgtallocfc>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_ANBDGTALLOCFC_I1");

                entity.ToTable("LG_001_01_ANBDGTALLOCFC");

                entity.HasIndex(e => e.Ficheno, "I001_01_ANBDGTALLOCFC_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Ftime, e.Ficheno }, "I001_01_ANBDGTALLOCFC_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Srcbdgtref).HasColumnName("SRCBDGTREF");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");
            });

            modelBuilder.Entity<Lg00101Anbdgtallocln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_ANBDGTALLOCLN_I1");

                entity.ToTable("LG_001_01_ANBDGTALLOCLN");

                entity.HasIndex(e => new { e.Bdallocfcref, e.Lineno }, "I001_01_ANBDGTALLOCLN_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bdallocfcref).HasColumnName("BDALLOCFCREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Dacccorpcode1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DACCCORPCODE1");

                entity.Property(e => e.Dacccorpcode2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DACCCORPCODE2");

                entity.Property(e => e.Dacccorpcode3)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DACCCORPCODE3");

                entity.Property(e => e.Dacccorpcode4)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DACCCORPCODE4");

                entity.Property(e => e.Daccecocode1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DACCECOCODE1");

                entity.Property(e => e.Daccecocode2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DACCECOCODE2");

                entity.Property(e => e.Daccecocode3)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DACCECOCODE3");

                entity.Property(e => e.Daccecocode4)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DACCECOCODE4");

                entity.Property(e => e.Daccfincode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DACCFINCODE");

                entity.Property(e => e.Daccfunccode1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DACCFUNCCODE1");

                entity.Property(e => e.Daccfunccode2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DACCFUNCCODE2");

                entity.Property(e => e.Daccfunccode3)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DACCFUNCCODE3");

                entity.Property(e => e.Daccfunccode4)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("DACCFUNCCODE4");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Dstaccref).HasColumnName("DSTACCREF");

                entity.Property(e => e.Dstbdgtref).HasColumnName("DSTBDGTREF");

                entity.Property(e => e.Dstcrsaccref).HasColumnName("DSTCRSACCREF");

                entity.Property(e => e.Dstcrsraccref).HasColumnName("DSTCRSRACCREF");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Sacccorpcode1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SACCCORPCODE1");

                entity.Property(e => e.Sacccorpcode2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SACCCORPCODE2");

                entity.Property(e => e.Sacccorpcode3)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SACCCORPCODE3");

                entity.Property(e => e.Sacccorpcode4)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SACCCORPCODE4");

                entity.Property(e => e.Saccecocode1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SACCECOCODE1");

                entity.Property(e => e.Saccecocode2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SACCECOCODE2");

                entity.Property(e => e.Saccecocode3)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SACCECOCODE3");

                entity.Property(e => e.Saccecocode4)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SACCECOCODE4");

                entity.Property(e => e.Saccfincode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SACCFINCODE");

                entity.Property(e => e.Saccfunccode1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SACCFUNCCODE1");

                entity.Property(e => e.Saccfunccode2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SACCFUNCCODE2");

                entity.Property(e => e.Saccfunccode3)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SACCFUNCCODE3");

                entity.Property(e => e.Saccfunccode4)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("SACCFUNCCODE4");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Srcaccref).HasColumnName("SRCACCREF");

                entity.Property(e => e.Srcbdgtref).HasColumnName("SRCBDGTREF");

                entity.Property(e => e.Srccrsaccref).HasColumnName("SRCCRSACCREF");

                entity.Property(e => e.Srccrsraccref).HasColumnName("SRCCRSRACCREF");

                entity.Property(e => e.Status).HasColumnName("STATUS");
            });

            modelBuilder.Entity<Lg00101Anbdgtallocprd>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_ANBDGTALLOCPRD_I1");

                entity.ToTable("LG_001_01_ANBDGTALLOCPRD");

                entity.HasIndex(e => new { e.Bdallocfcref, e.Bdalloclnref, e.Lineno }, "I001_01_ANBDGTALLOCPRD_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bdallocfcref).HasColumnName("BDALLOCFCREF");

                entity.Property(e => e.Bdalloclnref).HasColumnName("BDALLOCLNREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Dstaccref).HasColumnName("DSTACCREF");

                entity.Property(e => e.Dstbdgtref).HasColumnName("DSTBDGTREF");

                entity.Property(e => e.Dstcrsaccref).HasColumnName("DSTCRSACCREF");

                entity.Property(e => e.Dstcrsraccref).HasColumnName("DSTCRSRACCREF");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Prdbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRDBEGDATE");

                entity.Property(e => e.Prdenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRDENDDATE");

                entity.Property(e => e.Prdno).HasColumnName("PRDNO");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Srcaccref).HasColumnName("SRCACCREF");

                entity.Property(e => e.Srcbdgtref).HasColumnName("SRCBDGTREF");

                entity.Property(e => e.Srccrsaccref).HasColumnName("SRCCRSACCREF");

                entity.Property(e => e.Srccrsraccref).HasColumnName("SRCCRSRACCREF");

                entity.Property(e => e.Status).HasColumnName("STATUS");
            });

            modelBuilder.Entity<Lg00101Anbdgtrevfc>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_ANBDGTREVFC_I1");

                entity.ToTable("LG_001_01_ANBDGTREVFC");

                entity.HasIndex(e => e.Ficheno, "I001_01_ANBDGTREVFC_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Ftime, e.Ficheno }, "I001_01_ANBDGTREVFC_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bdallocfcref).HasColumnName("BDALLOCFCREF");

                entity.Property(e => e.Bdgtref).HasColumnName("BDGTREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Diffaccfccre).HasColumnName("DIFFACCFCCRE");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Prvbdrvfcref).HasColumnName("PRVBDRVFCREF");

                entity.Property(e => e.Prvbdrvno).HasColumnName("PRVBDRVNO");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");
            });

            modelBuilder.Entity<Lg00101Anbdgtrevln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_ANBDGTREVLN_I1");

                entity.ToTable("LG_001_01_ANBDGTREVLN");

                entity.HasIndex(e => new { e.Bdrevfcref, e.Lineno }, "I001_01_ANBDGTREVLN_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Acccorpcode1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCCORPCODE1");

                entity.Property(e => e.Acccorpcode2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCCORPCODE2");

                entity.Property(e => e.Acccorpcode3)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCCORPCODE3");

                entity.Property(e => e.Acccorpcode4)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCCORPCODE4");

                entity.Property(e => e.Accecocode1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCECOCODE1");

                entity.Property(e => e.Accecocode2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCECOCODE2");

                entity.Property(e => e.Accecocode3)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCECOCODE3");

                entity.Property(e => e.Accecocode4)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCECOCODE4");

                entity.Property(e => e.Accfincode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCFINCODE");

                entity.Property(e => e.Accfunccode1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCFUNCCODE1");

                entity.Property(e => e.Accfunccode2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCFUNCCODE2");

                entity.Property(e => e.Accfunccode3)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCFUNCCODE3");

                entity.Property(e => e.Accfunccode4)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCFUNCCODE4");

                entity.Property(e => e.Accref).HasColumnName("ACCREF");

                entity.Property(e => e.Bdallocfcref).HasColumnName("BDALLOCFCREF");

                entity.Property(e => e.Bdgtref).HasColumnName("BDGTREF");

                entity.Property(e => e.Bdrevfcref).HasColumnName("BDREVFCREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Crsaccref).HasColumnName("CRSACCREF");

                entity.Property(e => e.Crsraccref).HasColumnName("CRSRACCREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Status).HasColumnName("STATUS");
            });

            modelBuilder.Entity<Lg00101Anbdgtrevprd>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_ANBDGTREVPRD_I1");

                entity.ToTable("LG_001_01_ANBDGTREVPRD");

                entity.HasIndex(e => new { e.Bdrevfcref, e.Bdrevlnref, e.Lineno }, "I001_01_ANBDGTREVPRD_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accref).HasColumnName("ACCREF");

                entity.Property(e => e.Bdallocfcref).HasColumnName("BDALLOCFCREF");

                entity.Property(e => e.Bdgtref).HasColumnName("BDGTREF");

                entity.Property(e => e.Bdrevfcref).HasColumnName("BDREVFCREF");

                entity.Property(e => e.Bdrevlnref).HasColumnName("BDREVLNREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Crsaccref).HasColumnName("CRSACCREF");

                entity.Property(e => e.Crsraccref).HasColumnName("CRSRACCREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Prdbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRDBEGDATE");

                entity.Property(e => e.Prdenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRDENDDATE");

                entity.Property(e => e.Prdno).HasColumnName("PRDNO");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Status).HasColumnName("STATUS");
            });

            modelBuilder.Entity<Lg00101Approval>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_APPROVAL_I1");

                entity.ToTable("LG_001_01_APPROVAL");

                entity.HasIndex(e => e.Filename, "I001_01_APPROVAL_I10");

                entity.HasIndex(e => new { e.Optype, e.Filename, e.Envelopeid }, "I001_01_APPROVAL_I11");

                entity.HasIndex(e => e.Enveloperef, "I001_01_APPROVAL_I12");

                entity.HasIndex(e => e.Docnr, "I001_01_APPROVAL_I13");

                entity.HasIndex(e => e.Transref, "I001_01_APPROVAL_I14");

                entity.HasIndex(e => e.Currentdate, "I001_01_APPROVAL_I15");

                entity.HasIndex(e => new { e.Rectype, e.Filename }, "I001_01_APPROVAL_I2");

                entity.HasIndex(e => new { e.Rectype, e.Trcode }, "I001_01_APPROVAL_I3");

                entity.HasIndex(e => e.Customdata1, "I001_01_APPROVAL_I4");

                entity.HasIndex(e => e.Customdata2, "I001_01_APPROVAL_I5");

                entity.HasIndex(e => new { e.Optype, e.Status }, "I001_01_APPROVAL_I8");

                entity.HasIndex(e => new { e.Rectype, e.Status, e.Optype }, "I001_01_APPROVAL_I9");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Apprflowaction).HasColumnName("APPRFLOWACTION");

                entity.Property(e => e.Apprflowgrp).HasColumnName("APPRFLOWGRP");

                entity.Property(e => e.Apprflowstat).HasColumnName("APPRFLOWSTAT");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.Approvergroupref).HasColumnName("APPROVERGROUPREF");

                entity.Property(e => e.Approveruser)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("APPROVERUSER");

                entity.Property(e => e.Arpref).HasColumnName("ARPREF");

                entity.Property(e => e.Attribute).HasColumnName("ATTRIBUTE");

                entity.Property(e => e.Autopackref).HasColumnName("AUTOPACKREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Clretaildef)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("CLRETAILDEF");

                entity.Property(e => e.Clretailemail)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("CLRETAILEMAIL");

                entity.Property(e => e.Clretailvkn)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLRETAILVKN");

                entity.Property(e => e.Confirmres).HasColumnName("CONFIRMRES");

                entity.Property(e => e.Currentdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CURRENTDATE");

                entity.Property(e => e.Currenttime).HasColumnName("CURRENTTIME");

                entity.Property(e => e.Customdata1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CUSTOMDATA1");

                entity.Property(e => e.Customdata2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CUSTOMDATA2");

                entity.Property(e => e.Customdata3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CUSTOMDATA3");

                entity.Property(e => e.Customdata4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CUSTOMDATA4");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Datasize).HasColumnName("DATASIZE");

                entity.Property(e => e.Datatype).HasColumnName("DATATYPE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Decrypted).HasColumnName("DECRYPTED");

                entity.Property(e => e.Despmatchingstat).HasColumnName("DESPMATCHINGSTAT");

                entity.Property(e => e.Despshipdate).HasColumnName("DESPSHIPDATE");

                entity.Property(e => e.Despshiptime).HasColumnName("DESPSHIPTIME");

                entity.Property(e => e.Dispcolor).HasColumnName("DISPCOLOR");

                entity.Property(e => e.Doccurrency)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("DOCCURRENCY");

                entity.Property(e => e.Docdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDATE");

                entity.Property(e => e.Docexplain)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DOCEXPLAIN");

                entity.Property(e => e.Docnr)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("DOCNR");

                entity.Property(e => e.Docref).HasColumnName("DOCREF");

                entity.Property(e => e.Doctaxexclusivetotal).HasColumnName("DOCTAXEXCLUSIVETOTAL");

                entity.Property(e => e.Doctaxtotal).HasColumnName("DOCTAXTOTAL");

                entity.Property(e => e.Doctotal).HasColumnName("DOCTOTAL");

                entity.Property(e => e.Doctotallocal).HasColumnName("DOCTOTALLOCAL");

                entity.Property(e => e.Earcrepref).HasColumnName("EARCREPREF");

                entity.Property(e => e.Earcsendmod).HasColumnName("EARCSENDMOD");

                entity.Property(e => e.Edespusertyp).HasColumnName("EDESPUSERTYP");

                entity.Property(e => e.Edoctype).HasColumnName("EDOCTYPE");

                entity.Property(e => e.Emailcount).HasColumnName("EMAILCOUNT");

                entity.Property(e => e.Envelopeid)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("ENVELOPEID");

                entity.Property(e => e.Enveloperef).HasColumnName("ENVELOPEREF");

                entity.Property(e => e.Envelopetype).HasColumnName("ENVELOPETYPE");

                entity.Property(e => e.Errorcode).HasColumnName("ERRORCODE");

                entity.Property(e => e.Explain)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("EXPLAIN");

                entity.Property(e => e.Filename)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("FILENAME");

                entity.Property(e => e.Gblabel)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("GBLABEL");

                entity.Property(e => e.Genexp)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP");

                entity.Property(e => e.Genexp2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP2");

                entity.Property(e => e.Gibresponse).HasColumnName("GIBRESPONSE");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Lifecycle).HasColumnName("LIFECYCLE");

                entity.Property(e => e.Linecount).HasColumnName("LINECOUNT");

                entity.Property(e => e.Optype).HasColumnName("OPTYPE");

                entity.Property(e => e.Otherworksp).HasColumnName("OTHERWORKSP");

                entity.Property(e => e.Pklabel)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PKLABEL");

                entity.Property(e => e.Plugid).HasColumnName("PLUGID");

                entity.Property(e => e.Printcount).HasColumnName("PRINTCOUNT");

                entity.Property(e => e.Profileid).HasColumnName("PROFILEID");

                entity.Property(e => e.Rcvresponse).HasColumnName("RCVRESPONSE");

                entity.Property(e => e.Readflag).HasColumnName("READFLAG");

                entity.Property(e => e.Rectype).HasColumnName("RECTYPE");

                entity.Property(e => e.Referenceid)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCEID");

                entity.Property(e => e.Reportno)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("REPORTNO");

                entity.Property(e => e.Reportstat).HasColumnName("REPORTSTAT");

                entity.Property(e => e.Reportstatdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("REPORTSTATDESC");

                entity.Property(e => e.Respcode).HasColumnName("RESPCODE");

                entity.Property(e => e.Responsecode).HasColumnName("RESPONSECODE");

                entity.Property(e => e.Responsedesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("RESPONSEDESC");

                entity.Property(e => e.Responsestatus).HasColumnName("RESPONSESTATUS");

                entity.Property(e => e.Scross).HasColumnName("SCROSS");

                entity.Property(e => e.Secondkey)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SECONDKEY");

                entity.Property(e => e.Senddate)
                    .HasColumnType("datetime")
                    .HasColumnName("SENDDATE");

                entity.Property(e => e.Sender)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SENDER");

                entity.Property(e => e.Sendertitle)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("SENDERTITLE");

                entity.Property(e => e.Serverref).HasColumnName("SERVERREF");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Subtype).HasColumnName("SUBTYPE");

                entity.Property(e => e.Time).HasColumnName("TIME");

                entity.Property(e => e.Transref).HasColumnName("TRANSREF");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Username)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("USERNAME");
            });

            modelBuilder.Entity<Lg00101Approve>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_APPROVE_I1");

                entity.ToTable("LG_001_01_APPROVE");

                entity.HasIndex(e => new { e.Branchnr, e.Modnr }, "I001_01_APPROVE_I2");

                entity.HasIndex(e => new { e.Modnr, e.Approvedate }, "I001_01_APPROVE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Branchnr).HasColumnName("BRANCHNR");

                entity.Property(e => e.Modnr).HasColumnName("MODNR");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");

                entity.Property(e => e.Usertype).HasColumnName("USERTYPE");
            });

            modelBuilder.Entity<Lg00101Approver>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_APPROVERS_I1");

                entity.ToTable("LG_001_01_APPROVERS");

                entity.HasIndex(e => new { e.Approvalref, e.Userid }, "I001_01_APPROVERS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Approvalref).HasColumnName("APPROVALREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Explain)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EXPLAIN");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Userid).HasColumnName("USERID");

                entity.Property(e => e.Username)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("USERNAME");
            });

            modelBuilder.Entity<Lg00101Bnfiche>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_BNFICHE_I1");

                entity.ToTable("LG_001_01_BNFICHE");

                entity.HasIndex(e => new { e.Trcode, e.Ficheno }, "I001_01_BNFICHE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Trcode, e.Ficheno }, "I001_01_BNFICHE_I3")
                    .IsUnique();

                entity.HasIndex(e => e.Accficheref, "I001_01_BNFICHE_I4");

                entity.HasIndex(e => e.Guid, "I001_01_BNFICHE_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Bnaccountref).HasColumnName("BNACCOUNTREF");

                entity.Property(e => e.Bncrref).HasColumnName("BNCRREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cancelledacc).HasColumnName("CANCELLEDACC");

                entity.Property(e => e.Cancelledreflacc).HasColumnName("CANCELLEDREFLACC");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Collatcardref).HasColumnName("COLLATCARDREF");

                entity.Property(e => e.Collatrollref).HasColumnName("COLLATROLLREF");

                entity.Property(e => e.Collattrnref).HasColumnName("COLLATTRNREF");

                entity.Property(e => e.Crcardfcref).HasColumnName("CRCARDFCREF");

                entity.Property(e => e.Crcardwzd).HasColumnName("CRCARDWZD");

                entity.Property(e => e.Crcardwzdper).HasColumnName("CRCARDWZDPER");

                entity.Property(e => e.Credittot).HasColumnName("CREDITTOT");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Debittot).HasColumnName("DEBITTOT");

                entity.Property(e => e.Deparment).HasColumnName("DEPARMENT");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Fromcreditclose).HasColumnName("FROMCREDITCLOSE");

                entity.Property(e => e.Fromcrstruct).HasColumnName("FROMCRSTRUCT");

                entity.Property(e => e.Fromcurdiffproc).HasColumnName("FROMCURDIFFPROC");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Genexctyp).HasColumnName("GENEXCTYP");

                entity.Property(e => e.Genexp1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP1");

                entity.Property(e => e.Genexp2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP2");

                entity.Property(e => e.Genexp3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP3");

                entity.Property(e => e.Genexp4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP4");

                entity.Property(e => e.Genexp5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP5");

                entity.Property(e => e.Genexp6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP6");

                entity.Property(e => e.Gibaccficheref).HasColumnName("GIBACCFICHEREF");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Leasingref).HasColumnName("LEASINGREF");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Offerref).HasColumnName("OFFERREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reflaccficheref).HasColumnName("REFLACCFICHEREF");

                entity.Property(e => e.Reflected).HasColumnName("REFLECTED");

                entity.Property(e => e.Repcredit).HasColumnName("REPCREDIT");

                entity.Property(e => e.Repdebit).HasColumnName("REPDEBIT");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Sign).HasColumnName("SIGN");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourcefref).HasColumnName("SOURCEFREF");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Trangrpno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRANGRPNO");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Bnfline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_BNFLINE_I1");

                entity.ToTable("LG_001_01_BNFLINE");

                entity.HasIndex(e => new { e.Sourcefref, e.Modulenr, e.Linenr }, "I001_01_BNFLINE_I10");

                entity.HasIndex(e => new { e.Trcode, e.Tranno, e.Linenr }, "I001_01_BNFLINE_I2");

                entity.HasIndex(e => new { e.Date, e.Trcode, e.Tranno }, "I001_01_BNFLINE_I3");

                entity.HasIndex(e => new { e.Bnaccref, e.Date, e.Modulenr, e.Trcode }, "I001_01_BNFLINE_I4");

                entity.HasIndex(e => new { e.Modulenr, e.Sourcefref }, "I001_01_BNFLINE_I5");

                entity.HasIndex(e => new { e.Bankref, e.Date, e.Modulenr, e.Trcode }, "I001_01_BNFLINE_I6");

                entity.HasIndex(e => e.Accficheref, "I001_01_BNFLINE_I7");

                entity.HasIndex(e => new { e.Sourcefref, e.Linenr }, "I001_01_BNFLINE_I8");

                entity.HasIndex(e => e.Bntrackingno, "I001_01_BNFLINE_I9");

                entity.HasIndex(e => new { e.Bnaccref, e.Logicalref }, "I001_01_BNFLINE_I98")
                    .IsUnique();

                entity.HasIndex(e => new { e.Transtype, e.Ccpaytrref, e.Bankproctype, e.Logicalref }, "I001_01_BNFLINE_I99")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Arcloseamount).HasColumnName("ARCLOSEAMOUNT");

                entity.Property(e => e.Bankaccounts)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS");

                entity.Property(e => e.Bankbranchs)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS");

                entity.Property(e => e.Bankproccode).HasColumnName("BANKPROCCODE");

                entity.Property(e => e.Bankproctype).HasColumnName("BANKPROCTYPE");

                entity.Property(e => e.Bankref).HasColumnName("BANKREF");

                entity.Property(e => e.Bankrefnr)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKREFNR");

                entity.Property(e => e.Bnaccountref).HasColumnName("BNACCOUNTREF");

                entity.Property(e => e.Bnaccref).HasColumnName("BNACCREF");

                entity.Property(e => e.Bnbsmvaccref).HasColumnName("BNBSMVACCREF");

                entity.Property(e => e.Bnbsmvcenref).HasColumnName("BNBSMVCENREF");

                entity.Property(e => e.Bncenterref).HasColumnName("BNCENTERREF");

                entity.Property(e => e.Bncrlntype).HasColumnName("BNCRLNTYPE");

                entity.Property(e => e.Bncrref).HasColumnName("BNCRREF");

                entity.Property(e => e.Bncrsource).HasColumnName("BNCRSOURCE");

                entity.Property(e => e.Bncrtrrate).HasColumnName("BNCRTRRATE");

                entity.Property(e => e.Bnfincostaccref).HasColumnName("BNFINCOSTACCREF");

                entity.Property(e => e.Bnfincostcenref).HasColumnName("BNFINCOSTCENREF");

                entity.Property(e => e.Bngpaddr)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("BNGPADDR");

                entity.Property(e => e.Bngpfundaccref).HasColumnName("BNGPFUNDACCREF");

                entity.Property(e => e.Bngpfundcenref).HasColumnName("BNGPFUNDCENREF");

                entity.Property(e => e.Bngpfundsharerat).HasColumnName("BNGPFUNDSHARERAT");

                entity.Property(e => e.Bngpincometaxrat).HasColumnName("BNGPINCOMETAXRAT");

                entity.Property(e => e.Bngpoptype).HasColumnName("BNGPOPTYPE");

                entity.Property(e => e.Bngpplate)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BNGPPLATE");

                entity.Property(e => e.Bngptaxaccref).HasColumnName("BNGPTAXACCREF");

                entity.Property(e => e.Bngptaxcenref).HasColumnName("BNGPTAXCENREF");

                entity.Property(e => e.Bnintaccref).HasColumnName("BNINTACCREF");

                entity.Property(e => e.Bnintcenref).HasColumnName("BNINTCENREF");

                entity.Property(e => e.Bnkkdfaccref).HasColumnName("BNKKDFACCREF");

                entity.Property(e => e.Bnkkdfcenref).HasColumnName("BNKKDFCENREF");

                entity.Property(e => e.Bntrackingno)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BNTRACKINGNO");

                entity.Property(e => e.Bntrancosttotinc).HasColumnName("BNTRANCOSTTOTINC");

                entity.Property(e => e.Bntranvataccref).HasColumnName("BNTRANVATACCREF");

                entity.Property(e => e.Bntranvatcenref).HasColumnName("BNTRANVATCENREF");

                entity.Property(e => e.Bntranvatinc).HasColumnName("BNTRANVATINC");

                entity.Property(e => e.Bntranvatrat).HasColumnName("BNTRANVATRAT");

                entity.Property(e => e.Bntranvattot).HasColumnName("BNTRANVATTOT");

                entity.Property(e => e.Bntrcostaccref).HasColumnName("BNTRCOSTACCREF");

                entity.Property(e => e.Bntrcostaccref2).HasColumnName("BNTRCOSTACCREF2");

                entity.Property(e => e.Bntrcostcenref).HasColumnName("BNTRCOSTCENREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Bsmvtot).HasColumnName("BSMVTOT");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Ccpaytrref).HasColumnName("CCPAYTRREF");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Cheqinfo)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("CHEQINFO");

                entity.Property(e => e.Clbnaccountno)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CLBNACCOUNTNO");

                entity.Property(e => e.Clbnbranchno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLBNBRANCHNO");

                entity.Property(e => e.Clficheref).HasColumnName("CLFICHEREF");

                entity.Property(e => e.Clflineref).HasColumnName("CLFLINEREF");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Cltrcurr).HasColumnName("CLTRCURR");

                entity.Property(e => e.Cltrnet).HasColumnName("CLTRNET");

                entity.Property(e => e.Cltrrate).HasColumnName("CLTRRATE");

                entity.Property(e => e.Collatcardref).HasColumnName("COLLATCARDREF");

                entity.Property(e => e.Collatrollref).HasColumnName("COLLATROLLREF");

                entity.Property(e => e.Collattrnref).HasColumnName("COLLATTRNREF");

                entity.Property(e => e.Comstype).HasColumnName("COMSTYPE");

                entity.Property(e => e.Costaccount)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("COSTACCOUNT");

                entity.Property(e => e.Costaccref).HasColumnName("COSTACCREF");

                entity.Property(e => e.Costowner).HasColumnName("COSTOWNER");

                entity.Property(e => e.Costtot).HasColumnName("COSTTOT");

                entity.Property(e => e.Crcardfcref).HasColumnName("CRCARDFCREF");

                entity.Property(e => e.Crcardwzd).HasColumnName("CRCARDWZD");

                entity.Property(e => e.Creletterref).HasColumnName("CRELETTERREF");

                entity.Property(e => e.Cstransref).HasColumnName("CSTRANSREF");

                entity.Property(e => e.Customdocnr)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CUSTOMDOCNR");

                entity.Property(e => e.Custtitle)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("CUSTTITLE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Dablnref).HasColumnName("DABLNREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Dbs).HasColumnName("DBS");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Discaccref).HasColumnName("DISCACCREF");

                entity.Property(e => e.Disccenref).HasColumnName("DISCCENREF");

                entity.Property(e => e.Discflag).HasColumnName("DISCFLAG");

                entity.Property(e => e.Discrate).HasColumnName("DISCRATE");

                entity.Property(e => e.Docdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDATE");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Emflineref).HasColumnName("EMFLINEREF");

                entity.Property(e => e.Excreref).HasColumnName("EXCREREF");

                entity.Property(e => e.Eximficheno)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("EXIMFICHENO");

                entity.Property(e => e.Eximinfopar).HasColumnName("EXIMINFOPAR");

                entity.Property(e => e.Eximinforef).HasColumnName("EXIMINFOREF");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Fundquantity).HasColumnName("FUNDQUANTITY");

                entity.Property(e => e.Grpfirmtrans).HasColumnName("GRPFIRMTRANS");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Iban)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("IBAN");

                entity.Property(e => e.Infidx).HasColumnName("INFIDX");

                entity.Property(e => e.Kkblockedref).HasColumnName("KKBLOCKEDREF");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Offerref).HasColumnName("OFFERREF");

                entity.Property(e => e.Opstat).HasColumnName("OPSTAT");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Paymentref).HasColumnName("PAYMENTREF");

                entity.Property(e => e.Paytype).HasColumnName("PAYTYPE");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Processaccref).HasColumnName("PROCESSACCREF");

                entity.Property(e => e.Processcenref).HasColumnName("PROCESSCENREF");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Provisionref).HasColumnName("PROVISIONREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reflaccficheref).HasColumnName("REFLACCFICHEREF");

                entity.Property(e => e.Reflected).HasColumnName("REFLECTED");

                entity.Property(e => e.Repbsmvtot).HasColumnName("REPBSMVTOT");

                entity.Property(e => e.Repcosttot).HasColumnName("REPCOSTTOT");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Sign).HasColumnName("SIGN");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourcefref).HasColumnName("SOURCEFREF");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Trangrpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("TRANGRPDATE");

                entity.Property(e => e.Trangrplineno).HasColumnName("TRANGRPLINENO");

                entity.Property(e => e.Trangrpno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRANGRPNO");

                entity.Property(e => e.Tranno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRANNO");

                entity.Property(e => e.Transduedate)
                    .HasColumnType("datetime")
                    .HasColumnName("TRANSDUEDATE");

                entity.Property(e => e.Transref).HasColumnName("TRANSREF");

                entity.Property(e => e.Transtype).HasColumnName("TRANSTYPE");

                entity.Property(e => e.Trbsmvtot).HasColumnName("TRBSMVTOT");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcosttot).HasColumnName("TRCOSTTOT");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trnstate).HasColumnName("TRNSTATE");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Typecode)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TYPECODE");

                entity.Property(e => e.Vatraccref).HasColumnName("VATRACCREF");

                entity.Property(e => e.Vatrate).HasColumnName("VATRATE");

                entity.Property(e => e.Vatrcenref).HasColumnName("VATRCENREF");

                entity.Property(e => e.Virmanref).HasColumnName("VIRMANREF");
            });

            modelBuilder.Entity<Lg00101Bntotfil>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_BNTOTFIL_I1");

                entity.ToTable("LG_001_01_BNTOTFIL");

                entity.HasIndex(e => new { e.Cardref, e.Tottyp, e.Month, e.Year }, "I001_01_BNTOTFIL_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Tottyp).HasColumnName("TOTTYP");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg00101Cashflowcard>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_CASHFLOWCARD_I1");

                entity.ToTable("LG_001_01_CASHFLOWCARD");

                entity.HasIndex(e => e.Repcode, "I001_01_CASHFLOWCARD_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bankctyp).HasColumnName("BANKCTYP");

                entity.Property(e => e.Bankdtyp).HasColumnName("BANKDTYP");

                entity.Property(e => e.Brnchstrcap)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("BRNCHSTRCAP");

                entity.Property(e => e.Brnchstrg1)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("BRNCHSTRG1");

                entity.Property(e => e.Brnchstrg2)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("BRNCHSTRG2");

                entity.Property(e => e.Brnchstrg3)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("BRNCHSTRG3");

                entity.Property(e => e.Brnchstrg4)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("BRNCHSTRG4");

                entity.Property(e => e.Brnchstrg5)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("BRNCHSTRG5");

                entity.Property(e => e.Cstchcks).HasColumnName("CSTCHCKS");

                entity.Property(e => e.Cstpnotes).HasColumnName("CSTPNOTES");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Fdate)
                    .HasColumnType("datetime")
                    .HasColumnName("FDATE");

                entity.Property(e => e.Incexptyp).HasColumnName("INCEXPTYP");

                entity.Property(e => e.Repcode)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("REPCODE");

                entity.Property(e => e.Repdesc)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("REPDESC");

                entity.Property(e => e.Sdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SDATE");

                entity.Property(e => e.Usrnr).HasColumnName("USRNR");
            });

            modelBuilder.Entity<Lg00101Cashflowline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_CASHFLOWLINE_I1");

                entity.ToTable("LG_001_01_CASHFLOWLINE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cfcardref).HasColumnName("CFCARDREF");

                entity.Property(e => e.Clieref).HasColumnName("CLIEREF");

                entity.Property(e => e.Incexptyp).HasColumnName("INCEXPTYP");

                entity.Property(e => e.Sdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SDATE");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");
            });

            modelBuilder.Entity<Lg00101Clbranchpayplan>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_CLBRANCHPAYPLANS_I1");

                entity.ToTable("LG_001_01_CLBRANCHPAYPLANS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Clcardref).HasColumnName("CLCARDREF");

                entity.Property(e => e.Paypref).HasColumnName("PAYPREF");

                entity.Property(e => e.Projref).HasColumnName("PROJREF");
            });

            modelBuilder.Entity<Lg00101Clcollatrlrisk>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_CLCOLLATRLRISK_I1");

                entity.ToTable("LG_001_01_CLCOLLATRLRISK");

                entity.HasIndex(e => e.Clcardref, "I001_01_CLCOLLATRLRISK_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Clcardref).HasColumnName("CLCARDREF");

                entity.Property(e => e.Csriskover).HasColumnName("CSRISKOVER");

                entity.Property(e => e.Csrisktotal).HasColumnName("CSRISKTOTAL");

                entity.Property(e => e.Despriskover).HasColumnName("DESPRISKOVER");

                entity.Property(e => e.Desprisktotal).HasColumnName("DESPRISKTOTAL");

                entity.Property(e => e.Ordriskover).HasColumnName("ORDRISKOVER");

                entity.Property(e => e.Ordrisktotal).HasColumnName("ORDRISKTOTAL");

                entity.Property(e => e.Ordrisktotalsugg).HasColumnName("ORDRISKTOTALSUGG");

                entity.Property(e => e.Pcollatrltotal).HasColumnName("PCOLLATRLTOTAL");

                entity.Property(e => e.Repcsrisktotal).HasColumnName("REPCSRISKTOTAL");

                entity.Property(e => e.Repdesprisktotal).HasColumnName("REPDESPRISKTOTAL");

                entity.Property(e => e.Repordrisktotal).HasColumnName("REPORDRISKTOTAL");

                entity.Property(e => e.Repordrisktotalsugg).HasColumnName("REPORDRISKTOTALSUGG");

                entity.Property(e => e.Reppcollatrltotal).HasColumnName("REPPCOLLATRLTOTAL");

                entity.Property(e => e.Repriskbalanced).HasColumnName("REPRISKBALANCED");

                entity.Property(e => e.Reprisklimit).HasColumnName("REPRISKLIMIT");

                entity.Property(e => e.Reprisktotal).HasColumnName("REPRISKTOTAL");

                entity.Property(e => e.Repscollatrltotal).HasColumnName("REPSCOLLATRLTOTAL");

                entity.Property(e => e.Riskbalanced).HasColumnName("RISKBALANCED");

                entity.Property(e => e.Riskfactor).HasColumnName("RISKFACTOR");

                entity.Property(e => e.Risklimit).HasColumnName("RISKLIMIT");

                entity.Property(e => e.Riskover).HasColumnName("RISKOVER");

                entity.Property(e => e.Risktotal).HasColumnName("RISKTOTAL");

                entity.Property(e => e.Risktype).HasColumnName("RISKTYPE");

                entity.Property(e => e.Scollatrltotal).HasColumnName("SCOLLATRLTOTAL");

                entity.Property(e => e.Separatecsrisktotal).HasColumnName("SEPARATECSRISKTOTAL");

                entity.Property(e => e.Usereprisk).HasColumnName("USEREPRISK");
            });

            modelBuilder.Entity<Lg00101Clfiche>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_CLFICHE_I1");

                entity.ToTable("LG_001_01_CLFICHE");

                entity.HasIndex(e => new { e.Trcode, e.Ficheno }, "I001_01_CLFICHE_I2");

                entity.HasIndex(e => new { e.Date, e.Trcode, e.Ficheno }, "I001_01_CLFICHE_I3");

                entity.HasIndex(e => e.Accficheref, "I001_01_CLFICHE_I4");

                entity.HasIndex(e => e.Bankaccref, "I001_01_CLFICHE_I5");

                entity.HasIndex(e => e.Guid, "I001_01_CLFICHE_I6");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Bankaccref).HasColumnName("BANKACCREF");

                entity.Property(e => e.Bnaccref).HasColumnName("BNACCREF");

                entity.Property(e => e.Bncenterref).HasColumnName("BNCENTERREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cancelledacc).HasColumnName("CANCELLEDACC");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cashaccref).HasColumnName("CASHACCREF");

                entity.Property(e => e.Cashcenref).HasColumnName("CASHCENREF");

                entity.Property(e => e.Clcardref).HasColumnName("CLCARDREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Cstransref).HasColumnName("CSTRANSREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Deductcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DEDUCTCODE");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Devir).HasColumnName("DEVIR");

                entity.Property(e => e.Docdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDATE");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Einvoice).HasColumnName("EINVOICE");

                entity.Property(e => e.Electdoc).HasColumnName("ELECTDOC");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Forexim).HasColumnName("FOREXIM");

                entity.Property(e => e.Genexctyp).HasColumnName("GENEXCTYP");

                entity.Property(e => e.Genexp1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP1");

                entity.Property(e => e.Genexp2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP2");

                entity.Property(e => e.Genexp3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP3");

                entity.Property(e => e.Genexp4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP4");

                entity.Property(e => e.Genexp5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP5");

                entity.Property(e => e.Genexp6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP6");

                entity.Property(e => e.Gibaccficheref).HasColumnName("GIBACCFICHEREF");

                entity.Property(e => e.Grpfirmtrans).HasColumnName("GRPFIRMTRANS");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Hour).HasColumnName("HOUR_");

                entity.Property(e => e.Invoref).HasColumnName("INVOREF");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Minute).HasColumnName("MINUTE_");

                entity.Property(e => e.Notifycrdref).HasColumnName("NOTIFYCRDREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Pointcommaccref).HasColumnName("POINTCOMMACCREF");

                entity.Property(e => e.Pointcommcenref).HasColumnName("POINTCOMMCENREF");

                entity.Property(e => e.Poscommaccref).HasColumnName("POSCOMMACCREF");

                entity.Property(e => e.Poscommcenref).HasColumnName("POSCOMMCENREF");

                entity.Property(e => e.Posterminalnr).HasColumnName("POSTERMINALNR");

                entity.Property(e => e.Posterminalnum)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("POSTERMINALNUM");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Repcredit).HasColumnName("REPCREDIT");

                entity.Property(e => e.Repdebit).HasColumnName("REPDEBIT");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Speccode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECCODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Time).HasColumnName("TIME");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Typecode)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TYPECODE");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Clfline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_CLFLINE_I1");

                entity.ToTable("LG_001_01_CLFLINE");

                entity.HasIndex(e => new { e.Trcode, e.Tranno, e.Linenr }, "I001_01_CLFLINE_I2");

                entity.HasIndex(e => new { e.Date, e.Trcode, e.Tranno }, "I001_01_CLFLINE_I3");

                entity.HasIndex(e => new { e.Clientref, e.Date, e.Modulenr, e.Trcode }, "I001_01_CLFLINE_I4");

                entity.HasIndex(e => new { e.Modulenr, e.Sourcefref }, "I001_01_CLFLINE_I5");

                entity.HasIndex(e => e.Accficheref, "I001_01_CLFLINE_I6");

                entity.HasIndex(e => new { e.Sourcefref, e.Linenr }, "I001_01_CLFLINE_I7");

                entity.HasIndex(e => new { e.Sourcefref, e.Modulenr, e.Linenr }, "I001_01_CLFLINE_I8");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectcost).HasColumnName("AFFECTCOST");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Approvenr).HasColumnName("APPROVENR");

                entity.Property(e => e.Approvenum)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("APPROVENUM");

                entity.Property(e => e.Bankaccref).HasColumnName("BANKACCREF");

                entity.Property(e => e.Batchnr).HasColumnName("BATCHNR");

                entity.Property(e => e.Batchnum)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BATCHNUM");

                entity.Property(e => e.Bnaccref).HasColumnName("BNACCREF");

                entity.Property(e => e.Bncenterref).HasColumnName("BNCENTERREF");

                entity.Property(e => e.Bnlntrcurr).HasColumnName("BNLNTRCURR");

                entity.Property(e => e.Bnlntrnet).HasColumnName("BNLNTRNET");

                entity.Property(e => e.Bnlntrrate).HasColumnName("BNLNTRRATE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Brutamount).HasColumnName("BRUTAMOUNT");

                entity.Property(e => e.Brutamountrep).HasColumnName("BRUTAMOUNTREP");

                entity.Property(e => e.Brutamounttr).HasColumnName("BRUTAMOUNTTR");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Candeduct).HasColumnName("CANDEDUCT");

                entity.Property(e => e.Cantcrededuct).HasColumnName("CANTCREDEDUCT");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cashaccountref).HasColumnName("CASHACCOUNTREF");

                entity.Property(e => e.Cashamount).HasColumnName("CASHAMOUNT");

                entity.Property(e => e.Cashcenterref).HasColumnName("CASHCENTERREF");

                entity.Property(e => e.Cheqinfo)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("CHEQINFO");

                entity.Property(e => e.Claccref).HasColumnName("CLACCREF");

                entity.Property(e => e.Clcenterref).HasColumnName("CLCENTERREF");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Clprjref).HasColumnName("CLPRJREF");

                entity.Property(e => e.Creditcno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CREDITCNO");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Deductionpart1).HasColumnName("DEDUCTIONPART1");

                entity.Property(e => e.Deductionpart2).HasColumnName("DEDUCTIONPART2");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Devir).HasColumnName("DEVIR");

                entity.Property(e => e.Devirmodulenr).HasColumnName("DEVIRMODULENR");

                entity.Property(e => e.Devirprocdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DEVIRPROCDATE");

                entity.Property(e => e.Discaccref).HasColumnName("DISCACCREF");

                entity.Property(e => e.Disccenref).HasColumnName("DISCCENREF");

                entity.Property(e => e.Discflag).HasColumnName("DISCFLAG");

                entity.Property(e => e.Discrate).HasColumnName("DISCRATE");

                entity.Property(e => e.Docdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDATE");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Eidistflnnr).HasColumnName("EIDISTFLNNR");

                entity.Property(e => e.Eisrvdsttyp).HasColumnName("EISRVDSTTYP");

                entity.Property(e => e.Emflineref).HasColumnName("EMFLINEREF");

                entity.Property(e => e.Euvatstatus).HasColumnName("EUVATSTATUS");

                entity.Property(e => e.Eximdisttyp).HasColumnName("EXIMDISTTYP");

                entity.Property(e => e.Eximfilecodeclf)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EXIMFILECODECLF");

                entity.Property(e => e.Eximfileref).HasColumnName("EXIMFILEREF");

                entity.Property(e => e.Eximprocnr).HasColumnName("EXIMPROCNR");

                entity.Property(e => e.Eximtype).HasColumnName("EXIMTYPE");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Forexim).HasColumnName("FOREXIM");

                entity.Property(e => e.Fromexchdiff).HasColumnName("FROMEXCHDIFF");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Fundsharerat).HasColumnName("FUNDSHARERAT");

                entity.Property(e => e.Grpfirmtrans).HasColumnName("GRPFIRMTRANS");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Incdeductamnt).HasColumnName("INCDEDUCTAMNT");

                entity.Property(e => e.Infidx).HasColumnName("INFIDX");

                entity.Property(e => e.Instalref).HasColumnName("INSTALREF");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Netamount).HasColumnName("NETAMOUNT");

                entity.Property(e => e.Netamountrep).HasColumnName("NETAMOUNTREP");

                entity.Property(e => e.Netamounttr).HasColumnName("NETAMOUNTTR");

                entity.Property(e => e.Offerref).HasColumnName("OFFERREF");

                entity.Property(e => e.Onlyonepayline).HasColumnName("ONLYONEPAYLINE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Paidincash).HasColumnName("PAIDINCASH");

                entity.Property(e => e.Paydefref).HasColumnName("PAYDEFREF");

                entity.Property(e => e.Paymentref).HasColumnName("PAYMENTREF");

                entity.Property(e => e.Pointcommaccref).HasColumnName("POINTCOMMACCREF");

                entity.Property(e => e.Pointcommcenref).HasColumnName("POINTCOMMCENREF");

                entity.Property(e => e.Poscommaccref).HasColumnName("POSCOMMACCREF");

                entity.Property(e => e.Poscommcenref).HasColumnName("POSCOMMCENREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reflvataccref).HasColumnName("REFLVATACCREF");

                entity.Property(e => e.Reflvatothaccref).HasColumnName("REFLVATOTHACCREF");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Retccfcref).HasColumnName("RETCCFCREF");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Servreasondef)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("SERVREASONDEF");

                entity.Property(e => e.Sign).HasColumnName("SIGN");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourcefref).HasColumnName("SOURCEFREF");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Tranno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRANNO");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trgflag).HasColumnName("TRGFLAG");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Underdeductlimit).HasColumnName("UNDERDEDUCTLIMIT");

                entity.Property(e => e.Vatamount).HasColumnName("VATAMOUNT");

                entity.Property(e => e.Vatdeductaccref).HasColumnName("VATDEDUCTACCREF");

                entity.Property(e => e.Vatdeductcenref).HasColumnName("VATDEDUCTCENREF");

                entity.Property(e => e.Vatdeductothaccref).HasColumnName("VATDEDUCTOTHACCREF");

                entity.Property(e => e.Vatdeductothcenref).HasColumnName("VATDEDUCTOTHCENREF");

                entity.Property(e => e.Vatdeductrate).HasColumnName("VATDEDUCTRATE");

                entity.Property(e => e.Vatraccref).HasColumnName("VATRACCREF");

                entity.Property(e => e.Vatrate).HasColumnName("VATRATE");

                entity.Property(e => e.Vatrcenref).HasColumnName("VATRCENREF");

                entity.Property(e => e.Virmanref).HasColumnName("VIRMANREF");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg00101Clparam>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_CLPARAMS_I1");

                entity.ToTable("LG_001_01_CLPARAMS");

                entity.HasIndex(e => new { e.Clref, e.Headerref }, "I001_01_CLPARAMS_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Clref).HasColumnName("CLREF");

                entity.Property(e => e.Headerref).HasColumnName("HEADERREF");

                entity.Property(e => e.Paramnr).HasColumnName("PARAMNR");

                entity.Property(e => e.Paramstr1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("PARAMSTR1");

                entity.Property(e => e.Paramstr2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("PARAMSTR2");

                entity.Property(e => e.Paramtype).HasColumnName("PARAMTYPE");

                entity.Property(e => e.Paramval1).HasColumnName("PARAMVAL1");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");
            });

            modelBuilder.Entity<Lg00101Clparamheader>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_CLPARAMHEADER_I1");

                entity.ToTable("LG_001_01_CLPARAMHEADER");

                entity.HasIndex(e => new { e.Cllogoid, e.Grouped }, "I001_01_CLPARAMHEADER_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Isdefault, "I001_01_CLPARAMHEADER_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bcbackcolor).HasColumnName("BCBACKCOLOR");

                entity.Property(e => e.Bcbarcodetype).HasColumnName("BCBARCODETYPE");

                entity.Property(e => e.Bcbarcolor).HasColumnName("BCBARCOLOR");

                entity.Property(e => e.Bcbarwidth).HasColumnName("BCBARWIDTH");

                entity.Property(e => e.Bccode128subset).HasColumnName("BCCODE128SUBSET");

                entity.Property(e => e.Bcfontcolor).HasColumnName("BCFONTCOLOR");

                entity.Property(e => e.Bcinitialized).HasColumnName("BCINITIALIZED");

                entity.Property(e => e.Bcrotation).HasColumnName("BCROTATION");

                entity.Property(e => e.Bcshowcode).HasColumnName("BCSHOWCODE");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Cllogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CLLOGOID");

                entity.Property(e => e.Grouped).HasColumnName("GROUPED");

                entity.Property(e => e.Grouptype).HasColumnName("GROUPTYPE");

                entity.Property(e => e.Inactive).HasColumnName("INACTIVE");

                entity.Property(e => e.Isdefault).HasColumnName("ISDEFAULT");
            });

            modelBuilder.Entity<Lg00101Clrnum>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_CLRNUMS_I1");

                entity.ToTable("LG_001_01_CLRNUMS");

                entity.HasIndex(e => e.Clcardref, "I001_01_CLRNUMS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accrisklimit).HasColumnName("ACCRISKLIMIT");

                entity.Property(e => e.Accriskover).HasColumnName("ACCRISKOVER");

                entity.Property(e => e.Accrisktotal).HasColumnName("ACCRISKTOTAL");

                entity.Property(e => e.Accrskblnced).HasColumnName("ACCRSKBLNCED");

                entity.Property(e => e.Cek0Credit).HasColumnName("CEK0_CREDIT");

                entity.Property(e => e.Cek0Debit).HasColumnName("CEK0_DEBIT");

                entity.Property(e => e.Cek1Credit).HasColumnName("CEK1_CREDIT");

                entity.Property(e => e.Cek1Debit).HasColumnName("CEK1_DEBIT");

                entity.Property(e => e.Cekcurr0Credit).HasColumnName("CEKCURR0_CREDIT");

                entity.Property(e => e.Cekcurr0Debit).HasColumnName("CEKCURR0_DEBIT");

                entity.Property(e => e.Cekcurr1Credit).HasColumnName("CEKCURR1_CREDIT");

                entity.Property(e => e.Cekcurr1Debit).HasColumnName("CEKCURR1_DEBIT");

                entity.Property(e => e.Cekriskfactor).HasColumnName("CEKRISKFACTOR");

                entity.Property(e => e.Clcardref).HasColumnName("CLCARDREF");

                entity.Property(e => e.Cscirodownsrisk).HasColumnName("CSCIRODOWNSRISK");

                entity.Property(e => e.Csdownsrisk).HasColumnName("CSDOWNSRISK");

                entity.Property(e => e.Cstcekriskfactor).HasColumnName("CSTCEKRISKFACTOR");

                entity.Property(e => e.Cstcirocekriskfac).HasColumnName("CSTCIROCEKRISKFAC");

                entity.Property(e => e.Cstcirosenetriskfac).HasColumnName("CSTCIROSENETRISKFAC");

                entity.Property(e => e.Cstcscirorisklimit).HasColumnName("CSTCSCIRORISKLIMIT");

                entity.Property(e => e.Cstcsciroriskover).HasColumnName("CSTCSCIRORISKOVER");

                entity.Property(e => e.Cstcscirorisktotal).HasColumnName("CSTCSCIRORISKTOTAL");

                entity.Property(e => e.Cstcscirorskblnced).HasColumnName("CSTCSCIRORSKBLNCED");

                entity.Property(e => e.Cstcsownrisktotal).HasColumnName("CSTCSOWNRISKTOTAL");

                entity.Property(e => e.Cstcsrisklimit).HasColumnName("CSTCSRISKLIMIT");

                entity.Property(e => e.Cstcsriskover).HasColumnName("CSTCSRISKOVER");

                entity.Property(e => e.Cstcsrisktotal).HasColumnName("CSTCSRISKTOTAL");

                entity.Property(e => e.Cstcsrskblnced).HasColumnName("CSTCSRSKBLNCED");

                entity.Property(e => e.Cstsenetriskfactor).HasColumnName("CSTSENETRISKFACTOR");

                entity.Property(e => e.Desprisklimit).HasColumnName("DESPRISKLIMIT");

                entity.Property(e => e.Desprisklimitsug).HasColumnName("DESPRISKLIMITSUG");

                entity.Property(e => e.Despriskover).HasColumnName("DESPRISKOVER");

                entity.Property(e => e.Despriskoversug).HasColumnName("DESPRISKOVERSUG");

                entity.Property(e => e.Desprisktotal).HasColumnName("DESPRISKTOTAL");

                entity.Property(e => e.Desprisktotalsug).HasColumnName("DESPRISKTOTALSUG");

                entity.Property(e => e.Desprskblnced).HasColumnName("DESPRSKBLNCED");

                entity.Property(e => e.Desprskblncedsug).HasColumnName("DESPRSKBLNCEDSUG");

                entity.Property(e => e.Kc).HasColumnName("KC");

                entity.Property(e => e.Mycsrisklimit).HasColumnName("MYCSRISKLIMIT");

                entity.Property(e => e.Mycsriskover).HasColumnName("MYCSRISKOVER");

                entity.Property(e => e.Mycsrisktotal).HasColumnName("MYCSRISKTOTAL");

                entity.Property(e => e.Mycsrskblnced).HasColumnName("MYCSRSKBLNCED");

                entity.Property(e => e.Ordrisklimit).HasColumnName("ORDRISKLIMIT");

                entity.Property(e => e.Ordrisklimitsugg).HasColumnName("ORDRISKLIMITSUGG");

                entity.Property(e => e.Ordriskover).HasColumnName("ORDRISKOVER");

                entity.Property(e => e.Ordriskoversugg).HasColumnName("ORDRISKOVERSUGG");

                entity.Property(e => e.Ordrisktotal).HasColumnName("ORDRISKTOTAL");

                entity.Property(e => e.Ordrisktotalsugg).HasColumnName("ORDRISKTOTALSUGG");

                entity.Property(e => e.Ordrskblnced).HasColumnName("ORDRSKBLNCED");

                entity.Property(e => e.Ordrskblncedsug).HasColumnName("ORDRSKBLNCEDSUG");

                entity.Property(e => e.Ps).HasColumnName("PS");

                entity.Property(e => e.Repaccrisklimit).HasColumnName("REPACCRISKLIMIT");

                entity.Property(e => e.Repaccrisktotal).HasColumnName("REPACCRISKTOTAL");

                entity.Property(e => e.Repaccrskblnced).HasColumnName("REPACCRSKBLNCED");

                entity.Property(e => e.Repcstcscirorisklim).HasColumnName("REPCSTCSCIRORISKLIM");

                entity.Property(e => e.Repcstcscirorisktot).HasColumnName("REPCSTCSCIRORISKTOT");

                entity.Property(e => e.Repcstcscirorskbln).HasColumnName("REPCSTCSCIRORSKBLN");

                entity.Property(e => e.Repcstcsownrisktot).HasColumnName("REPCSTCSOWNRISKTOT");

                entity.Property(e => e.Repcstcsrisklimit).HasColumnName("REPCSTCSRISKLIMIT");

                entity.Property(e => e.Repcstcsrisktotal).HasColumnName("REPCSTCSRISKTOTAL");

                entity.Property(e => e.Repcstcsrskblnced).HasColumnName("REPCSTCSRSKBLNCED");

                entity.Property(e => e.Repdesprisklimit).HasColumnName("REPDESPRISKLIMIT");

                entity.Property(e => e.Repdesprisklimitsug).HasColumnName("REPDESPRISKLIMITSUG");

                entity.Property(e => e.Repdesprisktotal).HasColumnName("REPDESPRISKTOTAL");

                entity.Property(e => e.Repdesprisktotalsug).HasColumnName("REPDESPRISKTOTALSUG");

                entity.Property(e => e.Repdesprskblnced).HasColumnName("REPDESPRSKBLNCED");

                entity.Property(e => e.Repdesprskblncedsug).HasColumnName("REPDESPRSKBLNCEDSUG");

                entity.Property(e => e.Repkc).HasColumnName("REPKC");

                entity.Property(e => e.Repmycsrisklimit).HasColumnName("REPMYCSRISKLIMIT");

                entity.Property(e => e.Repmycsrisktotal).HasColumnName("REPMYCSRISKTOTAL");

                entity.Property(e => e.Repmycsrskblnced).HasColumnName("REPMYCSRSKBLNCED");

                entity.Property(e => e.Repordrisklimit).HasColumnName("REPORDRISKLIMIT");

                entity.Property(e => e.Repordrisklimitsugg).HasColumnName("REPORDRISKLIMITSUGG");

                entity.Property(e => e.Repordrisktotal).HasColumnName("REPORDRISKTOTAL");

                entity.Property(e => e.Repordrisktotalsugg).HasColumnName("REPORDRISKTOTALSUGG");

                entity.Property(e => e.Repordrskblnced).HasColumnName("REPORDRSKBLNCED");

                entity.Property(e => e.Repordrskblncedsug).HasColumnName("REPORDRSKBLNCEDSUG");

                entity.Property(e => e.Repps).HasColumnName("REPPS");

                entity.Property(e => e.Repriskbalanced).HasColumnName("REPRISKBALANCED");

                entity.Property(e => e.Reprisklimit).HasColumnName("REPRISKLIMIT");

                entity.Property(e => e.Reprisktotal).HasColumnName("REPRISKTOTAL");

                entity.Property(e => e.Riskbalanced).HasColumnName("RISKBALANCED");

                entity.Property(e => e.Riskctrltype).HasColumnName("RISKCTRLTYPE");

                entity.Property(e => e.Riskgrpcontrol).HasColumnName("RISKGRPCONTROL");

                entity.Property(e => e.Risklimit).HasColumnName("RISKLIMIT");

                entity.Property(e => e.Riskover).HasColumnName("RISKOVER");

                entity.Property(e => e.Risktotal).HasColumnName("RISKTOTAL");

                entity.Property(e => e.Risktype).HasColumnName("RISKTYPE");

                entity.Property(e => e.Risktypes1).HasColumnName("RISKTYPES1");

                entity.Property(e => e.Risktypes10).HasColumnName("RISKTYPES10");

                entity.Property(e => e.Risktypes11).HasColumnName("RISKTYPES11");

                entity.Property(e => e.Risktypes12).HasColumnName("RISKTYPES12");

                entity.Property(e => e.Risktypes13).HasColumnName("RISKTYPES13");

                entity.Property(e => e.Risktypes14).HasColumnName("RISKTYPES14");

                entity.Property(e => e.Risktypes15).HasColumnName("RISKTYPES15");

                entity.Property(e => e.Risktypes2).HasColumnName("RISKTYPES2");

                entity.Property(e => e.Risktypes3).HasColumnName("RISKTYPES3");

                entity.Property(e => e.Risktypes4).HasColumnName("RISKTYPES4");

                entity.Property(e => e.Risktypes5).HasColumnName("RISKTYPES5");

                entity.Property(e => e.Risktypes6).HasColumnName("RISKTYPES6");

                entity.Property(e => e.Risktypes7).HasColumnName("RISKTYPES7");

                entity.Property(e => e.Risktypes8).HasColumnName("RISKTYPES8");

                entity.Property(e => e.Risktypes9).HasColumnName("RISKTYPES9");

                entity.Property(e => e.Senet0Credit).HasColumnName("SENET0_CREDIT");

                entity.Property(e => e.Senet0Debit).HasColumnName("SENET0_DEBIT");

                entity.Property(e => e.Senet1Credit).HasColumnName("SENET1_CREDIT");

                entity.Property(e => e.Senet1Debit).HasColumnName("SENET1_DEBIT");

                entity.Property(e => e.Senetcurr0Credit).HasColumnName("SENETCURR0_CREDIT");

                entity.Property(e => e.Senetcurr0Debit).HasColumnName("SENETCURR0_DEBIT");

                entity.Property(e => e.Senetcurr1Credit).HasColumnName("SENETCURR1_CREDIT");

                entity.Property(e => e.Senetcurr1Debit).HasColumnName("SENETCURR1_DEBIT");

                entity.Property(e => e.Senetriskfactor).HasColumnName("SENETRISKFACTOR");

                entity.Property(e => e.Usereprisk).HasColumnName("USEREPRISK");
            });

            modelBuilder.Entity<Lg00101Cltotfil>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_CLTOTFIL_I1");

                entity.ToTable("LG_001_01_CLTOTFIL");

                entity.HasIndex(e => new { e.Cardref, e.Tottyp, e.Month, e.Year, e.Branch, e.Department }, "I001_01_CLTOTFIL_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Tottyp).HasColumnName("TOTTYP");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg00101Collatrlcard>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_COLLATRLCARD_I1");

                entity.ToTable("LG_001_01_COLLATRLCARD");

                entity.HasIndex(e => new { e.Doc, e.Portfoyno }, "I001_01_COLLATRLCARD_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Doc, e.Enddate }, "I001_01_COLLATRLCARD_I3");

                entity.HasIndex(e => new { e.Doc, e.Serino }, "I001_01_COLLATRLCARD_I4");

                entity.HasIndex(e => e.Begdate, "I001_01_COLLATRLCARD_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Bankproctype).HasColumnName("BANKPROCTYPE");

                entity.Property(e => e.Bankref).HasColumnName("BANKREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Bsmv).HasColumnName("BSMV");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.City)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Clbankaccno)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CLBANKACCNO");

                entity.Property(e => e.Clbankbranch)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CLBANKBRANCH");

                entity.Property(e => e.Clbankname)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CLBANKNAME");

                entity.Property(e => e.Clcardref).HasColumnName("CLCARDREF");

                entity.Property(e => e.Collatrltype).HasColumnName("COLLATRLTYPE");

                entity.Property(e => e.Collusetype).HasColumnName("COLLUSETYPE");

                entity.Property(e => e.Commamount).HasColumnName("COMMAMOUNT");

                entity.Property(e => e.Commrate).HasColumnName("COMMRATE");

                entity.Property(e => e.Commtype).HasColumnName("COMMTYPE");

                entity.Property(e => e.Compaybankref).HasColumnName("COMPAYBANKREF");

                entity.Property(e => e.Compayowner).HasColumnName("COMPAYOWNER");

                entity.Property(e => e.Currstat).HasColumnName("CURRSTAT");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Devir).HasColumnName("DEVIR");

                entity.Property(e => e.Doc).HasColumnName("DOC");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Excstamptax).HasColumnName("EXCSTAMPTAX");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Kefil)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("KEFIL");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Mortgadano)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("MORTGADANO");

                entity.Property(e => e.Mortgaddr1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("MORTGADDR1");

                entity.Property(e => e.Mortgaddr2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("MORTGADDR2");

                entity.Property(e => e.Mortgarea)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("MORTGAREA");

                entity.Property(e => e.Mortgblockno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("MORTGBLOCKNO");

                entity.Property(e => e.Mortgbuildamnt)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("MORTGBUILDAMNT");

                entity.Property(e => e.Mortgciltno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("MORTGCILTNO");

                entity.Property(e => e.Mortgdate)
                    .HasColumnType("datetime")
                    .HasColumnName("MORTGDATE");

                entity.Property(e => e.Mortgindpartno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("MORTGINDPARTNO");

                entity.Property(e => e.Mortglayerno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("MORTGLAYERNO");

                entity.Property(e => e.Mortglineno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("MORTGLINENO");

                entity.Property(e => e.Mortgpaftano)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("MORTGPAFTANO");

                entity.Property(e => e.Mortgpageno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("MORTGPAGENO");

                entity.Property(e => e.Mortgparselno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("MORTGPARSELNO");

                entity.Property(e => e.Mortgrank)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("MORTGRANK");

                entity.Property(e => e.Mortgtype)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("MORTGTYPE");

                entity.Property(e => e.Mortgyevmino)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("MORTGYEVMINO");

                entity.Property(e => e.Muhabir)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("MUHABIR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Owing)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("OWING");

                entity.Property(e => e.Periodic).HasColumnName("PERIODIC");

                entity.Property(e => e.Portfoyno)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("PORTFOYNO");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Repayplanref).HasColumnName("REPAYPLANREF");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Riskfactor).HasColumnName("RISKFACTOR");

                entity.Property(e => e.Serino)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("SERINO");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Stampamount).HasColumnName("STAMPAMOUNT");

                entity.Property(e => e.Stamptax).HasColumnName("STAMPTAX");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");
            });

            modelBuilder.Entity<Lg00101Collatrlroll>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_COLLATRLROLL_I1");

                entity.ToTable("LG_001_01_COLLATRLROLL");

                entity.HasIndex(e => new { e.Trcode, e.Rollno }, "I001_01_COLLATRLROLL_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Trcode, e.Rollno }, "I001_01_COLLATRLROLL_I3")
                    .IsUnique();

                entity.HasIndex(e => e.Accficheref, "I001_01_COLLATRLROLL_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Accref).HasColumnName("ACCREF");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cancelledacc).HasColumnName("CANCELLEDACC");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Clcardref).HasColumnName("CLCARDREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Doccnt).HasColumnName("DOCCNT");

                entity.Property(e => e.Genexctyp).HasColumnName("GENEXCTYP");

                entity.Property(e => e.Genexp1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP1");

                entity.Property(e => e.Genexp2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP2");

                entity.Property(e => e.Genexp3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP3");

                entity.Property(e => e.Genexp4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP4");

                entity.Property(e => e.Genexp5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP5");

                entity.Property(e => e.Genexp6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP6");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Proctype).HasColumnName("PROCTYPE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Rollno)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ROLLNO");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Collatrltran>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_COLLATRLTRAN_I1");

                entity.ToTable("LG_001_01_COLLATRLTRAN");

                entity.HasIndex(e => new { e.Collcardref, e.Statno }, "I001_01_COLLATRLTRAN_I2");

                entity.HasIndex(e => new { e.Collrollref, e.Lineno }, "I001_01_COLLATRLTRAN_I3");

                entity.HasIndex(e => e.Date, "I001_01_COLLATRLTRAN_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Accref).HasColumnName("ACCREF");

                entity.Property(e => e.Bankref).HasColumnName("BANKREF");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Clcardref).HasColumnName("CLCARDREF");

                entity.Property(e => e.Collcardref).HasColumnName("COLLCARDREF");

                entity.Property(e => e.Collrollref).HasColumnName("COLLROLLREF");

                entity.Property(e => e.Costref).HasColumnName("COSTREF");

                entity.Property(e => e.Crsaccref).HasColumnName("CRSACCREF");

                entity.Property(e => e.Crscostref).HasColumnName("CRSCOSTREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Proctype).HasColumnName("PROCTYPE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Statno).HasColumnName("STATNO");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");
            });

            modelBuilder.Entity<Lg00101Collcommpaytr>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_COLLCOMMPAYTR_I1");

                entity.ToTable("LG_001_01_COLLCOMMPAYTR");

                entity.HasIndex(e => e.Collatcardref, "I001_01_COLLCOMMPAYTR_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bnaccref).HasColumnName("BNACCREF");

                entity.Property(e => e.Bnfchref).HasColumnName("BNFCHREF");

                entity.Property(e => e.Bsmvtotal).HasColumnName("BSMVTOTAL");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Collatcardref).HasColumnName("COLLATCARDREF");

                entity.Property(e => e.Collatrollref).HasColumnName("COLLATROLLREF");

                entity.Property(e => e.Collattrnref).HasColumnName("COLLATTRNREF");

                entity.Property(e => e.Commissiontotal).HasColumnName("COMMISSIONTOTAL");

                entity.Property(e => e.Devir).HasColumnName("DEVIR");

                entity.Property(e => e.Duedate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUEDATE");

                entity.Property(e => e.Earlyintrate).HasColumnName("EARLYINTRATE");

                entity.Property(e => e.Earlyinttot).HasColumnName("EARLYINTTOT");

                entity.Property(e => e.Lateintrate).HasColumnName("LATEINTRATE");

                entity.Property(e => e.Lateinttot).HasColumnName("LATEINTTOT");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Modified).HasColumnName("MODIFIED");

                entity.Property(e => e.Oprdate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPRDATE");

                entity.Property(e => e.Orglogicalref).HasColumnName("ORGLOGICALREF");

                entity.Property(e => e.Parentref).HasColumnName("PARENTREF");

                entity.Property(e => e.Pernr).HasColumnName("PERNR");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Stamptaxtotal).HasColumnName("STAMPTAXTOTAL");

                entity.Property(e => e.Transtype).HasColumnName("TRANSTYPE");

                entity.Property(e => e.Trrateacc).HasColumnName("TRRATEACC");

                entity.Property(e => e.Trratecr).HasColumnName("TRRATECR");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Costdistfc>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_COSTDISTFC_I1");

                entity.ToTable("LG_001_01_COSTDISTFC");

                entity.HasIndex(e => new { e.Ficheno, e.Trcode }, "I001_01_COSTDISTFC_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Ftime, e.Ficheno, e.Trcode }, "I001_01_COSTDISTFC_I3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Accounted, e.Accficheref }, "I001_01_COSTDISTFC_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Accountedcnt).HasColumnName("ACCOUNTEDCNT");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Parentfcref).HasColumnName("PARENTFCREF");

                entity.Property(e => e.Parentfctype).HasColumnName("PARENTFCTYPE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Costdistln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_COSTDISTLN_I1");

                entity.ToTable("LG_001_01_COSTDISTLN");

                entity.HasIndex(e => e.Srvref, "I001_01_COSTDISTLN_I2");

                entity.HasIndex(e => new { e.Srvref, e.Date, e.Ftime }, "I001_01_COSTDISTLN_I3");

                entity.HasIndex(e => new { e.Costdistfcref, e.Linenr }, "I001_01_COSTDISTLN_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Costdistfcref).HasColumnName("COSTDISTFCREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Disttotal).HasColumnName("DISTTOTAL");

                entity.Property(e => e.Disttotalufrs).HasColumnName("DISTTOTALUFRS");

                entity.Property(e => e.Fichetype).HasColumnName("FICHETYPE");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Srvaccref).HasColumnName("SRVACCREF");

                entity.Property(e => e.Srvcenterref).HasColumnName("SRVCENTERREF");

                entity.Property(e => e.Srvdisttype).HasColumnName("SRVDISTTYPE");

                entity.Property(e => e.Srvficheref).HasColumnName("SRVFICHEREF");

                entity.Property(e => e.Srvref).HasColumnName("SRVREF");

                entity.Property(e => e.Srvtransref).HasColumnName("SRVTRANSREF");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Costdistpeg>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_COSTDISTPEG_I1");

                entity.ToTable("LG_001_01_COSTDISTPEG");

                entity.HasIndex(e => new { e.Costdistfcref, e.Costdistlnref }, "I001_01_COSTDISTPEG_I2");

                entity.HasIndex(e => new { e.Costdistlnref, e.Linenr }, "I001_01_COSTDISTPEG_I3");

                entity.HasIndex(e => e.Costdistfcref, "I001_01_COSTDISTPEG_I4");

                entity.HasIndex(e => e.Sttransref, "I001_01_COSTDISTPEG_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addexpense).HasColumnName("ADDEXPENSE");

                entity.Property(e => e.Addexpenseufrs).HasColumnName("ADDEXPENSEUFRS");

                entity.Property(e => e.Addrpexpense).HasColumnName("ADDRPEXPENSE");

                entity.Property(e => e.Addrpexpenseufrs).HasColumnName("ADDRPEXPENSEUFRS");

                entity.Property(e => e.Costdistfcref).HasColumnName("COSTDISTFCREF");

                entity.Property(e => e.Costdistlnref).HasColumnName("COSTDISTLNREF");

                entity.Property(e => e.Distrate).HasColumnName("DISTRATE");

                entity.Property(e => e.Disttotal).HasColumnName("DISTTOTAL");

                entity.Property(e => e.Disttotalufrs).HasColumnName("DISTTOTALUFRS");

                entity.Property(e => e.Eximwhfcref).HasColumnName("EXIMWHFCREF");

                entity.Property(e => e.Eximwhlnref).HasColumnName("EXIMWHLNREF");

                entity.Property(e => e.Invoiceref).HasColumnName("INVOICEREF");

                entity.Property(e => e.Isdistributed).HasColumnName("ISDISTRIBUTED");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Parentsttrref).HasColumnName("PARENTSTTRREF");

                entity.Property(e => e.Prdcosttrref).HasColumnName("PRDCOSTTRREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Recvsttransref).HasColumnName("RECVSTTRANSREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Srvficheref).HasColumnName("SRVFICHEREF");

                entity.Property(e => e.Srvtransref).HasColumnName("SRVTRANSREF");

                entity.Property(e => e.Staccref).HasColumnName("STACCREF");

                entity.Property(e => e.Stcenterref).HasColumnName("STCENTERREF");

                entity.Property(e => e.Stficheref).HasColumnName("STFICHEREF");

                entity.Property(e => e.Sttransref).HasColumnName("STTRANSREF");

                entity.Property(e => e.Totalamnt).HasColumnName("TOTALAMNT");

                entity.Property(e => e.Trantype).HasColumnName("TRANTYPE");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Unitprice).HasColumnName("UNITPRICE");

                entity.Property(e => e.Unitrpprice).HasColumnName("UNITRPPRICE");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Cscard>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_CSCARD_I1");

                entity.ToTable("LG_001_01_CSCARD");

                entity.HasIndex(e => new { e.Doc, e.Portfoyno }, "I001_01_CSCARD_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Doc, e.Duedate }, "I001_01_CSCARD_I3");

                entity.HasIndex(e => new { e.Doc, e.Serino }, "I001_01_CSCARD_I4");

                entity.HasIndex(e => new { e.Duedate, e.Portfoyno }, "I001_01_CSCARD_I5");

                entity.HasIndex(e => new { e.Doc, e.Newserino }, "I001_01_CSCARD_I6");

                entity.HasIndex(e => e.Guid, "I001_01_CSCARD_I7");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Bankname)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAME");

                entity.Property(e => e.Bnaccountno)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BNACCOUNTNO");

                entity.Property(e => e.Bnbranchno)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BNBRANCHNO");

                entity.Property(e => e.Bncreref).HasColumnName("BNCREREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Ciro).HasColumnName("CIRO");

                entity.Property(e => e.City)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Collatcardref).HasColumnName("COLLATCARDREF");

                entity.Property(e => e.Collatrollref).HasColumnName("COLLATROLLREF");

                entity.Property(e => e.Collreprate).HasColumnName("COLLREPRATE");

                entity.Property(e => e.Colltrrate).HasColumnName("COLLTRRATE");

                entity.Property(e => e.Currstat).HasColumnName("CURRSTAT");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Degactive).HasColumnName("DEGACTIVE");

                entity.Property(e => e.Degcurr).HasColumnName("DEGCURR");

                entity.Property(e => e.Degcurrrate).HasColumnName("DEGCURRRATE");

                entity.Property(e => e.Deptaddr1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEPTADDR1");

                entity.Property(e => e.Deptaddr2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEPTADDR2");

                entity.Property(e => e.Deptcity)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("DEPTCITY");

                entity.Property(e => e.Deptcitycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DEPTCITYCODE");

                entity.Property(e => e.Deptcountry)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("DEPTCOUNTRY");

                entity.Property(e => e.Deptcountrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DEPTCOUNTRYCODE");

                entity.Property(e => e.Deptdistrict)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEPTDISTRICT");

                entity.Property(e => e.Deptdistrictcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DEPTDISTRICTCODE");

                entity.Property(e => e.Deptfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DEPTFAXNR");

                entity.Property(e => e.Deptpostcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DEPTPOSTCODE");

                entity.Property(e => e.Depttelnrs1)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DEPTTELNRS1");

                entity.Property(e => e.Depttelnrs2)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DEPTTELNRS2");

                entity.Property(e => e.Depttown)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEPTTOWN");

                entity.Property(e => e.Depttowncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DEPTTOWNCODE");

                entity.Property(e => e.Devir).HasColumnName("DEVIR");

                entity.Property(e => e.Doc).HasColumnName("DOC");

                entity.Property(e => e.Duedate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUEDATE");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Faxcode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("FAXCODE");

                entity.Property(e => e.Giroamount).HasColumnName("GIROAMOUNT");

                entity.Property(e => e.Girorepnet).HasColumnName("GIROREPNET");

                entity.Property(e => e.Giroreprate).HasColumnName("GIROREPRATE");

                entity.Property(e => e.Girotrrate).HasColumnName("GIROTRRATE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Iban)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("IBAN");

                entity.Property(e => e.Inuse).HasColumnName("INUSE");

                entity.Property(e => e.Kefil)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("KEFIL");

                entity.Property(e => e.Kefil2)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("KEFIL2");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Muhabir)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("MUHABIR");

                entity.Property(e => e.Newserino)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("NEWSERINO");

                entity.Property(e => e.Offerref).HasColumnName("OFFERREF");

                entity.Property(e => e.Opstat).HasColumnName("OPSTAT");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Ourbankref).HasColumnName("OURBANKREF");

                entity.Property(e => e.Owing)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("OWING");

                entity.Property(e => e.Portfoyno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("PORTFOYNO");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Raisedvalamount).HasColumnName("RAISEDVALAMOUNT");

                entity.Property(e => e.Raisedvalrepnet).HasColumnName("RAISEDVALREPNET");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Riskupdate).HasColumnName("RISKUPDATE");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Serino)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SERINO");

                entity.Property(e => e.Setdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SETDATE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Stamp).HasColumnName("STAMP");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Subduration).HasColumnName("SUBDURATION");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Telcodes1)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELCODES1");

                entity.Property(e => e.Telcodes2)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELCODES2");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Usegirorate).HasColumnName("USEGIRORATE");

                entity.Property(e => e.Useraisedval).HasColumnName("USERAISEDVAL");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Cshtot>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_CSHTOTS_I1");

                entity.ToTable("LG_001_01_CSHTOTS");

                entity.HasIndex(e => new { e.Cardref, e.Tottype, e.Day, e.Date, e.Currtyp }, "I001_01_CSHTOTS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Currtyp).HasColumnName("CURRTYP");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Day).HasColumnName("DAY_");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Tottype).HasColumnName("TOTTYPE");
            });

            modelBuilder.Entity<Lg00101Csroll>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_CSROLL_I1");

                entity.ToTable("LG_001_01_CSROLL");

                entity.HasIndex(e => new { e.Trcode, e.Rollno }, "I001_01_CSROLL_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Trcode, e.Rollno }, "I001_01_CSROLL_I3")
                    .IsUnique();

                entity.HasIndex(e => e.Accficheref, "I001_01_CSROLL_I4");

                entity.HasIndex(e => e.Guid, "I001_01_CSROLL_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Accref).HasColumnName("ACCREF");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Averageage).HasColumnName("AVERAGEAGE");

                entity.Property(e => e.Bncreref).HasColumnName("BNCREREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cancelledacc).HasColumnName("CANCELLEDACC");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardmd).HasColumnName("CARDMD");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Cashtransref).HasColumnName("CASHTRANSREF");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Collatrollref).HasColumnName("COLLATROLLREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Degactive).HasColumnName("DEGACTIVE");

                entity.Property(e => e.Degactive2).HasColumnName("DEGACTIVE2");

                entity.Property(e => e.Degcurr).HasColumnName("DEGCURR");

                entity.Property(e => e.Degcurr2).HasColumnName("DEGCURR2");

                entity.Property(e => e.Degcurrrate).HasColumnName("DEGCURRRATE");

                entity.Property(e => e.Degcurrrate2).HasColumnName("DEGCURRRATE2");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Destbranch).HasColumnName("DESTBRANCH");

                entity.Property(e => e.Destdepartment).HasColumnName("DESTDEPARTMENT");

                entity.Property(e => e.Doccnt).HasColumnName("DOCCNT");

                entity.Property(e => e.Docdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDATE");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Frombank).HasColumnName("FROMBANK");

                entity.Property(e => e.Fromcash).HasColumnName("FROMCASH");

                entity.Property(e => e.Genexctyp).HasColumnName("GENEXCTYP");

                entity.Property(e => e.Genexp1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP1");

                entity.Property(e => e.Genexp2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP2");

                entity.Property(e => e.Genexp3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP3");

                entity.Property(e => e.Genexp4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP4");

                entity.Property(e => e.Genexp5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP5");

                entity.Property(e => e.Genexp6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP6");

                entity.Property(e => e.Grpfirmtrans).HasColumnName("GRPFIRMTRANS");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Infidx).HasColumnName("INFIDX");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Onepayline).HasColumnName("ONEPAYLINE");

                entity.Property(e => e.Opstat).HasColumnName("OPSTAT");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Proctype).HasColumnName("PROCTYPE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Rollno)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ROLLNO");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Cstran>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_CSTRANS_I1");

                entity.ToTable("LG_001_01_CSTRANS");

                entity.HasIndex(e => new { e.Csref, e.Statno }, "I001_01_CSTRANS_I2");

                entity.HasIndex(e => new { e.Rollref, e.Lineno }, "I001_01_CSTRANS_I3");

                entity.HasIndex(e => e.Date, "I001_01_CSTRANS_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Accref).HasColumnName("ACCREF");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Bncreref).HasColumnName("BNCREREF");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cardmd).HasColumnName("CARDMD");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Claccref).HasColumnName("CLACCREF");

                entity.Property(e => e.Clcostref).HasColumnName("CLCOSTREF");

                entity.Property(e => e.Costref).HasColumnName("COSTREF");

                entity.Property(e => e.Crsaccref).HasColumnName("CRSACCREF");

                entity.Property(e => e.Crscostref).HasColumnName("CRSCOSTREF");

                entity.Property(e => e.Csref).HasColumnName("CSREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Devir).HasColumnName("DEVIR");

                entity.Property(e => e.Frombank).HasColumnName("FROMBANK");

                entity.Property(e => e.Fromcash).HasColumnName("FROMCASH");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Opstat).HasColumnName("OPSTAT");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Provlnaccref).HasColumnName("PROVLNACCREF");

                entity.Property(e => e.Provlncostref).HasColumnName("PROVLNCOSTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Rollref).HasColumnName("ROLLREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Statno).HasColumnName("STATNO");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Usegirorate).HasColumnName("USEGIRORATE");

                entity.Property(e => e.Useraisedval).HasColumnName("USERAISEDVAL");
            });

            modelBuilder.Entity<Lg00101Dataexchhistory>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_DATAEXCHHISTORY_I1");

                entity.ToTable("LG_001_01_DATAEXCHHISTORY");

                entity.HasIndex(e => new { e.Doctype, e.Docref }, "I001_01_DATAEXCHHISTORY_I2");

                entity.HasIndex(e => new { e.Transtype, e.Docref }, "I001_01_DATAEXCHHISTORY_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Autopackref).HasColumnName("AUTOPACKREF");

                entity.Property(e => e.Createddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CREATEDDATE");

                entity.Property(e => e.Createdtime).HasColumnName("CREATEDTIME");

                entity.Property(e => e.Description)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Docdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDATE");

                entity.Property(e => e.Docmoddate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCMODDATE");

                entity.Property(e => e.Docmodhour).HasColumnName("DOCMODHOUR");

                entity.Property(e => e.Docmodmin).HasColumnName("DOCMODMIN");

                entity.Property(e => e.Docmodsec).HasColumnName("DOCMODSEC");

                entity.Property(e => e.Docref).HasColumnName("DOCREF");

                entity.Property(e => e.Doctype).HasColumnName("DOCTYPE");

                entity.Property(e => e.Logoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("LOGOID");

                entity.Property(e => e.Optype).HasColumnName("OPTYPE");

                entity.Property(e => e.Recvpackid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("RECVPACKID");

                entity.Property(e => e.Savetype).HasColumnName("SAVETYPE");

                entity.Property(e => e.Transid)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("TRANSID");

                entity.Property(e => e.Transtype).HasColumnName("TRANSTYPE");
            });

            modelBuilder.Entity<Lg00101Defnfldstranv>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_DEFNFLDSTRANV_I1");

                entity.ToTable("LG_001_01_DEFNFLDSTRANV");

                entity.HasIndex(e => new { e.Modulenr, e.Level, e.Parentref, e.Ownerref }, "I001_01_DEFNFLDSTRANV_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Level).HasColumnName("LEVEL_");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Numflds1).HasColumnName("NUMFLDS1");

                entity.Property(e => e.Numflds10).HasColumnName("NUMFLDS10");

                entity.Property(e => e.Numflds11).HasColumnName("NUMFLDS11");

                entity.Property(e => e.Numflds12).HasColumnName("NUMFLDS12");

                entity.Property(e => e.Numflds13).HasColumnName("NUMFLDS13");

                entity.Property(e => e.Numflds14).HasColumnName("NUMFLDS14");

                entity.Property(e => e.Numflds15).HasColumnName("NUMFLDS15");

                entity.Property(e => e.Numflds16).HasColumnName("NUMFLDS16");

                entity.Property(e => e.Numflds17).HasColumnName("NUMFLDS17");

                entity.Property(e => e.Numflds18).HasColumnName("NUMFLDS18");

                entity.Property(e => e.Numflds19).HasColumnName("NUMFLDS19");

                entity.Property(e => e.Numflds2).HasColumnName("NUMFLDS2");

                entity.Property(e => e.Numflds20).HasColumnName("NUMFLDS20");

                entity.Property(e => e.Numflds21).HasColumnName("NUMFLDS21");

                entity.Property(e => e.Numflds22).HasColumnName("NUMFLDS22");

                entity.Property(e => e.Numflds23).HasColumnName("NUMFLDS23");

                entity.Property(e => e.Numflds24).HasColumnName("NUMFLDS24");

                entity.Property(e => e.Numflds25).HasColumnName("NUMFLDS25");

                entity.Property(e => e.Numflds26).HasColumnName("NUMFLDS26");

                entity.Property(e => e.Numflds27).HasColumnName("NUMFLDS27");

                entity.Property(e => e.Numflds28).HasColumnName("NUMFLDS28");

                entity.Property(e => e.Numflds29).HasColumnName("NUMFLDS29");

                entity.Property(e => e.Numflds3).HasColumnName("NUMFLDS3");

                entity.Property(e => e.Numflds30).HasColumnName("NUMFLDS30");

                entity.Property(e => e.Numflds31).HasColumnName("NUMFLDS31");

                entity.Property(e => e.Numflds32).HasColumnName("NUMFLDS32");

                entity.Property(e => e.Numflds33).HasColumnName("NUMFLDS33");

                entity.Property(e => e.Numflds34).HasColumnName("NUMFLDS34");

                entity.Property(e => e.Numflds35).HasColumnName("NUMFLDS35");

                entity.Property(e => e.Numflds36).HasColumnName("NUMFLDS36");

                entity.Property(e => e.Numflds37).HasColumnName("NUMFLDS37");

                entity.Property(e => e.Numflds38).HasColumnName("NUMFLDS38");

                entity.Property(e => e.Numflds39).HasColumnName("NUMFLDS39");

                entity.Property(e => e.Numflds4).HasColumnName("NUMFLDS4");

                entity.Property(e => e.Numflds40).HasColumnName("NUMFLDS40");

                entity.Property(e => e.Numflds41).HasColumnName("NUMFLDS41");

                entity.Property(e => e.Numflds42).HasColumnName("NUMFLDS42");

                entity.Property(e => e.Numflds43).HasColumnName("NUMFLDS43");

                entity.Property(e => e.Numflds44).HasColumnName("NUMFLDS44");

                entity.Property(e => e.Numflds45).HasColumnName("NUMFLDS45");

                entity.Property(e => e.Numflds46).HasColumnName("NUMFLDS46");

                entity.Property(e => e.Numflds47).HasColumnName("NUMFLDS47");

                entity.Property(e => e.Numflds48).HasColumnName("NUMFLDS48");

                entity.Property(e => e.Numflds49).HasColumnName("NUMFLDS49");

                entity.Property(e => e.Numflds5).HasColumnName("NUMFLDS5");

                entity.Property(e => e.Numflds50).HasColumnName("NUMFLDS50");

                entity.Property(e => e.Numflds6).HasColumnName("NUMFLDS6");

                entity.Property(e => e.Numflds7).HasColumnName("NUMFLDS7");

                entity.Property(e => e.Numflds8).HasColumnName("NUMFLDS8");

                entity.Property(e => e.Numflds9).HasColumnName("NUMFLDS9");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Ownerref).HasColumnName("OWNERREF");

                entity.Property(e => e.Parentref).HasColumnName("PARENTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Textflds1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS1");

                entity.Property(e => e.Textflds10)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS10");

                entity.Property(e => e.Textflds11)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS11");

                entity.Property(e => e.Textflds12)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS12");

                entity.Property(e => e.Textflds13)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS13");

                entity.Property(e => e.Textflds14)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS14");

                entity.Property(e => e.Textflds15)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS15");

                entity.Property(e => e.Textflds16)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS16");

                entity.Property(e => e.Textflds17)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS17");

                entity.Property(e => e.Textflds18)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS18");

                entity.Property(e => e.Textflds19)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS19");

                entity.Property(e => e.Textflds2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS2");

                entity.Property(e => e.Textflds20)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS20");

                entity.Property(e => e.Textflds21)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS21");

                entity.Property(e => e.Textflds22)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS22");

                entity.Property(e => e.Textflds23)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS23");

                entity.Property(e => e.Textflds24)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS24");

                entity.Property(e => e.Textflds25)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS25");

                entity.Property(e => e.Textflds26)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS26");

                entity.Property(e => e.Textflds27)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS27");

                entity.Property(e => e.Textflds28)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS28");

                entity.Property(e => e.Textflds29)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS29");

                entity.Property(e => e.Textflds3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS3");

                entity.Property(e => e.Textflds30)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS30");

                entity.Property(e => e.Textflds31)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS31");

                entity.Property(e => e.Textflds32)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS32");

                entity.Property(e => e.Textflds33)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS33");

                entity.Property(e => e.Textflds34)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS34");

                entity.Property(e => e.Textflds35)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS35");

                entity.Property(e => e.Textflds36)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS36");

                entity.Property(e => e.Textflds37)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS37");

                entity.Property(e => e.Textflds38)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS38");

                entity.Property(e => e.Textflds39)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS39");

                entity.Property(e => e.Textflds4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS4");

                entity.Property(e => e.Textflds40)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS40");

                entity.Property(e => e.Textflds41)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS41");

                entity.Property(e => e.Textflds42)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS42");

                entity.Property(e => e.Textflds43)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS43");

                entity.Property(e => e.Textflds44)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS44");

                entity.Property(e => e.Textflds45)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS45");

                entity.Property(e => e.Textflds46)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS46");

                entity.Property(e => e.Textflds47)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS47");

                entity.Property(e => e.Textflds48)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS48");

                entity.Property(e => e.Textflds49)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS49");

                entity.Property(e => e.Textflds5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS5");

                entity.Property(e => e.Textflds50)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS50");

                entity.Property(e => e.Textflds6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS6");

                entity.Property(e => e.Textflds7)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS7");

                entity.Property(e => e.Textflds8)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS8");

                entity.Property(e => e.Textflds9)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS9");
            });

            modelBuilder.Entity<Lg00101Demandfiche>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_DEMANDFICHE_I1");

                entity.ToTable("LG_001_01_DEMANDFICHE");

                entity.HasIndex(e => new { e.Demandtype, e.Ficheno }, "I001_01_DEMANDFICHE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Demandtype, e.Date, e.Time }, "I001_01_DEMANDFICHE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Demandref).HasColumnName("DEMANDREF");

                entity.Property(e => e.Demandtype).HasColumnName("DEMANDTYPE");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Notifycrdref).HasColumnName("NOTIFYCRDREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Perref).HasColumnName("PERREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Userno).HasColumnName("USERNO");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Demandline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_DEMANDLINE_I1");

                entity.ToTable("LG_001_01_DEMANDLINE");

                entity.HasIndex(e => new { e.Demandficheref, e.Lineno }, "I001_01_DEMANDLINE_I2");

                entity.HasIndex(e => e.Procuredate, "I001_01_DEMANDLINE_I3");

                entity.HasIndex(e => new { e.Demandficheref, e.Prevlineref, e.Prevlineno }, "I001_01_DEMANDLINE_I4");

                entity.HasIndex(e => e.Fichedate, "I001_01_DEMANDLINE_I5");

                entity.HasIndex(e => e.Bomrevref, "I001_01_DEMANDLINE_I6");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Altitemuse).HasColumnName("ALTITEMUSE");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Bommasterref).HasColumnName("BOMMASTERREF");

                entity.Property(e => e.Bomrevref).HasColumnName("BOMREVREF");

                entity.Property(e => e.Bomtype).HasColumnName("BOMTYPE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancamount).HasColumnName("CANCAMOUNT");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Cpstflag).HasColumnName("CPSTFLAG");

                entity.Property(e => e.Crsaccountref).HasColumnName("CRSACCOUNTREF");

                entity.Property(e => e.Crscenterref).HasColumnName("CRSCENTERREF");

                entity.Property(e => e.Crsprojectref).HasColumnName("CRSPROJECTREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Demandficheref).HasColumnName("DEMANDFICHEREF");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Detline).HasColumnName("DETLINE");

                entity.Property(e => e.Displineref).HasColumnName("DISPLINEREF");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Fichedate)
                    .HasColumnType("datetime")
                    .HasColumnName("FICHEDATE");

                entity.Property(e => e.Fichetype).HasColumnName("FICHETYPE");

                entity.Property(e => e.Frclineref).HasColumnName("FRCLINEREF");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Invuseparam).HasColumnName("INVUSEPARAM");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Meetamnt).HasColumnName("MEETAMNT");

                entity.Property(e => e.Meettype).HasColumnName("MEETTYPE");

                entity.Property(e => e.Meetwithstock).HasColumnName("MEETWITHSTOCK");

                entity.Property(e => e.Mrpheadref).HasColumnName("MRPHEADREF");

                entity.Property(e => e.Mrpheadtype).HasColumnName("MRPHEADTYPE");

                entity.Property(e => e.Mrplineref).HasColumnName("MRPLINEREF");

                entity.Property(e => e.Ordpegamount).HasColumnName("ORDPEGAMOUNT");

                entity.Property(e => e.Ordpeguse).HasColumnName("ORDPEGUSE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Paydefref).HasColumnName("PAYDEFREF");

                entity.Property(e => e.Plnficheper).HasColumnName("PLNFICHEPER");

                entity.Property(e => e.Plnstfcref).HasColumnName("PLNSTFCREF");

                entity.Property(e => e.Plnstlref).HasColumnName("PLNSTLREF");

                entity.Property(e => e.Polineref).HasColumnName("POLINEREF");

                entity.Property(e => e.Prclistref).HasColumnName("PRCLISTREF");

                entity.Property(e => e.Prcurr).HasColumnName("PRCURR");

                entity.Property(e => e.Prevlineno).HasColumnName("PREVLINENO");

                entity.Property(e => e.Prevlineref).HasColumnName("PREVLINEREF");

                entity.Property(e => e.Price).HasColumnName("PRICE");

                entity.Property(e => e.Procuredate)
                    .HasColumnType("datetime")
                    .HasColumnName("PROCUREDATE");

                entity.Property(e => e.Procuretime).HasColumnName("PROCURETIME");

                entity.Property(e => e.Prodordref).HasColumnName("PRODORDREF");

                entity.Property(e => e.Prodordtyp).HasColumnName("PRODORDTYP");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Prprice).HasColumnName("PRPRICE");

                entity.Property(e => e.Realsrcindex).HasColumnName("REALSRCINDEX");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Specode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Username)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("USERNAME");

                entity.Property(e => e.Usref).HasColumnName("USREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Demandpegging>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_DEMANDPEGGING_I1");

                entity.ToTable("LG_001_01_DEMANDPEGGING");

                entity.HasIndex(e => new { e.Parenttype, e.Parentref }, "I001_01_DEMANDPEGGING_I2");

                entity.HasIndex(e => new { e.Childtype, e.Childref }, "I001_01_DEMANDPEGGING_I3");

                entity.HasIndex(e => new { e.Demandlineref, e.Childtype }, "I001_01_DEMANDPEGGING_I4");

                entity.HasIndex(e => new { e.Linetype, e.Demandficheref }, "I001_01_DEMANDPEGGING_I5");

                entity.HasIndex(e => e.Bomrevref, "I001_01_DEMANDPEGGING_I6");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bommasterref).HasColumnName("BOMMASTERREF");

                entity.Property(e => e.Bomrevref).HasColumnName("BOMREVREF");

                entity.Property(e => e.Bomtype).HasColumnName("BOMTYPE");

                entity.Property(e => e.Childref).HasColumnName("CHILDREF");

                entity.Property(e => e.Childtype).HasColumnName("CHILDTYPE");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Demandficheref).HasColumnName("DEMANDFICHEREF");

                entity.Property(e => e.Demandlineref).HasColumnName("DEMANDLINEREF");

                entity.Property(e => e.Detline).HasColumnName("DETLINE");

                entity.Property(e => e.Fichetype).HasColumnName("FICHETYPE");

                entity.Property(e => e.Itemalter).HasColumnName("ITEMALTER");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Mainitemref).HasColumnName("MAINITEMREF");

                entity.Property(e => e.Mainmeetamnt).HasColumnName("MAINMEETAMNT");

                entity.Property(e => e.Mainunitref).HasColumnName("MAINUNITREF");

                entity.Property(e => e.Mainvariantref).HasColumnName("MAINVARIANTREF");

                entity.Property(e => e.Meetamnt).HasColumnName("MEETAMNT");

                entity.Property(e => e.Ordperiod).HasColumnName("ORDPERIOD");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Parentref).HasColumnName("PARENTREF");

                entity.Property(e => e.Parenttype).HasColumnName("PARENTTYPE");

                entity.Property(e => e.Payplanref).HasColumnName("PAYPLANREF");

                entity.Property(e => e.Prevlineno).HasColumnName("PREVLINENO");

                entity.Property(e => e.Prevlineref).HasColumnName("PREVLINEREF");

                entity.Property(e => e.Price).HasColumnName("PRICE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Unitref).HasColumnName("UNITREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg00101Diib>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_DIIB_I1");

                entity.ToTable("LG_001_01_DIIB");

                entity.HasIndex(e => e.Ficheno, "I001_01_DIIB_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Ficheno, e.Begdate, e.Enddate }, "I001_01_DIIB_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Fichetype).HasColumnName("FICHETYPE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");
            });

            modelBuilder.Entity<Lg00101Diibbomline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_DIIBBOMLINE_I1");

                entity.ToTable("LG_001_01_DIIBBOMLINE");

                entity.HasIndex(e => new { e.Diibficheref, e.Explineref, e.Implineref }, "I001_01_DIIBBOMLINE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Diibficheref, e.Explineref, e.Lineno }, "I001_01_DIIBBOMLINE_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Diibficheref).HasColumnName("DIIBFICHEREF");

                entity.Property(e => e.Explineref).HasColumnName("EXPLINEREF");

                entity.Property(e => e.Implineref).HasColumnName("IMPLINEREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Scrapper).HasColumnName("SCRAPPER");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<Lg00101Diibline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_DIIBLINE_I1");

                entity.ToTable("LG_001_01_DIIBLINE");

                entity.HasIndex(e => new { e.Diibficheref, e.Linetype, e.Lineno }, "I001_01_DIIBLINE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Linetype, e.Gtipcode }, "I001_01_DIIBLINE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Diibficheref).HasColumnName("DIIBFICHEREF");

                entity.Property(e => e.Gtipcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("GTIPCODE");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Usageamount).HasColumnName("USAGEAMOUNT");

                entity.Property(e => e.Usref).HasColumnName("USREF");
            });

            modelBuilder.Entity<Lg00101Discpaytran>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_DISCPAYTRANS_I1");

                entity.ToTable("LG_001_01_DISCPAYTRANS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Discduedate)
                    .HasColumnType("datetime")
                    .HasColumnName("DISCDUEDATE");

                entity.Property(e => e.Discrate).HasColumnName("DISCRATE");

                entity.Property(e => e.Fichelineref).HasColumnName("FICHELINEREF");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Paytranref).HasColumnName("PAYTRANREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Tsign).HasColumnName("TSIGN");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Distord>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_DISTORD_I1");

                entity.ToTable("LG_001_01_DISTORD");

                entity.HasIndex(e => e.Ficheno, "I001_01_DISTORD_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Date, "I001_01_DISTORD_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Factory).HasColumnName("FACTORY");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Godate)
                    .HasColumnType("datetime")
                    .HasColumnName("GODATE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Loadrate).HasColumnName("LOADRATE");

                entity.Property(e => e.Maxclientlimit).HasColumnName("MAXCLIENTLIMIT");

                entity.Property(e => e.Ordfcwithpay).HasColumnName("ORDFCWITHPAY");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Returndate)
                    .HasColumnType("datetime")
                    .HasColumnName("RETURNDATE");

                entity.Property(e => e.Routref).HasColumnName("ROUTREF");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Vehicleref).HasColumnName("VEHICLEREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Distordline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_DISTORDLINE_I1");

                entity.ToTable("LG_001_01_DISTORDLINE");

                entity.HasIndex(e => e.Distorderref, "I001_01_DISTORDLINE_I2");

                entity.HasIndex(e => e.Ordficheref, "I001_01_DISTORDLINE_I3");

                entity.HasIndex(e => new { e.Ordlineref, e.Clientref }, "I001_01_DISTORDLINE_I4");

                entity.HasIndex(e => e.Duedate, "I001_01_DISTORDLINE_I5");

                entity.HasIndex(e => new { e.Distorderref, e.Itemref, e.Variantref, e.Linetype }, "I001_01_DISTORDLINE_I6");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Actshipday).HasColumnName("ACTSHIPDAY");

                entity.Property(e => e.Actshiptime).HasColumnName("ACTSHIPTIME");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Campaignrefs1).HasColumnName("CAMPAIGNREFS1");

                entity.Property(e => e.Campaignrefs2).HasColumnName("CAMPAIGNREFS2");

                entity.Property(e => e.Campaignrefs3).HasColumnName("CAMPAIGNREFS3");

                entity.Property(e => e.Campaignrefs4).HasColumnName("CAMPAIGNREFS4");

                entity.Property(e => e.Campaignrefs5).HasColumnName("CAMPAIGNREFS5");

                entity.Property(e => e.Citycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CITYCODE");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Cmpglineref).HasColumnName("CMPGLINEREF");

                entity.Property(e => e.Cmpglinerefs1).HasColumnName("CMPGLINEREFS1");

                entity.Property(e => e.Cmpglinerefs2).HasColumnName("CMPGLINEREFS2");

                entity.Property(e => e.Cmpglinerefs3).HasColumnName("CMPGLINEREFS3");

                entity.Property(e => e.Cmpglinerefs4).HasColumnName("CMPGLINEREFS4");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Distance).HasColumnName("DISTANCE");

                entity.Property(e => e.Distorderref).HasColumnName("DISTORDERREF");

                entity.Property(e => e.Districtcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICTCODE");

                entity.Property(e => e.Distroutelnref).HasColumnName("DISTROUTELNREF");

                entity.Property(e => e.Dordgodate)
                    .HasColumnType("datetime")
                    .HasColumnName("DORDGODATE");

                entity.Property(e => e.Dordreturndate)
                    .HasColumnType("datetime")
                    .HasColumnName("DORDRETURNDATE");

                entity.Property(e => e.Dordstatus).HasColumnName("DORDSTATUS");

                entity.Property(e => e.Duedate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUEDATE");

                entity.Property(e => e.Factory).HasColumnName("FACTORY");

                entity.Property(e => e.Grossuinfo1).HasColumnName("GROSSUINFO1");

                entity.Property(e => e.Grossuinfo2).HasColumnName("GROSSUINFO2");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Itemtracktype).HasColumnName("ITEMTRACKTYPE");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Loctracking).HasColumnName("LOCTRACKING");

                entity.Property(e => e.Orderamount).HasColumnName("ORDERAMOUNT");

                entity.Property(e => e.Ordficheref).HasColumnName("ORDFICHEREF");

                entity.Property(e => e.Ordlineref).HasColumnName("ORDLINEREF");

                entity.Property(e => e.Ordlnwithpay).HasColumnName("ORDLNWITHPAY");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Plnshipday).HasColumnName("PLNSHIPDAY");

                entity.Property(e => e.Plnshiptime).HasColumnName("PLNSHIPTIME");

                entity.Property(e => e.Pointcampref).HasColumnName("POINTCAMPREF");

                entity.Property(e => e.Pointcamprefs1).HasColumnName("POINTCAMPREFS1");

                entity.Property(e => e.Pointcamprefs2).HasColumnName("POINTCAMPREFS2");

                entity.Property(e => e.Pointcamprefs3).HasColumnName("POINTCAMPREFS3");

                entity.Property(e => e.Pointcamprefs4).HasColumnName("POINTCAMPREFS4");

                entity.Property(e => e.Prepstatus).HasColumnName("PREPSTATUS");

                entity.Property(e => e.Reasonfornotshp).HasColumnName("REASONFORNOTSHP");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Remamount).HasColumnName("REMAMOUNT");

                entity.Property(e => e.Riskstatus).HasColumnName("RISKSTATUS");

                entity.Property(e => e.Salesman).HasColumnName("SALESMAN");

                entity.Property(e => e.Shipamount).HasColumnName("SHIPAMOUNT");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Towncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TOWNCODE");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg00101Divatran>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_DIVATRANS_I1");

                entity.ToTable("LG_001_01_DIVATRANS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Entitytpye).HasColumnName("ENTITYTPYE");

                entity.Property(e => e.Exportdatetime)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("EXPORTDATETIME");

                entity.Property(e => e.Importdatetime)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("IMPORTDATETIME");
            });

            modelBuilder.Entity<Lg00101Docprint>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_DOCPRINT_I1");

                entity.ToTable("LG_001_01_DOCPRINT");

                entity.HasIndex(e => new { e.Doctype, e.Docref }, "I001_01_DOCPRINT_I2");

                entity.HasIndex(e => e.Termcode, "I001_01_DOCPRINT_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Designtitle)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("DESIGNTITLE");

                entity.Property(e => e.Docref).HasColumnName("DOCREF");

                entity.Property(e => e.Doctype).HasColumnName("DOCTYPE");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printercode)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PRINTERCODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Termcode)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("TERMCODE");
            });

            modelBuilder.Entity<Lg00101Docschema>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_DOCSCHEMA_I1");

                entity.ToTable("LG_001_01_DOCSCHEMA");

                entity.HasIndex(e => new { e.Xmloptype, e.Doctype, e.Doctrcode }, "I001_01_DOCSCHEMA_I2");

                entity.HasIndex(e => e.Docgroup, "I001_01_DOCSCHEMA_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Crossdoc).HasColumnName("CROSSDOC");

                entity.Property(e => e.Crossplugid).HasColumnName("CROSSPLUGID");

                entity.Property(e => e.Crosstr).HasColumnName("CROSSTR");

                entity.Property(e => e.Docgroup).HasColumnName("DOCGROUP");

                entity.Property(e => e.Docplugid).HasColumnName("DOCPLUGID");

                entity.Property(e => e.Doctrcode).HasColumnName("DOCTRCODE");

                entity.Property(e => e.Doctype).HasColumnName("DOCTYPE");

                entity.Property(e => e.Headerref).HasColumnName("HEADERREF");

                entity.Property(e => e.Strghdoc).HasColumnName("STRGHDOC");

                entity.Property(e => e.Strghplugid).HasColumnName("STRGHPLUGID");

                entity.Property(e => e.Strghtr).HasColumnName("STRGHTR");

                entity.Property(e => e.Xmloptype).HasColumnName("XMLOPTYPE");
            });

            modelBuilder.Entity<Lg00101Docsellist>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_DOCSELLIST_I1");

                entity.ToTable("LG_001_01_DOCSELLIST");

                entity.HasIndex(e => new { e.Doctype, e.Trcode }, "I001_01_DOCSELLIST_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cross).HasColumnName("CROSS_");

                entity.Property(e => e.Docgroup).HasColumnName("DOCGROUP");

                entity.Property(e => e.Doctype).HasColumnName("DOCTYPE");

                entity.Property(e => e.Seldoc).HasColumnName("SELDOC");

                entity.Property(e => e.Seltr).HasColumnName("SELTR");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Xmloptype).HasColumnName("XMLOPTYPE");
            });

            modelBuilder.Entity<Lg00101Earchivedet>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EARCHIVEDET_I1");

                entity.ToTable("LG_001_01_EARCHIVEDET");

                entity.HasIndex(e => e.Invoiceref, "I001_01_EARCHIVEDET_I2");

                entity.HasIndex(e => e.Stfref, "I001_01_EARCHIVEDET_I3");

                entity.HasIndex(e => e.Ordfcref, "I001_01_EARCHIVEDET_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.Chaindelivery).HasColumnName("CHAINDELIVERY");

                entity.Property(e => e.Chassisnum1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CHASSISNUM1");

                entity.Property(e => e.Chassisnum2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CHASSISNUM2");

                entity.Property(e => e.Chassisnum3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CHASSISNUM3");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Citycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CITYCODE");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.District)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Districtcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICTCODE");

                entity.Property(e => e.Drivername1)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERNAME1");

                entity.Property(e => e.Drivername2)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERNAME2");

                entity.Property(e => e.Drivername3)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERNAME3");

                entity.Property(e => e.Driversurname1)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERSURNAME1");

                entity.Property(e => e.Driversurname2)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERSURNAME2");

                entity.Property(e => e.Driversurname3)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERSURNAME3");

                entity.Property(e => e.Drivertckno1)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERTCKNO1");

                entity.Property(e => e.Drivertckno2)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERTCKNO2");

                entity.Property(e => e.Drivertckno3)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERTCKNO3");

                entity.Property(e => e.Earchivestatus).HasColumnName("EARCHIVESTATUS");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Installmentnumber)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INSTALLMENTNUMBER");

                entity.Property(e => e.Insteadofdesp).HasColumnName("INSTEADOFDESP");

                entity.Property(e => e.Intpaymentagent)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INTPAYMENTAGENT");

                entity.Property(e => e.Intpaymentdate).HasColumnName("INTPAYMENTDATE");

                entity.Property(e => e.Intpaymentdesc)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INTPAYMENTDESC");

                entity.Property(e => e.Intpaymenttype).HasColumnName("INTPAYMENTTYPE");

                entity.Property(e => e.Intsalesaddr)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("INTSALESADDR");

                entity.Property(e => e.Invoiceref).HasColumnName("INVOICEREF");

                entity.Property(e => e.Iscomp).HasColumnName("ISCOMP");

                entity.Property(e => e.Ispercurr).HasColumnName("ISPERCURR");

                entity.Property(e => e.Name)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Ockfichedate).HasColumnName("OCKFICHEDATE");

                entity.Property(e => e.Ockfichenumber)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("OCKFICHENUMBER");

                entity.Property(e => e.Ockserialnumber)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("OCKSERIALNUMBER");

                entity.Property(e => e.Ockznumber)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("OCKZNUMBER");

                entity.Property(e => e.Oldearchivestatus).HasColumnName("OLDEARCHIVESTATUS");

                entity.Property(e => e.Ordfcref).HasColumnName("ORDFCREF");

                entity.Property(e => e.Platenum1)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PLATENUM1");

                entity.Property(e => e.Platenum2)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PLATENUM2");

                entity.Property(e => e.Platenum3)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PLATENUM3");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Responsecode).HasColumnName("RESPONSECODE");

                entity.Property(e => e.Responsecodedesp).HasColumnName("RESPONSECODEDESP");

                entity.Property(e => e.Responsestatus).HasColumnName("RESPONSESTATUS");

                entity.Property(e => e.Responsestatusdesp).HasColumnName("RESPONSESTATUSDESP");

                entity.Property(e => e.Sellerclientref).HasColumnName("SELLERCLIENTREF");

                entity.Property(e => e.Sendmod).HasColumnName("SENDMOD");

                entity.Property(e => e.Statusdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("STATUSDESC");

                entity.Property(e => e.Statusdescdesp)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("STATUSDESCDESP");

                entity.Property(e => e.Stfref).HasColumnName("STFREF");

                entity.Property(e => e.Surname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("SURNAME");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Taxoffice)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFFICE");

                entity.Property(e => e.Tckno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TCKNO");

                entity.Property(e => e.Telcodes1)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELCODES1");

                entity.Property(e => e.Telcodes2)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELCODES2");

                entity.Property(e => e.Telnrs1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS1");

                entity.Property(e => e.Telnrs2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS2");

                entity.Property(e => e.Town)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Towncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TOWNCODE");
            });

            modelBuilder.Entity<Lg00101Ebookdetaildoc>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EBOOKDETAILDOC_I1");

                entity.ToTable("LG_001_01_EBOOKDETAILDOC");

                entity.HasIndex(e => e.Emficheref, "I001_01_EBOOKDETAILDOC_I2");

                entity.HasIndex(e => e.Emflineref, "I001_01_EBOOKDETAILDOC_I3");

                entity.HasIndex(e => new { e.Modulenr, e.Sourcefref }, "I001_01_EBOOKDETAILDOC_I4");

                entity.HasIndex(e => new { e.Emficheref, e.Emflineref, e.Modulenr, e.Sourcefref }, "I001_01_EBOOKDETAILDOC_I5")
                    .IsUnique();

                entity.HasIndex(e => e.Emflineref, "I001_01_EBOOKDETAILDOC_I99");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Documentdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCUMENTDATE");

                entity.Property(e => e.Documentnr)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCUMENTNR");

                entity.Property(e => e.Documenttype).HasColumnName("DOCUMENTTYPE");

                entity.Property(e => e.Emficheref).HasColumnName("EMFICHEREF");

                entity.Property(e => e.Emflineref).HasColumnName("EMFLINEREF");

                entity.Property(e => e.Explain)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EXPLAIN");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Nopayment).HasColumnName("NOPAYMENT");

                entity.Property(e => e.Paytype)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("PAYTYPE");

                entity.Property(e => e.Sourcefref).HasColumnName("SOURCEFREF");

                entity.Property(e => e.Undocumented).HasColumnName("UNDOCUMENTED");
            });

            modelBuilder.Entity<Lg00101Einvoicedet>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EINVOICEDET_I1");

                entity.ToTable("LG_001_01_EINVOICEDET");

                entity.HasIndex(e => e.Invoiceref, "I001_01_EINVOICEDET_I2");

                entity.HasIndex(e => e.Stfref, "I001_01_EINVOICEDET_I3");

                entity.HasIndex(e => e.Ordfcref, "I001_01_EINVOICEDET_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.Agency)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("AGENCY");

                entity.Property(e => e.Agencycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("AGENCYCODE");

                entity.Property(e => e.Chaindelivery).HasColumnName("CHAINDELIVERY");

                entity.Property(e => e.Chassisnum1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CHASSISNUM1");

                entity.Property(e => e.Chassisnum2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CHASSISNUM2");

                entity.Property(e => e.Chassisnum3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CHASSISNUM3");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Citycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CITYCODE");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.District)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Districtcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICTCODE");

                entity.Property(e => e.Documentnosgk)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DOCUMENTNOSGK");

                entity.Property(e => e.Drivername1)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERNAME1");

                entity.Property(e => e.Drivername2)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERNAME2");

                entity.Property(e => e.Drivername3)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERNAME3");

                entity.Property(e => e.Driversurname1)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERSURNAME1");

                entity.Property(e => e.Driversurname2)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERSURNAME2");

                entity.Property(e => e.Driversurname3)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERSURNAME3");

                entity.Property(e => e.Drivertckno1)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERTCKNO1");

                entity.Property(e => e.Drivertckno2)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERTCKNO2");

                entity.Property(e => e.Drivertckno3)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERTCKNO3");

                entity.Property(e => e.Edescription)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EDESCRIPTION");

                entity.Property(e => e.Eduration).HasColumnName("EDURATION");

                entity.Property(e => e.Edurationtype).HasColumnName("EDURATIONTYPE");

                entity.Property(e => e.Eenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("EENDDATE");

                entity.Property(e => e.Einvoicetyp).HasColumnName("EINVOICETYP");

                entity.Property(e => e.Einvoicetypsgk).HasColumnName("EINVOICETYPSGK");

                entity.Property(e => e.Estartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("ESTARTDATE");

                entity.Property(e => e.Estatus).HasColumnName("ESTATUS");

                entity.Property(e => e.Exitcountry)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("EXITCOUNTRY");

                entity.Property(e => e.Exitcountrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("EXITCOUNTRYCODE");

                entity.Property(e => e.Exitdate)
                    .HasColumnType("datetime")
                    .HasColumnName("EXITDATE");

                entity.Property(e => e.Exitgate)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EXITGATE");

                entity.Property(e => e.Exitgatecode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("EXITGATECODE");

                entity.Property(e => e.Exittime).HasColumnName("EXITTIME");

                entity.Property(e => e.Exittown)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EXITTOWN");

                entity.Property(e => e.Flightnumber)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("FLIGHTNUMBER");

                entity.Property(e => e.Guide)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GUIDE");

                entity.Property(e => e.Invoiceref).HasColumnName("INVOICEREF");

                entity.Property(e => e.Ordfcref).HasColumnName("ORDFCREF");

                entity.Property(e => e.Platenum1)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PLATENUM1");

                entity.Property(e => e.Platenum2)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PLATENUM2");

                entity.Property(e => e.Platenum3)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PLATENUM3");

                entity.Property(e => e.Profileid).HasColumnName("PROFILEID");

                entity.Property(e => e.Responsecode).HasColumnName("RESPONSECODE");

                entity.Property(e => e.Responsecodedesp).HasColumnName("RESPONSECODEDESP");

                entity.Property(e => e.Responsestatus).HasColumnName("RESPONSESTATUS");

                entity.Property(e => e.Responsestatusdesp).HasColumnName("RESPONSESTATUSDESP");

                entity.Property(e => e.Sellerclientref).HasColumnName("SELLERCLIENTREF");

                entity.Property(e => e.Sendeinvcustom).HasColumnName("SENDEINVCUSTOM");

                entity.Property(e => e.Statusdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("STATUSDESC");

                entity.Property(e => e.Statusdescdesp)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("STATUSDESCDESP");

                entity.Property(e => e.Stfref).HasColumnName("STFREF");

                entity.Property(e => e.Taxnrtopay)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TAXNRTOPAY");

                entity.Property(e => e.Taxpayercode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("TAXPAYERCODE");

                entity.Property(e => e.Taxpayername)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("TAXPAYERNAME");

                entity.Property(e => e.Taxtype).HasColumnName("TAXTYPE");

                entity.Property(e => e.Town)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Towncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TOWNCODE");

                entity.Property(e => e.Transporttyp).HasColumnName("TRANSPORTTYP");

                entity.Property(e => e.Transporttypcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TRANSPORTTYPCODE");

                entity.Property(e => e.Transporttypname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TRANSPORTTYPNAME");

                entity.Property(e => e.Tubankname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TUBANKNAME");

                entity.Property(e => e.Tubnaccountno)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TUBNACCOUNTNO");

                entity.Property(e => e.Tubnbranch)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("TUBNBRANCH");

                entity.Property(e => e.Tubncurr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("TUBNCURR");

                entity.Property(e => e.Tuname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TUNAME");

                entity.Property(e => e.Tunationality)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TUNATIONALITY");

                entity.Property(e => e.Tunationalityname)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("TUNATIONALITYNAME");

                entity.Property(e => e.Tupassportdate)
                    .HasColumnType("datetime")
                    .HasColumnName("TUPASSPORTDATE");

                entity.Property(e => e.Tupassportno)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TUPASSPORTNO");

                entity.Property(e => e.Tupaymentnote)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("TUPAYMENTNOTE");

                entity.Property(e => e.Turetprice).HasColumnName("TURETPRICE");

                entity.Property(e => e.Tusurname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TUSURNAME");
            });

            modelBuilder.Entity<Lg00101Einvoicelog>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EINVOICELOG_I1");

                entity.ToTable("LG_001_01_EINVOICELOG");

                entity.HasIndex(e => e.Invfcno, "I001_01_EINVOICELOG_I2");

                entity.HasIndex(e => e.Itemcode, "I001_01_EINVOICELOG_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Errortyp).HasColumnName("ERRORTYP");

                entity.Property(e => e.Invfcdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INVFCDATE");

                entity.Property(e => e.Invfcno)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("INVFCNO");

                entity.Property(e => e.Itemcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ITEMCODE");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Stfcdate)
                    .HasColumnType("datetime")
                    .HasColumnName("STFCDATE");

                entity.Property(e => e.Stfcno)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("STFCNO");

                entity.Property(e => e.Stfcnoin)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("STFCNOIN");

                entity.Property(e => e.Stfcref).HasColumnName("STFCREF");

                entity.Property(e => e.Uomcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UOMCODE");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");
            });

            modelBuilder.Entity<Lg00101Emdemdetln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EMDEMDETLN_I1");

                entity.ToTable("LG_001_01_EMDEMDETLN");

                entity.HasIndex(e => e.Prevlineref, "I001_01_EMDEMDETLN_I2");

                entity.HasIndex(e => new { e.Centerref, e.Date, e.Tsign }, "I001_01_EMDEMDETLN_I3");

                entity.HasIndex(e => new { e.Projectref, e.Date, e.Tsign }, "I001_01_EMDEMDETLN_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Credebnet).HasColumnName("CREDEBNET");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Distrate).HasColumnName("DISTRATE");

                entity.Property(e => e.Emucredebnet).HasColumnName("EMUCREDEBNET");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Prevlineref).HasColumnName("PREVLINEREF");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Tsign).HasColumnName("TSIGN");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg00101Emdemfiche>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EMDEMFICHE_I1");

                entity.ToTable("LG_001_01_EMDEMFICHE");

                entity.HasIndex(e => new { e.Trcode, e.Ficheno }, "I001_01_EMDEMFICHE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Trcode, e.Ficheno }, "I001_01_EMDEMFICHE_I3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Modulenr, e.Cancfref }, "I001_01_EMDEMFICHE_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Batchtype).HasColumnName("BATCHTYPE");

                entity.Property(e => e.Bdgtfcref).HasColumnName("BDGTFCREF");

                entity.Property(e => e.Bdgtfctype).HasColumnName("BDGTFCTYPE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cancfref).HasColumnName("CANCFREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Controlinfo).HasColumnName("CONTROLINFO");

                entity.Property(e => e.Crossflag).HasColumnName("CROSSFLAG");

                entity.Property(e => e.Crossfref).HasColumnName("CROSSFREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Docdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDATE");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Doctype).HasColumnName("DOCTYPE");

                entity.Property(e => e.Emdemfcref).HasColumnName("EMDEMFCREF");

                entity.Property(e => e.Emutotactive).HasColumnName("EMUTOTACTIVE");

                entity.Property(e => e.Emutotpassive).HasColumnName("EMUTOTPASSIVE");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Fromdemtype).HasColumnName("FROMDEMTYPE");

                entity.Property(e => e.Genexctyp).HasColumnName("GENEXCTYP");

                entity.Property(e => e.Genexp1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP1");

                entity.Property(e => e.Genexp2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP2");

                entity.Property(e => e.Genexp3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP3");

                entity.Property(e => e.Genexp4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP4");

                entity.Property(e => e.Genexp5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP5");

                entity.Property(e => e.Genexp6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP6");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Isimpdistfc).HasColumnName("ISIMPDISTFC");

                entity.Property(e => e.Journalno).HasColumnName("JOURNALNO");

                entity.Property(e => e.Linebaseddocdet).HasColumnName("LINEBASEDDOCDET");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Moduleno).HasColumnName("MODULENO");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Notifycrdref).HasColumnName("NOTIFYCRDREF");

                entity.Property(e => e.Orglogicalref).HasColumnName("ORGLOGICALREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Persbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PERSBEGDATE");

                entity.Property(e => e.Persenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("PERSENDDATE");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reptotactive).HasColumnName("REPTOTACTIVE");

                entity.Property(e => e.Reptotpassive).HasColumnName("REPTOTPASSIVE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourcefref).HasColumnName("SOURCEFREF");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Totalactive).HasColumnName("TOTALACTIVE");

                entity.Property(e => e.Totalpassive).HasColumnName("TOTALPASSIVE");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Viaautogl).HasColumnName("VIAAUTOGL");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Emdemfline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EMDEMFLINE_I1");

                entity.ToTable("LG_001_01_EMDEMFLINE");

                entity.HasIndex(e => new { e.Kebircode, e.Date, e.Sign, e.Accountcode }, "I001_01_EMDEMFLINE_I2");

                entity.HasIndex(e => new { e.Centerref, e.Date, e.Sign }, "I001_01_EMDEMFLINE_I3");

                entity.HasIndex(e => new { e.Accficheref, e.Lineno }, "I001_01_EMDEMFLINE_I4");

                entity.HasIndex(e => new { e.Accountref, e.Date, e.Sign }, "I001_01_EMDEMFLINE_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accountcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCOUNTCODE");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Amnt).HasColumnName("AMNT");

                entity.Property(e => e.Bdgtfclnref).HasColumnName("BDGTFCLNREF");

                entity.Property(e => e.Bdgtfcprdref).HasColumnName("BDGTFCPRDREF");

                entity.Property(e => e.Bdgtfcref).HasColumnName("BDGTFCREF");

                entity.Property(e => e.Bdgtfctype).HasColumnName("BDGTFCTYPE");

                entity.Property(e => e.Bdgtlinetype).HasColumnName("BDGTLINETYPE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cashline).HasColumnName("CASHLINE");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Clcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLCODE");

                entity.Property(e => e.Cldef)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("CLDEF");

                entity.Property(e => e.Closed).HasColumnName("CLOSED");

                entity.Property(e => e.Coderef).HasColumnName("CODEREF");

                entity.Property(e => e.Createbdgtln).HasColumnName("CREATEBDGTLN");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Crosscode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("CROSSCODE");

                entity.Property(e => e.Currdiffcalc).HasColumnName("CURRDIFFCALC");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Disttempref).HasColumnName("DISTTEMPREF");

                entity.Property(e => e.Docdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDATE");

                entity.Property(e => e.Electdoc).HasColumnName("ELECTDOC");

                entity.Property(e => e.Emdemfcref).HasColumnName("EMDEMFCREF");

                entity.Property(e => e.Emdemlnref).HasColumnName("EMDEMLNREF");

                entity.Property(e => e.Emucredit).HasColumnName("EMUCREDIT");

                entity.Property(e => e.Emudebit).HasColumnName("EMUDEBIT");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Fortaxdecl).HasColumnName("FORTAXDECL");

                entity.Property(e => e.Fromdemtype).HasColumnName("FROMDEMTYPE");

                entity.Property(e => e.Fromwhere).HasColumnName("FROMWHERE");

                entity.Property(e => e.Globlineno).HasColumnName("GLOBLINENO");

                entity.Property(e => e.Grpfirmtrans).HasColumnName("GRPFIRMTRANS");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Infidx).HasColumnName("INFIDX");

                entity.Property(e => e.Invoiceno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("INVOICENO");

                entity.Property(e => e.Kebircode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("KEBIRCODE");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Mnthcount).HasColumnName("MNTHCOUNT");

                entity.Property(e => e.Mnthline).HasColumnName("MNTHLINE");

                entity.Property(e => e.Mnthsourceref).HasColumnName("MNTHSOURCEREF");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Notcalculated).HasColumnName("NOTCALCULATED");

                entity.Property(e => e.Notinflated).HasColumnName("NOTINFLATED");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Outfcref).HasColumnName("OUTFCREF");

                entity.Property(e => e.Outfctype).HasColumnName("OUTFCTYPE");

                entity.Property(e => e.Owneraccref).HasColumnName("OWNERACCREF");

                entity.Property(e => e.Paidtotal).HasColumnName("PAIDTOTAL");

                entity.Property(e => e.Parentlnref).HasColumnName("PARENTLNREF");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Sign).HasColumnName("SIGN");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceflnref).HasColumnName("SOURCEFLNREF");

                entity.Property(e => e.Sourcefref).HasColumnName("SOURCEFREF");

                entity.Property(e => e.Specode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Tckno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TCKNO");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Ufrslnref).HasColumnName("UFRSLNREF");

                entity.Property(e => e.Ufrsnetamnt).HasColumnName("UFRSNETAMNT");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg00101Emfiche>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EMFICHE_I1");

                entity.ToTable("LG_001_01_EMFICHE");

                entity.HasIndex(e => new { e.Trcode, e.Ficheno }, "I001_01_EMFICHE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Trcode, e.Ficheno }, "I001_01_EMFICHE_I3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Modulenr, e.Cancfref }, "I001_01_EMFICHE_I4");

                entity.HasIndex(e => new { e.Date, e.Logicalref }, "I001_01_EMFICHE_I5")
                    .IsUnique();

                entity.HasIndex(e => e.Journalno, "I001_01_EMFICHE_I6");

                entity.HasIndex(e => e.Guid, "I001_01_EMFICHE_I7");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Batchtype).HasColumnName("BATCHTYPE");

                entity.Property(e => e.Bdgtfcref).HasColumnName("BDGTFCREF");

                entity.Property(e => e.Bdgtfctype).HasColumnName("BDGTFCTYPE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cancfref).HasColumnName("CANCFREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Controlinfo).HasColumnName("CONTROLINFO");

                entity.Property(e => e.Crossflag).HasColumnName("CROSSFLAG");

                entity.Property(e => e.Crossfref).HasColumnName("CROSSFREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Docdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDATE");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Doctype).HasColumnName("DOCTYPE");

                entity.Property(e => e.Emdemfcref).HasColumnName("EMDEMFCREF");

                entity.Property(e => e.Emutotactive).HasColumnName("EMUTOTACTIVE");

                entity.Property(e => e.Emutotpassive).HasColumnName("EMUTOTPASSIVE");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Fromdemtype).HasColumnName("FROMDEMTYPE");

                entity.Property(e => e.Genexctyp).HasColumnName("GENEXCTYP");

                entity.Property(e => e.Genexp1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP1");

                entity.Property(e => e.Genexp2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP2");

                entity.Property(e => e.Genexp3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP3");

                entity.Property(e => e.Genexp4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP4");

                entity.Property(e => e.Genexp5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP5");

                entity.Property(e => e.Genexp6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP6");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Isimpdistfc).HasColumnName("ISIMPDISTFC");

                entity.Property(e => e.Journalno).HasColumnName("JOURNALNO");

                entity.Property(e => e.Linebaseddocdet).HasColumnName("LINEBASEDDOCDET");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Moduleno).HasColumnName("MODULENO");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Notifycrdref).HasColumnName("NOTIFYCRDREF");

                entity.Property(e => e.Orglogicalref).HasColumnName("ORGLOGICALREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Persbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PERSBEGDATE");

                entity.Property(e => e.Persenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("PERSENDDATE");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reptotactive).HasColumnName("REPTOTACTIVE");

                entity.Property(e => e.Reptotpassive).HasColumnName("REPTOTPASSIVE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourcefref).HasColumnName("SOURCEFREF");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Totalactive).HasColumnName("TOTALACTIVE");

                entity.Property(e => e.Totalpassive).HasColumnName("TOTALPASSIVE");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Viaautogl).HasColumnName("VIAAUTOGL");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Emfline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EMFLINE_I1");

                entity.ToTable("LG_001_01_EMFLINE");

                entity.HasIndex(e => new { e.Kebircode, e.Date, e.Sign, e.Accountcode }, "I001_01_EMFLINE_I2");

                entity.HasIndex(e => new { e.Centerref, e.Date, e.Sign }, "I001_01_EMFLINE_I3");

                entity.HasIndex(e => new { e.Accficheref, e.Lineno }, "I001_01_EMFLINE_I4");

                entity.HasIndex(e => new { e.Accountref, e.Date, e.Sign }, "I001_01_EMFLINE_I5");

                entity.HasIndex(e => e.Accountcode, "I001_01_EMFLINE_I6");

                entity.HasIndex(e => e.Ufrslnref, "I001_01_EMFLINE_I7");

                entity.HasIndex(e => new { e.Accountref, e.Date, e.Accficheref, e.Sign }, "I001_01_EMFLINE_I8");

                entity.HasIndex(e => new { e.Kebircode, e.Date, e.Accficheref, e.Sign, e.Accountcode }, "I001_01_EMFLINE_I9");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accountcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCOUNTCODE");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Amnt).HasColumnName("AMNT");

                entity.Property(e => e.Bdgtfclnref).HasColumnName("BDGTFCLNREF");

                entity.Property(e => e.Bdgtfcprdref).HasColumnName("BDGTFCPRDREF");

                entity.Property(e => e.Bdgtfcref).HasColumnName("BDGTFCREF");

                entity.Property(e => e.Bdgtfctype).HasColumnName("BDGTFCTYPE");

                entity.Property(e => e.Bdgtlinetype).HasColumnName("BDGTLINETYPE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cashline).HasColumnName("CASHLINE");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Clcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLCODE");

                entity.Property(e => e.Cldef)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("CLDEF");

                entity.Property(e => e.Closed).HasColumnName("CLOSED");

                entity.Property(e => e.Coderef).HasColumnName("CODEREF");

                entity.Property(e => e.Createbdgtln).HasColumnName("CREATEBDGTLN");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Crosscode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("CROSSCODE");

                entity.Property(e => e.Currdiffcalc).HasColumnName("CURRDIFFCALC");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Disttempref).HasColumnName("DISTTEMPREF");

                entity.Property(e => e.Docdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDATE");

                entity.Property(e => e.Electdoc).HasColumnName("ELECTDOC");

                entity.Property(e => e.Emdemfcref).HasColumnName("EMDEMFCREF");

                entity.Property(e => e.Emdemlnref).HasColumnName("EMDEMLNREF");

                entity.Property(e => e.Emucredit).HasColumnName("EMUCREDIT");

                entity.Property(e => e.Emudebit).HasColumnName("EMUDEBIT");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Fortaxdecl).HasColumnName("FORTAXDECL");

                entity.Property(e => e.Fromdemtype).HasColumnName("FROMDEMTYPE");

                entity.Property(e => e.Fromwhere).HasColumnName("FROMWHERE");

                entity.Property(e => e.Globlineno).HasColumnName("GLOBLINENO");

                entity.Property(e => e.Grpfirmtrans).HasColumnName("GRPFIRMTRANS");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Infidx).HasColumnName("INFIDX");

                entity.Property(e => e.Invoiceno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("INVOICENO");

                entity.Property(e => e.Kebircode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("KEBIRCODE");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Mnthcount).HasColumnName("MNTHCOUNT");

                entity.Property(e => e.Mnthline).HasColumnName("MNTHLINE");

                entity.Property(e => e.Mnthsourceref).HasColumnName("MNTHSOURCEREF");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Notcalculated).HasColumnName("NOTCALCULATED");

                entity.Property(e => e.Notinflated).HasColumnName("NOTINFLATED");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Outfcref).HasColumnName("OUTFCREF");

                entity.Property(e => e.Outfctype).HasColumnName("OUTFCTYPE");

                entity.Property(e => e.Owneraccref).HasColumnName("OWNERACCREF");

                entity.Property(e => e.Paidtotal).HasColumnName("PAIDTOTAL");

                entity.Property(e => e.Parentlnref).HasColumnName("PARENTLNREF");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Sign).HasColumnName("SIGN");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceflnref).HasColumnName("SOURCEFLNREF");

                entity.Property(e => e.Sourcefref).HasColumnName("SOURCEFREF");

                entity.Property(e => e.Specode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Tckno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TCKNO");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Ufrslnref).HasColumnName("UFRSLNREF");

                entity.Property(e => e.Ufrsnetamnt).HasColumnName("UFRSNETAMNT");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg00101Emflninfcoef>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EMFLNINFCOEF_I1");

                entity.ToTable("LG_001_01_EMFLNINFCOEF");

                entity.HasIndex(e => new { e.Ficheref, e.Lineref }, "I001_01_EMFLNINFCOEF_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Coefarr0).HasColumnName("COEFARR0");

                entity.Property(e => e.Coefarr1).HasColumnName("COEFARR1");

                entity.Property(e => e.Coefarr10).HasColumnName("COEFARR10");

                entity.Property(e => e.Coefarr11).HasColumnName("COEFARR11");

                entity.Property(e => e.Coefarr12).HasColumnName("COEFARR12");

                entity.Property(e => e.Coefarr13).HasColumnName("COEFARR13");

                entity.Property(e => e.Coefarr2).HasColumnName("COEFARR2");

                entity.Property(e => e.Coefarr3).HasColumnName("COEFARR3");

                entity.Property(e => e.Coefarr4).HasColumnName("COEFARR4");

                entity.Property(e => e.Coefarr5).HasColumnName("COEFARR5");

                entity.Property(e => e.Coefarr6).HasColumnName("COEFARR6");

                entity.Property(e => e.Coefarr7).HasColumnName("COEFARR7");

                entity.Property(e => e.Coefarr8).HasColumnName("COEFARR8");

                entity.Property(e => e.Coefarr9).HasColumnName("COEFARR9");

                entity.Property(e => e.Fichedate)
                    .HasColumnType("datetime")
                    .HasColumnName("FICHEDATE");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Invref).HasColumnName("INVREF");

                entity.Property(e => e.Lineref).HasColumnName("LINEREF");
            });

            modelBuilder.Entity<Lg00101Emuhtot>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EMUHTOT_I1");

                entity.ToTable("LG_001_01_EMUHTOT");

                entity.HasIndex(e => new { e.Accountref, e.Tottype, e.Year, e.Month, e.Branch, e.Department, e.Currtyp }, "I001_01_EMUHTOT_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Accountref, e.Tottype, e.Department, e.Branch, e.Currtyp, e.Year, e.Month }, "I001_01_EMUHTOT_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Creditinfl).HasColumnName("CREDITINFL");

                entity.Property(e => e.Creditrem).HasColumnName("CREDITREM");

                entity.Property(e => e.Creditresrv).HasColumnName("CREDITRESRV");

                entity.Property(e => e.Currtyp).HasColumnName("CURRTYP");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Debitinfl).HasColumnName("DEBITINFL");

                entity.Property(e => e.Debitrem).HasColumnName("DEBITREM");

                entity.Property(e => e.Debitresrv).HasColumnName("DEBITRESRV");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Tottype).HasColumnName("TOTTYPE");

                entity.Property(e => e.Trancount).HasColumnName("TRANCOUNT");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg00101Eproducerrecdet>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EPRODUCERRECDET_I1");

                entity.ToTable("LG_001_01_EPRODUCERRECDET");

                entity.HasIndex(e => e.Invoiceref, "I001_01_EPRODUCERRECDET_I2");

                entity.HasIndex(e => e.Stfref, "I001_01_EPRODUCERRECDET_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Citycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CITYCODE");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Deliverydate).HasColumnName("DELIVERYDATE");

                entity.Property(e => e.District)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Districtcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICTCODE");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Eprodrstatus).HasColumnName("EPRODRSTATUS");

                entity.Property(e => e.Invoiceref).HasColumnName("INVOICEREF");

                entity.Property(e => e.Iscomp).HasColumnName("ISCOMP");

                entity.Property(e => e.Name)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Responsecode).HasColumnName("RESPONSECODE");

                entity.Property(e => e.Responsestatus).HasColumnName("RESPONSESTATUS");

                entity.Property(e => e.Sendmod).HasColumnName("SENDMOD");

                entity.Property(e => e.Statusdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("STATUSDESC");

                entity.Property(e => e.Stfref).HasColumnName("STFREF");

                entity.Property(e => e.Surname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("SURNAME");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Tckno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TCKNO");

                entity.Property(e => e.Town)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Towncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TOWNCODE");
            });

            modelBuilder.Entity<Lg00101Etradesmaninvdet>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_ETRADESMANINVDET_I1");

                entity.ToTable("LG_001_01_ETRADESMANINVDET");

                entity.HasIndex(e => e.Ficheref, "I001_01_ETRADESMANINVDET_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Citycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CITYCODE");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.District)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Districtcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICTCODE");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Etradstatus).HasColumnName("ETRADSTATUS");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Grpcode).HasColumnName("GRPCODE");

                entity.Property(e => e.Iscomp).HasColumnName("ISCOMP");

                entity.Property(e => e.Name)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Responsecode).HasColumnName("RESPONSECODE");

                entity.Property(e => e.Responsestatus).HasColumnName("RESPONSESTATUS");

                entity.Property(e => e.Sendmod).HasColumnName("SENDMOD");

                entity.Property(e => e.Statusdesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("STATUSDESC");

                entity.Property(e => e.Surname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("SURNAME");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Tckno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TCKNO");

                entity.Property(e => e.Town)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Towncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TOWNCODE");
            });

            modelBuilder.Entity<Lg00101Eximdistfc>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EXIMDISTFC_I1");

                entity.ToTable("LG_001_01_EXIMDISTFC");

                entity.HasIndex(e => e.Ficheno, "I001_01_EXIMDISTFC_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Ftime, e.Ficheno }, "I001_01_EXIMDISTFC_I3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Eximinforef, e.Processnr }, "I001_01_EXIMDISTFC_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Accountedcnt).HasColumnName("ACCOUNTEDCNT");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Eisrvdsttyp).HasColumnName("EISRVDSTTYP");

                entity.Property(e => e.Eximinforef).HasColumnName("EXIMINFOREF");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Processnr).HasColumnName("PROCESSNR");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Eximdistln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EXIMDISTLN_I1");

                entity.ToTable("LG_001_01_EXIMDISTLN");

                entity.HasIndex(e => e.Srvref, "I001_01_EXIMDISTLN_I2");

                entity.HasIndex(e => new { e.Srvref, e.Date, e.Ftime }, "I001_01_EXIMDISTLN_I3");

                entity.HasIndex(e => new { e.Eximdistfcref, e.Linenr }, "I001_01_EXIMDISTLN_I4");

                entity.HasIndex(e => new { e.Eximinforef, e.Processnr }, "I001_01_EXIMDISTLN_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Disttotal).HasColumnName("DISTTOTAL");

                entity.Property(e => e.Disttotalufrs).HasColumnName("DISTTOTALUFRS");

                entity.Property(e => e.Eximdistfcref).HasColumnName("EXIMDISTFCREF");

                entity.Property(e => e.Eximinforef).HasColumnName("EXIMINFOREF");

                entity.Property(e => e.Fichetype).HasColumnName("FICHETYPE");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Processnr).HasColumnName("PROCESSNR");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Srvaccref).HasColumnName("SRVACCREF");

                entity.Property(e => e.Srvcenterref).HasColumnName("SRVCENTERREF");

                entity.Property(e => e.Srvdisttype).HasColumnName("SRVDISTTYPE");

                entity.Property(e => e.Srvref).HasColumnName("SRVREF");

                entity.Property(e => e.Srvtransref).HasColumnName("SRVTRANSREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Eximdistpeg>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EXIMDISTPEG_I1");

                entity.ToTable("LG_001_01_EXIMDISTPEG");

                entity.HasIndex(e => new { e.Eximdistfcref, e.Eximdistlnref }, "I001_01_EXIMDISTPEG_I2");

                entity.HasIndex(e => new { e.Eximdistlnref, e.Linenr }, "I001_01_EXIMDISTPEG_I3");

                entity.HasIndex(e => e.Eximinforef, "I001_01_EXIMDISTPEG_I4");

                entity.HasIndex(e => e.Sttransref, "I001_01_EXIMDISTPEG_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addexpense).HasColumnName("ADDEXPENSE");

                entity.Property(e => e.Addexpenseufrs).HasColumnName("ADDEXPENSEUFRS");

                entity.Property(e => e.Addrpexpense).HasColumnName("ADDRPEXPENSE");

                entity.Property(e => e.Addrpexpenseufrs).HasColumnName("ADDRPEXPENSEUFRS");

                entity.Property(e => e.Distrate).HasColumnName("DISTRATE");

                entity.Property(e => e.Disttotal).HasColumnName("DISTTOTAL");

                entity.Property(e => e.Disttotalufrs).HasColumnName("DISTTOTALUFRS");

                entity.Property(e => e.Eximdistfcref).HasColumnName("EXIMDISTFCREF");

                entity.Property(e => e.Eximdistlnref).HasColumnName("EXIMDISTLNREF");

                entity.Property(e => e.Eximinforef).HasColumnName("EXIMINFOREF");

                entity.Property(e => e.Impprice).HasColumnName("IMPPRICE");

                entity.Property(e => e.Isdistributed).HasColumnName("ISDISTRIBUTED");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Processnr).HasColumnName("PROCESSNR");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Srvtransref).HasColumnName("SRVTRANSREF");

                entity.Property(e => e.Staccref).HasColumnName("STACCREF");

                entity.Property(e => e.Stcenterref).HasColumnName("STCENTERREF");

                entity.Property(e => e.Sttransref).HasColumnName("STTRANSREF");

                entity.Property(e => e.Totalamnt).HasColumnName("TOTALAMNT");

                entity.Property(e => e.Unitprice).HasColumnName("UNITPRICE");

                entity.Property(e => e.Unitrpprice).HasColumnName("UNITRPPRICE");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Eximhistory>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EXIMHISTORY_I1");

                entity.ToTable("LG_001_01_EXIMHISTORY");

                entity.HasIndex(e => new { e.Eximinforef, e.Processnr }, "I001_01_EXIMHISTORY_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Eximinforef).HasColumnName("EXIMINFOREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Processnr).HasColumnName("PROCESSNR");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceref).HasColumnName("SOURCEREF");

                entity.Property(e => e.Sourcetype).HasColumnName("SOURCETYPE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Eximwhfc>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EXIMWHFC_I1");

                entity.ToTable("LG_001_01_EXIMWHFC");

                entity.HasIndex(e => new { e.Trcode, e.Ficheno }, "I001_01_EXIMWHFC_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Trcode, e.Date, e.Ftime, e.Ficheno }, "I001_01_EXIMWHFC_I3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Eximfileref, e.Eximprocnr }, "I001_01_EXIMWHFC_I4")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Accountedcnt).HasColumnName("ACCOUNTEDCNT");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Eisrvdsttyp).HasColumnName("EISRVDSTTYP");

                entity.Property(e => e.Eximfileref).HasColumnName("EXIMFILEREF");

                entity.Property(e => e.Eximprocnr).HasColumnName("EXIMPROCNR");

                entity.Property(e => e.Eximtotal).HasColumnName("EXIMTOTAL");

                entity.Property(e => e.Exptotal).HasColumnName("EXPTOTAL");

                entity.Property(e => e.Factory).HasColumnName("FACTORY");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Ficimpcurr).HasColumnName("FICIMPCURR");

                entity.Property(e => e.Ficimprate).HasColumnName("FICIMPRATE");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Genexctype).HasColumnName("GENEXCTYPE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Lineexctype).HasColumnName("LINEEXCTYPE");

                entity.Property(e => e.Nettotal).HasColumnName("NETTOTAL");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Shpagncod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("SHPAGNCOD");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");
            });

            modelBuilder.Entity<Lg00101Eximwhtran>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EXIMWHTRANS_I1");

                entity.ToTable("LG_001_01_EXIMWHTRANS");

                entity.HasIndex(e => new { e.Logicalref, e.Lineno }, "I001_01_EXIMWHTRANS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Adjpriceufrs).HasColumnName("ADJPRICEUFRS");

                entity.Property(e => e.Adjreppriceufrs).HasColumnName("ADJREPPRICEUFRS");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Avamount).HasColumnName("AVAMOUNT");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Destindex).HasColumnName("DESTINDEX");

                entity.Property(e => e.Detline).HasColumnName("DETLINE");

                entity.Property(e => e.Dstaccref).HasColumnName("DSTACCREF");

                entity.Property(e => e.Dstcenterref).HasColumnName("DSTCENTERREF");

                entity.Property(e => e.Dstexpaccref).HasColumnName("DSTEXPACCREF");

                entity.Property(e => e.Dstexpcenref).HasColumnName("DSTEXPCENREF");

                entity.Property(e => e.Eximfileref).HasColumnName("EXIMFILEREF");

                entity.Property(e => e.Eximprocnr).HasColumnName("EXIMPROCNR");

                entity.Property(e => e.Eximwhfcref).HasColumnName("EXIMWHFCREF");

                entity.Property(e => e.Factory).HasColumnName("FACTORY");

                entity.Property(e => e.Faregref).HasColumnName("FAREGREF");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Grossuinfo1).HasColumnName("GROSSUINFO1");

                entity.Property(e => e.Grossuinfo2).HasColumnName("GROSSUINFO2");

                entity.Property(e => e.Impcurr).HasColumnName("IMPCURR");

                entity.Property(e => e.Impprice).HasColumnName("IMPPRICE");

                entity.Property(e => e.Imprate).HasColumnName("IMPRATE");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Origincntrref).HasColumnName("ORIGINCNTRREF");

                entity.Property(e => e.Prcurr).HasColumnName("PRCURR");

                entity.Property(e => e.Prevlineno).HasColumnName("PREVLINENO");

                entity.Property(e => e.Prevlineref).HasColumnName("PREVLINEREF");

                entity.Property(e => e.Price).HasColumnName("PRICE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Prprice).HasColumnName("PRPRICE");

                entity.Property(e => e.Prrate).HasColumnName("PRRATE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Specode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Srcaccref).HasColumnName("SRCACCREF");

                entity.Property(e => e.Srccenterref).HasColumnName("SRCCENTERREF");

                entity.Property(e => e.Srcexpaccref).HasColumnName("SRCEXPACCREF");

                entity.Property(e => e.Srcexpcenref).HasColumnName("SRCEXPCENREF");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Unitexpense).HasColumnName("UNITEXPENSE");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Usref).HasColumnName("USREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg00101Extrainfo>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_EXTRAINFO_I1");

                entity.ToTable("LG_001_01_EXTRAINFO");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.DatStr1)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DAT_STR1");

                entity.Property(e => e.DatStr2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DAT_STR2");

                entity.Property(e => e.DatStr3)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DAT_STR3");

                entity.Property(e => e.DatStr4)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DAT_STR4");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Description)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Username)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("USERNAME");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");

                entity.Property(e => e.VarInt1).HasColumnName("VAR_INT1");

                entity.Property(e => e.VarInt10).HasColumnName("VAR_INT10");

                entity.Property(e => e.VarInt2).HasColumnName("VAR_INT2");

                entity.Property(e => e.VarInt3).HasColumnName("VAR_INT3");

                entity.Property(e => e.VarInt4).HasColumnName("VAR_INT4");

                entity.Property(e => e.VarInt5).HasColumnName("VAR_INT5");

                entity.Property(e => e.VarInt6).HasColumnName("VAR_INT6");

                entity.Property(e => e.VarInt7).HasColumnName("VAR_INT7");

                entity.Property(e => e.VarInt8).HasColumnName("VAR_INT8");

                entity.Property(e => e.VarInt9).HasColumnName("VAR_INT9");

                entity.Property(e => e.VarStr1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VAR_STR1");

                entity.Property(e => e.VarStr10)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VAR_STR10");

                entity.Property(e => e.VarStr2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VAR_STR2");

                entity.Property(e => e.VarStr3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VAR_STR3");

                entity.Property(e => e.VarStr4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VAR_STR4");

                entity.Property(e => e.VarStr5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VAR_STR5");

                entity.Property(e => e.VarStr6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VAR_STR6");

                entity.Property(e => e.VarStr7)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VAR_STR7");

                entity.Property(e => e.VarStr8)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VAR_STR8");

                entity.Property(e => e.VarStr9)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VAR_STR9");

                entity.Property(e => e.Wsnr).HasColumnName("WSNR");
            });

            modelBuilder.Entity<Lg00101Fcaccref>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_FCACCREF_I1");

                entity.ToTable("LG_001_01_FCACCREF");

                entity.HasIndex(e => e.Ficheref, "I001_01_FCACCREF_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Ovhdref).HasColumnName("OVHDREF");

                entity.Property(e => e.Ovhdtrantyp).HasColumnName("OVHDTRANTYP");

                entity.Property(e => e.Stref).HasColumnName("STREF");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg00101Ficheobject>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_FICHEOBJECT_I1");

                entity.ToTable("LG_001_01_FICHEOBJECT");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Fichetype).HasColumnName("FICHETYPE");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Objecttype).HasColumnName("OBJECTTYPE");
            });

            modelBuilder.Entity<Lg00101Folder>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_FOLDER_I1");

                entity.ToTable("LG_001_01_FOLDER");

                entity.HasIndex(e => e.Linetype, "I001_01_FOLDER_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Fpath)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("FPATH");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");
            });

            modelBuilder.Entity<Lg00101Gibaccfiche>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_GIBACCFICHE_I1");

                entity.ToTable("LG_001_01_GIBACCFICHE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Docdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDATE");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Genexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP");

                entity.Property(e => e.Gibclcardname)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("GIBCLCARDNAME");

                entity.Property(e => e.Gibclcardref).HasColumnName("GIBCLCARDREF");

                entity.Property(e => e.Gibclcardsurname)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("GIBCLCARDSURNAME");

                entity.Property(e => e.Gibclcardtype).HasColumnName("GIBCLCARDTYPE");

                entity.Property(e => e.Gibcountryref).HasColumnName("GIBCOUNTRYREF");

                entity.Property(e => e.Gibcreditcardtotal).HasColumnName("GIBCREDITCARDTOTAL");

                entity.Property(e => e.Gibdocrowno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("GIBDOCROWNO");

                entity.Property(e => e.Gibdocserialno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("GIBDOCSERIALNO");

                entity.Property(e => e.Gibdoctypref).HasColumnName("GIBDOCTYPREF");

                entity.Property(e => e.Gibid)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("GIBID");

                entity.Property(e => e.Gibstatus).HasColumnName("GIBSTATUS");

                entity.Property(e => e.Grosstotal).HasColumnName("GROSSTOTAL");

                entity.Property(e => e.Nettotal).HasColumnName("NETTOTAL");

                entity.Property(e => e.Periodicitydocref).HasColumnName("PERIODICITYDOCREF");

                entity.Property(e => e.Sourceficheref).HasColumnName("SOURCEFICHEREF");

                entity.Property(e => e.Sourcefichetype).HasColumnName("SOURCEFICHETYPE");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Totalactive).HasColumnName("TOTALACTIVE");

                entity.Property(e => e.Totalpassive).HasColumnName("TOTALPASSIVE");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Vattotal).HasColumnName("VATTOTAL");
            });

            modelBuilder.Entity<Lg00101Gibaccficheln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_GIBACCFICHELN_I1");

                entity.ToTable("LG_001_01_GIBACCFICHELN");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accref).HasColumnName("ACCREF");

                entity.Property(e => e.Faregref).HasColumnName("FAREGREF");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Gibcostid)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("GIBCOSTID");

                entity.Property(e => e.Gibcustextpayment).HasColumnName("GIBCUSTEXTPAYMENT");

                entity.Property(e => e.Gibcuststocktotal).HasColumnName("GIBCUSTSTOCKTOTAL");

                entity.Property(e => e.Gibcustvatmatrah).HasColumnName("GIBCUSTVATMATRAH");

                entity.Property(e => e.Gibexpsalesref).HasColumnName("GIBEXPSALESREF");

                entity.Property(e => e.Gibfaregexptypref).HasColumnName("GIBFAREGEXPTYPREF");

                entity.Property(e => e.Gibfaregsalesref).HasColumnName("GIBFAREGSALESREF");

                entity.Property(e => e.Gibfullexceptref).HasColumnName("GIBFULLEXCEPTREF");

                entity.Property(e => e.Gibid)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("GIBID");

                entity.Property(e => e.Gibincmtaxrate).HasColumnName("GIBINCMTAXRATE");

                entity.Property(e => e.Gibincmtaxref).HasColumnName("GIBINCMTAXREF");

                entity.Property(e => e.Gibincmtaxtotal).HasColumnName("GIBINCMTAXTOTAL");

                entity.Property(e => e.Giblinetypref).HasColumnName("GIBLINETYPREF");

                entity.Property(e => e.Gibotheroprref).HasColumnName("GIBOTHEROPRREF");

                entity.Property(e => e.Gibpartdeductrate).HasColumnName("GIBPARTDEDUCTRATE");

                entity.Property(e => e.Gibpartdeductref).HasColumnName("GIBPARTDEDUCTREF");

                entity.Property(e => e.Gibpartdeducttotal).HasColumnName("GIBPARTDEDUCTTOTAL");

                entity.Property(e => e.Gibpartexceptref).HasColumnName("GIBPARTEXCEPTREF");

                entity.Property(e => e.Gibpaymenttypref).HasColumnName("GIBPAYMENTTYPREF");

                entity.Property(e => e.Gibrectypref).HasColumnName("GIBRECTYPREF");

                entity.Property(e => e.Gibsalesquantity).HasColumnName("GIBSALESQUANTITY");

                entity.Property(e => e.Gibsubrectypref).HasColumnName("GIBSUBRECTYPREF");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenet).HasColumnName("LINENET");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Novat).HasColumnName("NOVAT");

                entity.Property(e => e.Parentperctygibid)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PARENTPERCTYGIBID");

                entity.Property(e => e.Periodicity).HasColumnName("PERIODICITY");

                entity.Property(e => e.Sign).HasColumnName("SIGN");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Vataccref).HasColumnName("VATACCREF");

                entity.Property(e => e.Vatcalcdiff).HasColumnName("VATCALCDIFF");

                entity.Property(e => e.Vatinclude).HasColumnName("VATINCLUDE");

                entity.Property(e => e.Vatrate).HasColumnName("VATRATE");

                entity.Property(e => e.Vattotal).HasColumnName("VATTOTAL");
            });

            modelBuilder.Entity<Lg00101Gntotbn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_GNTOTBN_I1");

                entity.ToTable("LG_001_01_GNTOTBN");

                entity.HasIndex(e => new { e.Cardref, e.Tottyp }, "I001_01_GNTOTBN_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Tottyp).HasColumnName("TOTTYP");
            });

            modelBuilder.Entity<Lg00101Gntotcl>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_GNTOTCL_I1");

                entity.ToTable("LG_001_01_GNTOTCL");

                entity.HasIndex(e => new { e.Cardref, e.Tottyp, e.Branch, e.Department }, "I001_01_GNTOTCL_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Tottyp).HasColumnName("TOTTYP");
            });

            modelBuilder.Entity<Lg00101Gntotcsh>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_GNTOTCSH_I1");

                entity.ToTable("LG_001_01_GNTOTCSH");

                entity.HasIndex(e => new { e.Cardref, e.Tottype }, "I001_01_GNTOTCSH_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Tottype).HasColumnName("TOTTYPE");
            });

            modelBuilder.Entity<Lg00101Gntotst>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_GNTOTST_I1");

                entity.ToTable("LG_001_01_GNTOTST");

                entity.HasIndex(e => new { e.Stockref, e.Invenno }, "I001_01_GNTOTST_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Invenno, e.Stockref }, "I001_01_GNTOTST_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Actotherin).HasColumnName("ACTOTHERIN");

                entity.Property(e => e.Actotherout).HasColumnName("ACTOTHEROUT");

                entity.Property(e => e.Actporder).HasColumnName("ACTPORDER");

                entity.Property(e => e.Actprodin).HasColumnName("ACTPRODIN");

                entity.Property(e => e.Actsorder).HasColumnName("ACTSORDER");

                entity.Property(e => e.Actwaste).HasColumnName("ACTWASTE");

                entity.Property(e => e.Actwhousein).HasColumnName("ACTWHOUSEIN");

                entity.Property(e => e.Actwhouseout).HasColumnName("ACTWHOUSEOUT");

                entity.Property(e => e.Avgcurrval).HasColumnName("AVGCURRVAL");

                entity.Property(e => e.Avgvalue).HasColumnName("AVGVALUE");

                entity.Property(e => e.Countadd).HasColumnName("COUNTADD");

                entity.Property(e => e.Countdec).HasColumnName("COUNTDEC");

                entity.Property(e => e.Distreserved).HasColumnName("DISTRESERVED");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Lasttrdate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTTRDATE");

                entity.Property(e => e.Onhand).HasColumnName("ONHAND");

                entity.Property(e => e.Onvehicle).HasColumnName("ONVEHICLE");

                entity.Property(e => e.Plnotherin).HasColumnName("PLNOTHERIN");

                entity.Property(e => e.Plnotherout).HasColumnName("PLNOTHEROUT");

                entity.Property(e => e.Plnprodin).HasColumnName("PLNPRODIN");

                entity.Property(e => e.Plnprodout).HasColumnName("PLNPRODOUT");

                entity.Property(e => e.Plnrsrvprodin).HasColumnName("PLNRSRVPRODIN");

                entity.Property(e => e.Plnrsrvprodout).HasColumnName("PLNRSRVPRODOUT");

                entity.Property(e => e.Plnrsrvwhousein).HasColumnName("PLNRSRVWHOUSEIN");

                entity.Property(e => e.Plnrsrvwhouseout).HasColumnName("PLNRSRVWHOUSEOUT");

                entity.Property(e => e.Plnwhousein).HasColumnName("PLNWHOUSEIN");

                entity.Property(e => e.Plnwhouseout).HasColumnName("PLNWHOUSEOUT");

                entity.Property(e => e.Puramnt).HasColumnName("PURAMNT");

                entity.Property(e => e.Purcash).HasColumnName("PURCASH");

                entity.Property(e => e.Purcurr).HasColumnName("PURCURR");

                entity.Property(e => e.Received).HasColumnName("RECEIVED");

                entity.Property(e => e.Reserved).HasColumnName("RESERVED");

                entity.Property(e => e.Salamnt).HasColumnName("SALAMNT");

                entity.Property(e => e.Salcash).HasColumnName("SALCASH");

                entity.Property(e => e.Salcurr).HasColumnName("SALCURR");

                entity.Property(e => e.Shipped).HasColumnName("SHIPPED");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Tempin).HasColumnName("TEMPIN");

                entity.Property(e => e.Tempout).HasColumnName("TEMPOUT");

                entity.Property(e => e.Transferred).HasColumnName("TRANSFERRED");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg00101Gntotvrnt>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_GNTOTVRNT_I1");

                entity.ToTable("LG_001_01_GNTOTVRNT");

                entity.HasIndex(e => new { e.Variantref, e.Invenno }, "I001_01_GNTOTVRNT_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Stockref, e.Variantref, e.Invenno }, "I001_01_GNTOTVRNT_I3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Invenno, e.Stockref, e.Variantref }, "I001_01_GNTOTVRNT_I4")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Actotherin).HasColumnName("ACTOTHERIN");

                entity.Property(e => e.Actotherout).HasColumnName("ACTOTHEROUT");

                entity.Property(e => e.Actporder).HasColumnName("ACTPORDER");

                entity.Property(e => e.Actprodin).HasColumnName("ACTPRODIN");

                entity.Property(e => e.Actsorder).HasColumnName("ACTSORDER");

                entity.Property(e => e.Actwaste).HasColumnName("ACTWASTE");

                entity.Property(e => e.Actwhousein).HasColumnName("ACTWHOUSEIN");

                entity.Property(e => e.Actwhouseout).HasColumnName("ACTWHOUSEOUT");

                entity.Property(e => e.Avgcurrval).HasColumnName("AVGCURRVAL");

                entity.Property(e => e.Avgvalue).HasColumnName("AVGVALUE");

                entity.Property(e => e.Countadd).HasColumnName("COUNTADD");

                entity.Property(e => e.Countdec).HasColumnName("COUNTDEC");

                entity.Property(e => e.Distreserved).HasColumnName("DISTRESERVED");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Lasttrdate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTTRDATE");

                entity.Property(e => e.Onhand).HasColumnName("ONHAND");

                entity.Property(e => e.Onvehicle).HasColumnName("ONVEHICLE");

                entity.Property(e => e.Plnotherin).HasColumnName("PLNOTHERIN");

                entity.Property(e => e.Plnotherout).HasColumnName("PLNOTHEROUT");

                entity.Property(e => e.Plnprodin).HasColumnName("PLNPRODIN");

                entity.Property(e => e.Plnprodout).HasColumnName("PLNPRODOUT");

                entity.Property(e => e.Plnrsrvprodin).HasColumnName("PLNRSRVPRODIN");

                entity.Property(e => e.Plnrsrvprodout).HasColumnName("PLNRSRVPRODOUT");

                entity.Property(e => e.Plnrsrvwhousein).HasColumnName("PLNRSRVWHOUSEIN");

                entity.Property(e => e.Plnrsrvwhouseout).HasColumnName("PLNRSRVWHOUSEOUT");

                entity.Property(e => e.Plnwhousein).HasColumnName("PLNWHOUSEIN");

                entity.Property(e => e.Plnwhouseout).HasColumnName("PLNWHOUSEOUT");

                entity.Property(e => e.Puramnt).HasColumnName("PURAMNT");

                entity.Property(e => e.Purcash).HasColumnName("PURCASH");

                entity.Property(e => e.Purcurr).HasColumnName("PURCURR");

                entity.Property(e => e.Received).HasColumnName("RECEIVED");

                entity.Property(e => e.Reserved).HasColumnName("RESERVED");

                entity.Property(e => e.Salamnt).HasColumnName("SALAMNT");

                entity.Property(e => e.Salcash).HasColumnName("SALCASH");

                entity.Property(e => e.Salcurr).HasColumnName("SALCURR");

                entity.Property(e => e.Shipped).HasColumnName("SHIPPED");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Tempin).HasColumnName("TEMPIN");

                entity.Property(e => e.Tempout).HasColumnName("TEMPOUT");

                entity.Property(e => e.Transferred).HasColumnName("TRANSFERRED");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg00101Guarantor>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_GUARANTOR_I1");

                entity.ToTable("LG_001_01_GUARANTOR");

                entity.HasIndex(e => new { e.Ficheref, e.Fichetype, e.Guarantornr }, "I001_01_GUARANTOR_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.Bankaccounts)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS");

                entity.Property(e => e.Bankbranchs)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.District)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Faxnr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("FAXNR");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Fichetype).HasColumnName("FICHETYPE");

                entity.Property(e => e.Gnamesurname)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("GNAMESURNAME");

                entity.Property(e => e.Guarantornr).HasColumnName("GUARANTORNR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Taxoffcode)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFFCODE");

                entity.Property(e => e.Taxoffice)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFFICE");

                entity.Property(e => e.Telnrs1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS1");

                entity.Property(e => e.Telnrs2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS2");

                entity.Property(e => e.Town)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TOWN");
            });

            modelBuilder.Entity<Lg00101History>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_HISTORY_I1");

                entity.ToTable("LG_001_01_HISTORY");

                entity.HasIndex(e => new { e.Tableid, e.Dataref, e.Logicalref }, "I001_01_HISTORY_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Modifieddate, e.Modifiedhour, e.Modifiedmin, e.Modifiedsec }, "I001_01_HISTORY_I3");

                entity.HasIndex(e => e.Dataguid, "I001_01_HISTORY_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Dataguid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("DATAGUID");

                entity.Property(e => e.Dataref).HasColumnName("DATAREF");

                entity.Property(e => e.Modifiedby).HasColumnName("MODIFIEDBY");

                entity.Property(e => e.Modifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFIEDDATE");

                entity.Property(e => e.Modifiedhour).HasColumnName("MODIFIEDHOUR");

                entity.Property(e => e.Modifiedmin).HasColumnName("MODIFIEDMIN");

                entity.Property(e => e.Modifiedsec).HasColumnName("MODIFIEDSEC");

                entity.Property(e => e.Modiftxt)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("MODIFTXT");

                entity.Property(e => e.Tableid).HasColumnName("TABLEID");

                entity.Property(e => e.Username)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("USERNAME");
            });

            modelBuilder.Entity<Lg00101Impsrvrel>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_IMPSRVREL_I1");

                entity.ToTable("LG_001_01_IMPSRVREL");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Disttype).HasColumnName("DISTTYPE");

                entity.Property(e => e.Invoiceref).HasColumnName("INVOICEREF");

                entity.Property(e => e.Srvcrdref).HasColumnName("SRVCRDREF");
            });

            modelBuilder.Entity<Lg00101Instalcard>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_INSTALCARD_I1");

                entity.ToTable("LG_001_01_INSTALCARD");

                entity.HasIndex(e => new { e.Fichetype, e.Ficheref }, "I001_01_INSTALCARD_I2");

                entity.HasIndex(e => e.Date, "I001_01_INSTALCARD_I3");

                entity.HasIndex(e => e.Duedate, "I001_01_INSTALCARD_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Devir).HasColumnName("DEVIR");

                entity.Property(e => e.Duedate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUEDATE");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Fichetype).HasColumnName("FICHETYPE");

                entity.Property(e => e.Guarantor1)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("GUARANTOR1");

                entity.Property(e => e.Guarantor2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("GUARANTOR2");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Instalno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("INSTALNO");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Return).HasColumnName("RETURN_");

                entity.Property(e => e.Serino)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SERINO");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Stamp).HasColumnName("STAMP");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Transfer).HasColumnName("TRANSFER");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Invenval>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_INVENVAL_I1");

                entity.ToTable("LG_001_01_INVENVAL");

                entity.HasIndex(e => e.Ficheno, "I001_01_INVENVAL_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Calcdate, "I001_01_INVENVAL_I3");

                entity.HasIndex(e => e.Branch, "I001_01_INVENVAL_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Calcdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CALCDATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Costmethod).HasColumnName("COSTMETHOD");

                entity.Property(e => e.Creditaccref).HasColumnName("CREDITACCREF");

                entity.Property(e => e.Crossaccref).HasColumnName("CROSSACCREF");

                entity.Property(e => e.Debitaccref).HasColumnName("DEBITACCREF");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Valuedec).HasColumnName("VALUEDEC");

                entity.Property(e => e.Valueinc).HasColumnName("VALUEINC");
            });

            modelBuilder.Entity<Lg00101Invenvalln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_INVENVALLN_I1");

                entity.ToTable("LG_001_01_INVENVALLN");

                entity.HasIndex(e => new { e.Batchref, e.Linenr }, "I001_01_INVENVALLN_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Batchref).HasColumnName("BATCHREF");

                entity.Property(e => e.Creditaccref).HasColumnName("CREDITACCREF");

                entity.Property(e => e.Debitaccref).HasColumnName("DEBITACCREF");

                entity.Property(e => e.Fifocost).HasColumnName("FIFOCOST");

                entity.Property(e => e.Invenamount).HasColumnName("INVENAMOUNT");

                entity.Property(e => e.Invenprice).HasColumnName("INVENPRICE");

                entity.Property(e => e.Inventotal).HasColumnName("INVENTOTAL");

                entity.Property(e => e.Invturnover).HasColumnName("INVTURNOVER");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lastsprice).HasColumnName("LASTSPRICE");

                entity.Property(e => e.Lifocost).HasColumnName("LIFOCOST");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Salesprice).HasColumnName("SALESPRICE");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Userprice).HasColumnName("USERPRICE");

                entity.Property(e => e.Usref).HasColumnName("USREF");

                entity.Property(e => e.Valuedec).HasColumnName("VALUEDEC");

                entity.Property(e => e.Valueinc).HasColumnName("VALUEINC");

                entity.Property(e => e.Valuetotal).HasColumnName("VALUETOTAL");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg00101Inveximinfo>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_INVEXIMINFO_I1");

                entity.ToTable("LG_001_01_INVEXIMINFO");

                entity.HasIndex(e => e.Eximfilecode, "I001_01_INVEXIMINFO_I2");

                entity.HasIndex(e => e.Eximfilename, "I001_01_INVEXIMINFO_I3");

                entity.HasIndex(e => e.Invoiceref, "I001_01_INVEXIMINFO_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Eximfilecode, e.Eximfctype, e.Filelinenr }, "I001_01_INVEXIMINFO_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bankrefnr)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKREFNR");

                entity.Property(e => e.Brbankref).HasColumnName("BRBANKREF");

                entity.Property(e => e.Capeunit).HasColumnName("CAPEUNIT");

                entity.Property(e => e.Closeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLOSEDDATE");

                entity.Property(e => e.Consultclref).HasColumnName("CONSULTCLREF");

                entity.Property(e => e.Countryref).HasColumnName("COUNTRYREF");

                entity.Property(e => e.Countrytype).HasColumnName("COUNTRYTYPE");

                entity.Property(e => e.Currcrepar).HasColumnName("CURRCREPAR");

                entity.Property(e => e.Currcreref).HasColumnName("CURRCREREF");

                entity.Property(e => e.Custdocdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CUSTDOCDATE");

                entity.Property(e => e.Custdocno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CUSTDOCNO");

                entity.Property(e => e.Customref).HasColumnName("CUSTOMREF");

                entity.Property(e => e.Eximfctype).HasColumnName("EXIMFCTYPE");

                entity.Property(e => e.Eximfilecode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EXIMFILECODE");

                entity.Property(e => e.Eximfilename)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EXIMFILENAME");

                entity.Property(e => e.Eximgrptype).HasColumnName("EXIMGRPTYPE");

                entity.Property(e => e.Expraaccref).HasColumnName("EXPRAACCREF");

                entity.Property(e => e.Expraccref).HasColumnName("EXPRACCREF");

                entity.Property(e => e.Expracntrref).HasColumnName("EXPRACNTRREF");

                entity.Property(e => e.Exprcntrref).HasColumnName("EXPRCNTRREF");

                entity.Property(e => e.Filelinenr).HasColumnName("FILELINENR");

                entity.Property(e => e.Filerefnr)
                    .HasMaxLength(24)
                    .IsUnicode(false)
                    .HasColumnName("FILEREFNR");

                entity.Property(e => e.Freezoneref).HasColumnName("FREEZONEREF");

                entity.Property(e => e.Freightclref).HasColumnName("FREIGHTCLREF");

                entity.Property(e => e.Gcbetgb).HasColumnName("GCBETGB");

                entity.Property(e => e.Invoiceref).HasColumnName("INVOICEREF");

                entity.Property(e => e.Notifyclref).HasColumnName("NOTIFYCLREF");

                entity.Property(e => e.Paytyperef).HasColumnName("PAYTYPEREF");

                entity.Property(e => e.Pckcodesref).HasColumnName("PCKCODESREF");

                entity.Property(e => e.Regtypref).HasColumnName("REGTYPREF");

                entity.Property(e => e.Resultdate).HasColumnName("RESULTDATE");

                entity.Property(e => e.Resultdate0)
                    .HasColumnType("datetime")
                    .HasColumnName("RESULTDATE0");

                entity.Property(e => e.Shpagnref).HasColumnName("SHPAGNREF");

                entity.Property(e => e.Shptypref).HasColumnName("SHPTYPREF");

                entity.Property(e => e.Totfreight).HasColumnName("TOTFREIGHT");

                entity.Property(e => e.Totinsurance).HasColumnName("TOTINSURANCE");

                entity.Property(e => e.Trnsexpdsttype).HasColumnName("TRNSEXPDSTTYPE");

                entity.Property(e => e.Vehicleno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("VEHICLENO");
            });

            modelBuilder.Entity<Lg00101Inveximline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_INVEXIMLINES_I1");

                entity.ToTable("LG_001_01_INVEXIMLINES");

                entity.HasIndex(e => new { e.Invoiceref, e.Sttransref }, "I001_01_INVEXIMLINES_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Sttransref, "I001_01_INVEXIMLINES_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Capeunit).HasColumnName("CAPEUNIT");

                entity.Property(e => e.Ciftotal).HasColumnName("CIFTOTAL");

                entity.Property(e => e.Countryref).HasColumnName("COUNTRYREF");

                entity.Property(e => e.Countrytype).HasColumnName("COUNTRYTYPE");

                entity.Property(e => e.Custdocdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CUSTDOCDATE");

                entity.Property(e => e.Custdocno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CUSTDOCNO");

                entity.Property(e => e.Customref).HasColumnName("CUSTOMREF");

                entity.Property(e => e.Diiblineref).HasColumnName("DIIBLINEREF");

                entity.Property(e => e.Diibpar).HasColumnName("DIIBPAR");

                entity.Property(e => e.Eximcreditref).HasColumnName("EXIMCREDITREF");

                entity.Property(e => e.Eximcrepar).HasColumnName("EXIMCREPAR");

                entity.Property(e => e.Fzoneoutdocno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("FZONEOUTDOCNO");

                entity.Property(e => e.Gtipcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("GTIPCODE");

                entity.Property(e => e.Invoiceref).HasColumnName("INVOICEREF");

                entity.Property(e => e.Linefreight).HasColumnName("LINEFREIGHT");

                entity.Property(e => e.Lineinsurance).HasColumnName("LINEINSURANCE");

                entity.Property(e => e.Origincntrref).HasColumnName("ORIGINCNTRREF");

                entity.Property(e => e.Pckcodesref).HasColumnName("PCKCODESREF");

                entity.Property(e => e.Prestatdocno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("PRESTATDOCNO");

                entity.Property(e => e.Prodclref).HasColumnName("PRODCLREF");

                entity.Property(e => e.Sttransref).HasColumnName("STTRANSREF");

                entity.Property(e => e.Taxrate1).HasColumnName("TAXRATE1");

                entity.Property(e => e.Taxrate2).HasColumnName("TAXRATE2");

                entity.Property(e => e.Taxrate3).HasColumnName("TAXRATE3");

                entity.Property(e => e.Taxrate4).HasColumnName("TAXRATE4");

                entity.Property(e => e.Taxrate5).HasColumnName("TAXRATE5");

                entity.Property(e => e.Tmpalineref).HasColumnName("TMPALINEREF");

                entity.Property(e => e.Tmpapar).HasColumnName("TMPAPAR");

                entity.Property(e => e.Tmparef).HasColumnName("TMPAREF");

                entity.Property(e => e.Tracknr)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("TRACKNR");
            });

            modelBuilder.Entity<Lg00101Invoice>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_INVOICE_I1");

                entity.ToTable("LG_001_01_INVOICE");

                entity.HasIndex(e => new { e.Date, e.Trcode, e.Ficheno }, "I001_01_INVOICE_I10");

                entity.HasIndex(e => new { e.Grpcode, e.Eximfctype }, "I001_01_INVOICE_I11");

                entity.HasIndex(e => new { e.Cancelled, e.Entrust }, "I001_01_INVOICE_I12");

                entity.HasIndex(e => new { e.Grpcode, e.Ficheno, e.Trcode }, "I001_01_INVOICE_I13");

                entity.HasIndex(e => e.Globalid, "I001_01_INVOICE_I14");

                entity.HasIndex(e => e.Guid, "I001_01_INVOICE_I15");

                entity.HasIndex(e => new { e.Trcode, e.Guid }, "I001_01_INVOICE_I16");

                entity.HasIndex(e => e.Bntransref, "I001_01_INVOICE_I17");

                entity.HasIndex(e => new { e.Grpcode, e.Trcode, e.Ficheno }, "I001_01_INVOICE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Grpcode, e.Date, e.Time, e.Trcode }, "I001_01_INVOICE_I3");

                entity.HasIndex(e => new { e.Trcode, e.Ficheno }, "I001_01_INVOICE_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Time, e.Trcode }, "I001_01_INVOICE_I5");

                entity.HasIndex(e => e.Accficheref, "I001_01_INVOICE_I6");

                entity.HasIndex(e => new { e.Clientref, e.Date, e.Time }, "I001_01_INVOICE_I7");

                entity.HasIndex(e => new { e.Salesmanref, e.Date, e.Time }, "I001_01_INVOICE_I8");

                entity.HasIndex(e => new { e.Grpcode, e.Clientref, e.Date, e.Time }, "I001_01_INVOICE_I9");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accepteinvpublic).HasColumnName("ACCEPTEINVPUBLIC");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Accountedcnt).HasColumnName("ACCOUNTEDCNT");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Adddiscounts).HasColumnName("ADDDISCOUNTS");

                entity.Property(e => e.Addexpaccref).HasColumnName("ADDEXPACCREF");

                entity.Property(e => e.Addexpcentref).HasColumnName("ADDEXPCENTREF");

                entity.Property(e => e.Addexpenses).HasColumnName("ADDEXPENSES");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Appcldeductlim).HasColumnName("APPCLDEDUCTLIM");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Ataxexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTCODE");

                entity.Property(e => e.Ataxexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTREASON");

                entity.Property(e => e.Bntransref).HasColumnName("BNTRANSREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Calcaddtaxvatsep).HasColumnName("CALCADDTAXVATSEP");

                entity.Property(e => e.Campaigncode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CAMPAIGNCODE");

                entity.Property(e => e.Canceldate)
                    .HasColumnType("datetime")
                    .HasColumnName("CANCELDATE");

                entity.Property(e => e.Canceldespsinv).HasColumnName("CANCELDESPSINV");

                entity.Property(e => e.Cancelexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("CANCELEXP");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cancelledacc).HasColumnName("CANCELLEDACC");

                entity.Property(e => e.Cancelledreflacc).HasColumnName("CANCELLEDREFLACC");

                entity.Property(e => e.Cantcrededuct).HasColumnName("CANTCREDEDUCT");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Controlinfo).HasColumnName("CONTROLINFO");

                entity.Property(e => e.Cosfcrefufrs).HasColumnName("COSFCREFUFRS");

                entity.Property(e => e.Costofsalefcref).HasColumnName("COSTOFSALEFCREF");

                entity.Property(e => e.Creditcardno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CREDITCARDNO");

                entity.Property(e => e.Creditcardnum)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CREDITCARDNUM");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Decprdiff).HasColumnName("DECPRDIFF");

                entity.Property(e => e.Deductionpart1).HasColumnName("DEDUCTIONPART1");

                entity.Property(e => e.Deductionpart2).HasColumnName("DEDUCTIONPART2");

                entity.Property(e => e.Delivercode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DELIVERCODE");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Devir).HasColumnName("DEVIR");

                entity.Property(e => e.Distadjpriceufrs).HasColumnName("DISTADJPRICEUFRS");

                entity.Property(e => e.Distexpense).HasColumnName("DISTEXPENSE");

                entity.Property(e => e.Distorderref).HasColumnName("DISTORDERREF");

                entity.Property(e => e.Dlvclient).HasColumnName("DLVCLIENT");

                entity.Property(e => e.Docdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDATE");

                entity.Property(e => e.Docdetail).HasColumnName("DOCDETAIL");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Doctrackingnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("DOCTRACKINGNR");

                entity.Property(e => e.Edescription)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EDESCRIPTION");

                entity.Property(e => e.Eduration).HasColumnName("EDURATION");

                entity.Property(e => e.Edurationtype).HasColumnName("EDURATIONTYPE");

                entity.Property(e => e.Eenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("EENDDATE");

                entity.Property(e => e.Einvoice).HasColumnName("EINVOICE");

                entity.Property(e => e.Einvoicetyp).HasColumnName("EINVOICETYP");

                entity.Property(e => e.Electdoc).HasColumnName("ELECTDOC");

                entity.Property(e => e.Entegset).HasColumnName("ENTEGSET");

                entity.Property(e => e.Entrust).HasColumnName("ENTRUST");

                entity.Property(e => e.Esenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ESENDDATE");

                entity.Property(e => e.Estartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("ESTARTDATE");

                entity.Property(e => e.Estatus).HasColumnName("ESTATUS");

                entity.Property(e => e.Exaccounted).HasColumnName("EXACCOUNTED");

                entity.Property(e => e.Eximfctype).HasColumnName("EXIMFCTYPE");

                entity.Property(e => e.Eximvat).HasColumnName("EXIMVAT");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Frgtypcod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FRGTYPCOD");

                entity.Property(e => e.Frgtypdesc)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("FRGTYPDESC");

                entity.Property(e => e.Frombank).HasColumnName("FROMBANK");

                entity.Property(e => e.Fromexchdiff).HasColumnName("FROMEXCHDIFF");

                entity.Property(e => e.Fromexim).HasColumnName("FROMEXIM");

                entity.Property(e => e.Fromintegtype).HasColumnName("FROMINTEGTYPE");

                entity.Property(e => e.Fromkasa).HasColumnName("FROMKASA");

                entity.Property(e => e.Fromleasing).HasColumnName("FROMLEASING");

                entity.Property(e => e.Fromordwithpay).HasColumnName("FROMORDWITHPAY");

                entity.Property(e => e.Fromstaffotherex).HasColumnName("FROMSTAFFOTHEREX");

                entity.Property(e => e.Futmnthyrexpinc).HasColumnName("FUTMNTHYREXPINC");

                entity.Property(e => e.Genexctyp).HasColumnName("GENEXCTYP");

                entity.Property(e => e.Genexp1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP1");

                entity.Property(e => e.Genexp2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP2");

                entity.Property(e => e.Genexp3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP3");

                entity.Property(e => e.Genexp4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP4");

                entity.Property(e => e.Genexp5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP5");

                entity.Property(e => e.Genexp6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP6");

                entity.Property(e => e.Gibaccficheref).HasColumnName("GIBACCFICHEREF");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Grosstotal).HasColumnName("GROSSTOTAL");

                entity.Property(e => e.Grpcode).HasColumnName("GRPCODE");

                entity.Property(e => e.Grpfirmtrans).HasColumnName("GRPFIRMTRANS");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Gvatinc).HasColumnName("GVATINC");

                entity.Property(e => e.Ineffectivecost).HasColumnName("INEFFECTIVECOST");

                entity.Property(e => e.Infidx).HasColumnName("INFIDX");

                entity.Property(e => e.Insteadofdesp).HasColumnName("INSTEADOFDESP");

                entity.Property(e => e.Interestapp).HasColumnName("INTERESTAPP");

                entity.Property(e => e.Kastransref).HasColumnName("KASTRANSREF");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Markref).HasColumnName("MARKREF");

                entity.Property(e => e.Nettotal).HasColumnName("NETTOTAL");

                entity.Property(e => e.Nocalculate).HasColumnName("NOCALCULATE");

                entity.Property(e => e.Notifycrdref).HasColumnName("NOTIFYCRDREF");

                entity.Property(e => e.Offerref).HasColumnName("OFFERREF");

                entity.Property(e => e.Okcfiche).HasColumnName("OKCFICHE");

                entity.Property(e => e.Onlyonepayline).HasColumnName("ONLYONEPAYLINE");

                entity.Property(e => e.Opstat).HasColumnName("OPSTAT");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Paidincash).HasColumnName("PAIDINCASH");

                entity.Property(e => e.Passportno)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("PASSPORTNO");

                entity.Property(e => e.Paydefref).HasColumnName("PAYDEFREF");

                entity.Property(e => e.Paymenttype).HasColumnName("PAYMENTTYPE");

                entity.Property(e => e.Postransferinfo).HasColumnName("POSTRANSFERINFO");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Profileid).HasColumnName("PROFILEID");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Publicbnaccref).HasColumnName("PUBLICBNACCREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Recvref).HasColumnName("RECVREF");

                entity.Property(e => e.Reflaccficheref).HasColumnName("REFLACCFICHEREF");

                entity.Property(e => e.Reflected).HasColumnName("REFLECTED");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Sendcnt).HasColumnName("SENDCNT");

                entity.Property(e => e.Serialcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SERIALCODE");

                entity.Property(e => e.Shipinforef).HasColumnName("SHIPINFOREF");

                entity.Property(e => e.Shpagncod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("SHPAGNCOD");

                entity.Property(e => e.Shptypcod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("SHPTYPCOD");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourcecostgrp).HasColumnName("SOURCECOSTGRP");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Taxfreechx).HasColumnName("TAXFREECHX");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Totaladdtax).HasColumnName("TOTALADDTAX");

                entity.Property(e => e.Totaldepozito).HasColumnName("TOTALDEPOZITO");

                entity.Property(e => e.Totaldiscounted).HasColumnName("TOTALDISCOUNTED");

                entity.Property(e => e.Totaldiscounts).HasColumnName("TOTALDISCOUNTS");

                entity.Property(e => e.Totalexaddtax).HasColumnName("TOTALEXADDTAX");

                entity.Property(e => e.Totalexpenses).HasColumnName("TOTALEXPENSES");

                entity.Property(e => e.Totalpromotions).HasColumnName("TOTALPROMOTIONS");

                entity.Property(e => e.Totalservices).HasColumnName("TOTALSERVICES");

                entity.Property(e => e.Totalvat).HasColumnName("TOTALVAT");

                entity.Property(e => e.Tracknr)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("TRACKNR");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Typecode)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TYPECODE");

                entity.Property(e => e.Undoexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("UNDOEXP");

                entity.Property(e => e.Vat).HasColumnName("VAT");

                entity.Property(e => e.Vatexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTCODE");

                entity.Property(e => e.Vatexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTREASON");

                entity.Property(e => e.Vatincgross).HasColumnName("VATINCGROSS");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Invoiceexch>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_INVOICEEXCH_I1");

                entity.ToTable("LG_001_01_INVOICEEXCH");

                entity.HasIndex(e => e.Ficheref, "I001_01_INVOICEEXCH_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Adddiscountsx).HasColumnName("ADDDISCOUNTSX");

                entity.Property(e => e.Addexpensesvatx).HasColumnName("ADDEXPENSESVATX");

                entity.Property(e => e.Addexpensesx).HasColumnName("ADDEXPENSESX");

                entity.Property(e => e.Bagkurx).HasColumnName("BAGKURX");

                entity.Property(e => e.Borsax).HasColumnName("BORSAX");

                entity.Property(e => e.Distexpensex).HasColumnName("DISTEXPENSEX");

                entity.Property(e => e.Ek1x).HasColumnName("EK1X");

                entity.Property(e => e.Ek2x).HasColumnName("EK2X");

                entity.Property(e => e.Ek3x).HasColumnName("EK3X");

                entity.Property(e => e.Ek4x).HasColumnName("EK4X");

                entity.Property(e => e.Ek5x).HasColumnName("EK5X");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Grosstotalx).HasColumnName("GROSSTOTALX");

                entity.Property(e => e.Komisyonx).HasColumnName("KOMISYONX");

                entity.Property(e => e.Komkdvx).HasColumnName("KOMKDVX");

                entity.Property(e => e.Ssdfx).HasColumnName("SSDFX");

                entity.Property(e => e.Stopajx).HasColumnName("STOPAJX");

                entity.Property(e => e.Totaladdtaxx).HasColumnName("TOTALADDTAXX");

                entity.Property(e => e.Totaldepozitox).HasColumnName("TOTALDEPOZITOX");

                entity.Property(e => e.Totaldiscountedx).HasColumnName("TOTALDISCOUNTEDX");

                entity.Property(e => e.Totaldiscountsx).HasColumnName("TOTALDISCOUNTSX");

                entity.Property(e => e.Totalexaddtaxx).HasColumnName("TOTALEXADDTAXX");

                entity.Property(e => e.Totalexpensesvatx).HasColumnName("TOTALEXPENSESVATX");

                entity.Property(e => e.Totalexpensesx).HasColumnName("TOTALEXPENSESX");

                entity.Property(e => e.Totalpromotionsx).HasColumnName("TOTALPROMOTIONSX");

                entity.Property(e => e.Totalservicesx).HasColumnName("TOTALSERVICESX");

                entity.Property(e => e.Totalvatx).HasColumnName("TOTALVATX");

                entity.Property(e => e.Vatincgrossx).HasColumnName("VATINCGROSSX");
            });

            modelBuilder.Entity<Lg00101Invoiceintel>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_INVOICEINTEL_I1");

                entity.ToTable("LG_001_01_INVOICEINTEL");

                entity.HasIndex(e => e.Invoiceref, "I001_01_INVOICEINTEL_I2");

                entity.HasIndex(e => e.Clientref, "I001_01_INVOICEINTEL_I3");

                entity.HasIndex(e => new { e.Invoiceref, e.Linenum }, "I001_01_INVOICEINTEL_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Inteldesc)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INTELDESC");

                entity.Property(e => e.Invoiceinfo1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INVOICEINFO1");

                entity.Property(e => e.Invoiceinfo10)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INVOICEINFO10");

                entity.Property(e => e.Invoiceinfo2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INVOICEINFO2");

                entity.Property(e => e.Invoiceinfo3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INVOICEINFO3");

                entity.Property(e => e.Invoiceinfo4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INVOICEINFO4");

                entity.Property(e => e.Invoiceinfo5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INVOICEINFO5");

                entity.Property(e => e.Invoiceinfo6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INVOICEINFO6");

                entity.Property(e => e.Invoiceinfo7)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INVOICEINFO7");

                entity.Property(e => e.Invoiceinfo8)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INVOICEINFO8");

                entity.Property(e => e.Invoiceinfo9)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INVOICEINFO9");

                entity.Property(e => e.Invoiceref).HasColumnName("INVOICEREF");

                entity.Property(e => e.Linenum).HasColumnName("LINENUM");
            });

            modelBuilder.Entity<Lg00101Itmwstot>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_ITMWSTOT_I1");

                entity.ToTable("LG_001_01_ITMWSTOT");

                entity.HasIndex(e => new { e.Itemref, e.Wsref }, "I001_01_ITMWSTOT_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Actotherin).HasColumnName("ACTOTHERIN");

                entity.Property(e => e.Actotherout).HasColumnName("ACTOTHEROUT");

                entity.Property(e => e.Actprodin).HasColumnName("ACTPRODIN");

                entity.Property(e => e.Actprodout).HasColumnName("ACTPRODOUT");

                entity.Property(e => e.Actwhousein).HasColumnName("ACTWHOUSEIN");

                entity.Property(e => e.Actwhouseout).HasColumnName("ACTWHOUSEOUT");

                entity.Property(e => e.Avgcurrval).HasColumnName("AVGCURRVAL");

                entity.Property(e => e.Avgvalue).HasColumnName("AVGVALUE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lasttrdate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTTRDATE");

                entity.Property(e => e.Onhand).HasColumnName("ONHAND");

                entity.Property(e => e.Plnotherin).HasColumnName("PLNOTHERIN");

                entity.Property(e => e.Plnotherout).HasColumnName("PLNOTHEROUT");

                entity.Property(e => e.Plnprodin).HasColumnName("PLNPRODIN");

                entity.Property(e => e.Plnprodout).HasColumnName("PLNPRODOUT");

                entity.Property(e => e.Plnwhousein).HasColumnName("PLNWHOUSEIN");

                entity.Property(e => e.Plnwhouseout).HasColumnName("PLNWHOUSEOUT");

                entity.Property(e => e.Transferred).HasColumnName("TRANSFERRED");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg00101Journal>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_JOURNAL_I1");

                entity.ToTable("LG_001_01_JOURNAL");

                entity.HasIndex(e => new { e.Branchnr, e.Lstjndate, e.Lstjnumber }, "I001_01_JOURNAL_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Branchnr).HasColumnName("BRANCHNR");

                entity.Property(e => e.Lstjndate).HasColumnName("LSTJNDATE");

                entity.Property(e => e.Lstjnumber).HasColumnName("LSTJNUMBER");
            });

            modelBuilder.Entity<Lg00101Ksdistdetline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_KSDISTDETLINES_I1");

                entity.ToTable("LG_001_01_KSDISTDETLINES");

                entity.HasIndex(e => e.Cashtransref, "I001_01_KSDISTDETLINES_I2");

                entity.HasIndex(e => new { e.Centerref, e.Date, e.Sign }, "I001_01_KSDISTDETLINES_I3");

                entity.HasIndex(e => new { e.Projectref, e.Date, e.Sign }, "I001_01_KSDISTDETLINES_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accref).HasColumnName("ACCREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Cashtransref).HasColumnName("CASHTRANSREF");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Csdisttempline).HasColumnName("CSDISTTEMPLINE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Distrate).HasColumnName("DISTRATE");

                entity.Property(e => e.Disttemplntyp).HasColumnName("DISTTEMPLNTYP");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Sign).HasColumnName("SIGN");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Ksline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_KSLINES_I1");

                entity.ToTable("LG_001_01_KSLINES");

                entity.HasIndex(e => e.Guid, "I001_01_KSLINES_I10");

                entity.HasIndex(e => new { e.Cardref, e.Date, e.Hour, e.Minute, e.Ficheno }, "I001_01_KSLINES_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardref, e.Ficheno }, "I001_01_KSLINES_I3")
                    .IsUnique();

                entity.HasIndex(e => e.Transref, "I001_01_KSLINES_I4");

                entity.HasIndex(e => e.Sign, "I001_01_KSLINES_I5");

                entity.HasIndex(e => e.Accficheref, "I001_01_KSLINES_I6");

                entity.HasIndex(e => new { e.Trangrpno, e.Trangrplineno }, "I001_01_KSLINES_I7");

                entity.HasIndex(e => new { e.Tranno, e.Trcode }, "I001_01_KSLINES_I8");

                entity.HasIndex(e => e.Ficheno, "I001_01_KSLINES_I9");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Accref).HasColumnName("ACCREF");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectcost).HasColumnName("AFFECTCOST");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Brutamount).HasColumnName("BRUTAMOUNT");

                entity.Property(e => e.Brutamountrep).HasColumnName("BRUTAMOUNTREP");

                entity.Property(e => e.Brutamounttr).HasColumnName("BRUTAMOUNTTR");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cancelledacc).HasColumnName("CANCELLEDACC");

                entity.Property(e => e.Cancelledreflacc).HasColumnName("CANCELLEDREFLACC");

                entity.Property(e => e.Candeduct).HasColumnName("CANDEDUCT");

                entity.Property(e => e.Cantcrededuct).HasColumnName("CANTCREDEDUCT");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Cashaccref).HasColumnName("CASHACCREF");

                entity.Property(e => e.Cashcenref).HasColumnName("CASHCENREF");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Cltrcurr).HasColumnName("CLTRCURR");

                entity.Property(e => e.Cltrnet).HasColumnName("CLTRNET");

                entity.Property(e => e.Cltrrate).HasColumnName("CLTRRATE");

                entity.Property(e => e.Crcardwzd).HasColumnName("CRCARDWZD");

                entity.Property(e => e.Csaccref).HasColumnName("CSACCREF");

                entity.Property(e => e.Cscenterref).HasColumnName("CSCENTERREF");

                entity.Property(e => e.Cstransref).HasColumnName("CSTRANSREF");

                entity.Property(e => e.Custtitle)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CUSTTITLE");

                entity.Property(e => e.Custtitle2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CUSTTITLE2");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Deductcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DEDUCTCODE");

                entity.Property(e => e.Deductionpart1).HasColumnName("DEDUCTIONPART1");

                entity.Property(e => e.Deductionpart2).HasColumnName("DEDUCTIONPART2");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Destbranch).HasColumnName("DESTBRANCH");

                entity.Property(e => e.Destdepartment).HasColumnName("DESTDEPARTMENT");

                entity.Property(e => e.Docdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDATE");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Eidistflnnr).HasColumnName("EIDISTFLNNR");

                entity.Property(e => e.Einvoice).HasColumnName("EINVOICE");

                entity.Property(e => e.Eisrvdsttyp).HasColumnName("EISRVDSTTYP");

                entity.Property(e => e.Electdoc).HasColumnName("ELECTDOC");

                entity.Property(e => e.Emflineref).HasColumnName("EMFLINEREF");

                entity.Property(e => e.Eximdisttyp).HasColumnName("EXIMDISTTYP");

                entity.Property(e => e.Eximfileref).HasColumnName("EXIMFILEREF");

                entity.Property(e => e.Eximprocnr).HasColumnName("EXIMPROCNR");

                entity.Property(e => e.Eximtype).HasColumnName("EXIMTYPE");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Genexctyp).HasColumnName("GENEXCTYP");

                entity.Property(e => e.Gibaccficheref).HasColumnName("GIBACCFICHEREF");

                entity.Property(e => e.Gpaddr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GPADDR");

                entity.Property(e => e.Gpfundacc).HasColumnName("GPFUNDACC");

                entity.Property(e => e.Gpfundsharerat).HasColumnName("GPFUNDSHARERAT");

                entity.Property(e => e.Gpincometacrat).HasColumnName("GPINCOMETACRAT");

                entity.Property(e => e.Gpoptype).HasColumnName("GPOPTYPE");

                entity.Property(e => e.Gpplate)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("GPPLATE");

                entity.Property(e => e.Gptaxacc).HasColumnName("GPTAXACC");

                entity.Property(e => e.Grpfirmtrans).HasColumnName("GRPFIRMTRANS");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Hour).HasColumnName("HOUR_");

                entity.Property(e => e.Incdeductamnt).HasColumnName("INCDEDUCTAMNT");

                entity.Property(e => e.Infidx).HasColumnName("INFIDX");

                entity.Property(e => e.Isperscomp).HasColumnName("ISPERSCOMP");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Minute).HasColumnName("MINUTE_");

                entity.Property(e => e.Netamount).HasColumnName("NETAMOUNT");

                entity.Property(e => e.Netamountrep).HasColumnName("NETAMOUNTREP");

                entity.Property(e => e.Netamounttr).HasColumnName("NETAMOUNTTR");

                entity.Property(e => e.Notifycrdref).HasColumnName("NOTIFYCRDREF");

                entity.Property(e => e.Offerref).HasColumnName("OFFERREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reflaccficheref).HasColumnName("REFLACCFICHEREF");

                entity.Property(e => e.Reflected).HasColumnName("REFLECTED");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Servreasondef)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("SERVREASONDEF");

                entity.Property(e => e.Sign).HasColumnName("SIGN");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Smmdocode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("SMMDOCODE");

                entity.Property(e => e.Smmserialcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SMMSERIALCODE");

                entity.Property(e => e.Smmvatacref).HasColumnName("SMMVATACREF");

                entity.Property(e => e.Smmvatcentref).HasColumnName("SMMVATCENTREF");

                entity.Property(e => e.Smmvatrate).HasColumnName("SMMVATRATE");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Tckno)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("TCKNO");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Trangrplineno).HasColumnName("TRANGRPLINENO");

                entity.Property(e => e.Trangrpno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRANGRPNO");

                entity.Property(e => e.Tranno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRANNO");

                entity.Property(e => e.Transref).HasColumnName("TRANSREF");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Typecode)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("TYPECODE");

                entity.Property(e => e.Underdeductlimit).HasColumnName("UNDERDEDUCTLIMIT");

                entity.Property(e => e.Vataccref).HasColumnName("VATACCREF");

                entity.Property(e => e.Vatdeductaccref).HasColumnName("VATDEDUCTACCREF");

                entity.Property(e => e.Vatdeductcenref).HasColumnName("VATDEDUCTCENREF");

                entity.Property(e => e.Vatdeductothaccref).HasColumnName("VATDEDUCTOTHACCREF");

                entity.Property(e => e.Vatdeductothcenref).HasColumnName("VATDEDUCTOTHCENREF");

                entity.Property(e => e.Vatdeductrate).HasColumnName("VATDEDUCTRATE");

                entity.Property(e => e.Vatinc).HasColumnName("VATINC");

                entity.Property(e => e.Vatrat).HasColumnName("VATRAT");

                entity.Property(e => e.Vattot).HasColumnName("VATTOT");

                entity.Property(e => e.Vcardref).HasColumnName("VCARDREF");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Label>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_LABELS_I1");

                entity.ToTable("LG_001_01_LABELS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Labeldef)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("LABELDEF");

                entity.Property(e => e.Labelname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("LABELNAME");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Recordref).HasColumnName("RECORDREF");

                entity.Property(e => e.Recordtype).HasColumnName("RECORDTYPE");

                entity.Property(e => e.Usertype).HasColumnName("USERTYPE");
            });

            modelBuilder.Entity<Lg00101Ldxrecdelreq>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_LDXRECDELREQ_I1");

                entity.ToTable("LG_001_01_LDXRECDELREQ");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Arplid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ARPLID");

                entity.Property(e => e.Docauxcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("DOCAUXCODE");

                entity.Property(e => e.Docdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDATE");

                entity.Property(e => e.Docdesc)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DOCDESC");

                entity.Property(e => e.Docnumber)
                    .HasMaxLength(26)
                    .IsUnicode(false)
                    .HasColumnName("DOCNUMBER");

                entity.Property(e => e.Docref).HasColumnName("DOCREF");

                entity.Property(e => e.Doctrcode).HasColumnName("DOCTRCODE");

                entity.Property(e => e.Doctype).HasColumnName("DOCTYPE");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Param1).HasColumnName("PARAM1");

                entity.Property(e => e.Param2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("PARAM2");

                entity.Property(e => e.Param3).HasColumnName("PARAM3");

                entity.Property(e => e.Param4)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("PARAM4");
            });

            modelBuilder.Entity<Lg00101Mbscrmrelp>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_MBSCRMRELP_I1");

                entity.ToTable("LG_001_01_MBSCRMRELP");

                entity.HasIndex(e => new { e.Logoref, e.Rectype }, "I001_01_MBSCRMRELP_I2");

                entity.HasIndex(e => new { e.Crmguid, e.Rectype }, "I001_01_MBSCRMRELP_I3");

                entity.HasIndex(e => e.Rectype, "I001_01_MBSCRMRELP_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Crmcreateddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CRMCREATEDDATE");

                entity.Property(e => e.Crmcreatedhour).HasColumnName("CRMCREATEDHOUR");

                entity.Property(e => e.Crmcreatedmin).HasColumnName("CRMCREATEDMIN");

                entity.Property(e => e.Crmcreatedsec).HasColumnName("CRMCREATEDSEC");

                entity.Property(e => e.Crmguid)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("CRMGUID");

                entity.Property(e => e.Crmmodifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CRMMODIFIEDDATE");

                entity.Property(e => e.Crmmodifiedhour).HasColumnName("CRMMODIFIEDHOUR");

                entity.Property(e => e.Crmmodifiedmin).HasColumnName("CRMMODIFIEDMIN");

                entity.Property(e => e.Crmmodifiedsec).HasColumnName("CRMMODIFIEDSEC");

                entity.Property(e => e.Logocreateddate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOGOCREATEDDATE");

                entity.Property(e => e.Logocreatedhour).HasColumnName("LOGOCREATEDHOUR");

                entity.Property(e => e.Logocreatedmin).HasColumnName("LOGOCREATEDMIN");

                entity.Property(e => e.Logocreatedsec).HasColumnName("LOGOCREATEDSEC");

                entity.Property(e => e.Logomodifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOGOMODIFIEDDATE");

                entity.Property(e => e.Logomodifiedhour).HasColumnName("LOGOMODIFIEDHOUR");

                entity.Property(e => e.Logomodifiedmin).HasColumnName("LOGOMODIFIEDMIN");

                entity.Property(e => e.Logomodifiedsec).HasColumnName("LOGOMODIFIEDSEC");

                entity.Property(e => e.Logoref).HasColumnName("LOGOREF");

                entity.Property(e => e.Rectype).HasColumnName("RECTYPE");
            });

            modelBuilder.Entity<Lg00101Multiaddtaxln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_MULTIADDTAXLN_I1");

                entity.ToTable("LG_001_01_MULTIADDTAXLN");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addtaxaccref).HasColumnName("ADDTAXACCREF");

                entity.Property(e => e.Addtaxamntisupd).HasColumnName("ADDTAXAMNTISUPD");

                entity.Property(e => e.Addtaxamount).HasColumnName("ADDTAXAMOUNT");

                entity.Property(e => e.Addtaxamountx).HasColumnName("ADDTAXAMOUNTX");

                entity.Property(e => e.Addtaxcenterref).HasColumnName("ADDTAXCENTERREF");

                entity.Property(e => e.Addtaxconvfact).HasColumnName("ADDTAXCONVFACT");

                entity.Property(e => e.Addtaxconvfactx).HasColumnName("ADDTAXCONVFACTX");

                entity.Property(e => e.Addtaxdiscamount).HasColumnName("ADDTAXDISCAMOUNT");

                entity.Property(e => e.Addtaxdiscamountx).HasColumnName("ADDTAXDISCAMOUNTX");

                entity.Property(e => e.Addtaxrate).HasColumnName("ADDTAXRATE");

                entity.Property(e => e.Addtaxref).HasColumnName("ADDTAXREF");

                entity.Property(e => e.Addtaxvatmatrah).HasColumnName("ADDTAXVATMATRAH");

                entity.Property(e => e.Addtaxvatmatrahx).HasColumnName("ADDTAXVATMATRAHX");

                entity.Property(e => e.Exaddtaxamnt).HasColumnName("EXADDTAXAMNT");

                entity.Property(e => e.Exaddtaxamntx).HasColumnName("EXADDTAXAMNTX");

                entity.Property(e => e.Exaddtaxaref).HasColumnName("EXADDTAXAREF");

                entity.Property(e => e.Exaddtaxconvf).HasColumnName("EXADDTAXCONVF");

                entity.Property(e => e.Exaddtaxconvfx).HasColumnName("EXADDTAXCONVFX");

                entity.Property(e => e.Exaddtaxcref).HasColumnName("EXADDTAXCREF");

                entity.Property(e => e.Exaddtaxrate).HasColumnName("EXADDTAXRATE");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Fichetype).HasColumnName("FICHETYPE");

                entity.Property(e => e.Lineref).HasColumnName("LINEREF");

                entity.Property(e => e.Othraddtaxaref).HasColumnName("OTHRADDTAXAREF");

                entity.Property(e => e.Othraddtaxcref).HasColumnName("OTHRADDTAXCREF");

                entity.Property(e => e.Vatmatrah).HasColumnName("VATMATRAH");
            });

            modelBuilder.Entity<Lg00101Okcinfo>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_OKCINFO_I1");

                entity.ToTable("LG_001_01_OKCINFO");

                entity.HasIndex(e => e.Invoiceref, "I001_01_OKCINFO_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Fichenumber)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("FICHENUMBER");

                entity.Property(e => e.Fichetype).HasColumnName("FICHETYPE");

                entity.Property(e => e.Fixedvalue)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("FIXEDVALUE");

                entity.Property(e => e.Invoiceref).HasColumnName("INVOICEREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Serialnumber)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SERIALNUMBER");

                entity.Property(e => e.Stfref).HasColumnName("STFREF");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Znumber)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ZNUMBER");
            });

            modelBuilder.Entity<Lg00101Ordfexch>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_ORDFEXCH_I1");

                entity.ToTable("LG_001_01_ORDFEXCH");

                entity.HasIndex(e => e.Ficheref, "I001_01_ORDFEXCH_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Adddiscountsx).HasColumnName("ADDDISCOUNTSX");

                entity.Property(e => e.Addexpensesvatx).HasColumnName("ADDEXPENSESVATX");

                entity.Property(e => e.Addexpensesx).HasColumnName("ADDEXPENSESX");

                entity.Property(e => e.Bagkurx).HasColumnName("BAGKURX");

                entity.Property(e => e.Borsax).HasColumnName("BORSAX");

                entity.Property(e => e.Distexpensex).HasColumnName("DISTEXPENSEX");

                entity.Property(e => e.Ek1x).HasColumnName("EK1X");

                entity.Property(e => e.Ek2x).HasColumnName("EK2X");

                entity.Property(e => e.Ek3x).HasColumnName("EK3X");

                entity.Property(e => e.Ek4x).HasColumnName("EK4X");

                entity.Property(e => e.Ek5x).HasColumnName("EK5X");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Grosstotalx).HasColumnName("GROSSTOTALX");

                entity.Property(e => e.Komisyonx).HasColumnName("KOMISYONX");

                entity.Property(e => e.Komkdvx).HasColumnName("KOMKDVX");

                entity.Property(e => e.Ssdfx).HasColumnName("SSDFX");

                entity.Property(e => e.Stopajx).HasColumnName("STOPAJX");

                entity.Property(e => e.Totaladdtaxx).HasColumnName("TOTALADDTAXX");

                entity.Property(e => e.Totaldepozitox).HasColumnName("TOTALDEPOZITOX");

                entity.Property(e => e.Totaldiscountedx).HasColumnName("TOTALDISCOUNTEDX");

                entity.Property(e => e.Totaldiscountsx).HasColumnName("TOTALDISCOUNTSX");

                entity.Property(e => e.Totalexaddtaxx).HasColumnName("TOTALEXADDTAXX");

                entity.Property(e => e.Totalexpensesvatx).HasColumnName("TOTALEXPENSESVATX");

                entity.Property(e => e.Totalexpensesx).HasColumnName("TOTALEXPENSESX");

                entity.Property(e => e.Totalpromotionsx).HasColumnName("TOTALPROMOTIONSX");

                entity.Property(e => e.Totalservicesx).HasColumnName("TOTALSERVICESX");

                entity.Property(e => e.Totalvatx).HasColumnName("TOTALVATX");

                entity.Property(e => e.Vatincgrossx).HasColumnName("VATINCGROSSX");
            });

            modelBuilder.Entity<Lg00101Ordlineexch>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_ORDLINEEXCH_I1");

                entity.ToTable("LG_001_01_ORDLINEEXCH");

                entity.HasIndex(e => e.Transref, "I001_01_ORDLINEEXCH_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addtaxamountx).HasColumnName("ADDTAXAMOUNTX");

                entity.Property(e => e.Addtaxconvfactx).HasColumnName("ADDTAXCONVFACTX");

                entity.Property(e => e.Addtaxdiscamountx).HasColumnName("ADDTAXDISCAMOUNTX");

                entity.Property(e => e.Addtaxvatmatrahx).HasColumnName("ADDTAXVATMATRAHX");

                entity.Property(e => e.Distaddexpx).HasColumnName("DISTADDEXPX");

                entity.Property(e => e.Distcostx).HasColumnName("DISTCOSTX");

                entity.Property(e => e.Distdiscx).HasColumnName("DISTDISCX");

                entity.Property(e => e.Distexpvatx).HasColumnName("DISTEXPVATX");

                entity.Property(e => e.Distexpx).HasColumnName("DISTEXPX");

                entity.Property(e => e.Distpromx).HasColumnName("DISTPROMX");

                entity.Property(e => e.Euvatamountx).HasColumnName("EUVATAMOUNTX");

                entity.Property(e => e.Exaddtaxamntx).HasColumnName("EXADDTAXAMNTX");

                entity.Property(e => e.Exaddtaxconvfx).HasColumnName("EXADDTAXCONVFX");

                entity.Property(e => e.Linenetx).HasColumnName("LINENETX");

                entity.Property(e => e.Netdiscamntx).HasColumnName("NETDISCAMNTX");

                entity.Property(e => e.Pricex).HasColumnName("PRICEX");

                entity.Property(e => e.Totalx).HasColumnName("TOTALX");

                entity.Property(e => e.Transref).HasColumnName("TRANSREF");

                entity.Property(e => e.Vatamntx).HasColumnName("VATAMNTX");

                entity.Property(e => e.Vatcalcdiffx).HasColumnName("VATCALCDIFFX");

                entity.Property(e => e.Vatmatrahx).HasColumnName("VATMATRAHX");
            });

            modelBuilder.Entity<Lg00101Ordpegging>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_ORDPEGGING_I1");

                entity.ToTable("LG_001_01_ORDPEGGING");

                entity.HasIndex(e => new { e.Parenttype, e.Parentref }, "I001_01_ORDPEGGING_I2");

                entity.HasIndex(e => e.Purordlnref, "I001_01_ORDPEGGING_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Custref).HasColumnName("CUSTREF");

                entity.Property(e => e.Detline).HasColumnName("DETLINE");

                entity.Property(e => e.Itemalter).HasColumnName("ITEMALTER");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Mainitemref).HasColumnName("MAINITEMREF");

                entity.Property(e => e.Mainmeetamnt).HasColumnName("MAINMEETAMNT");

                entity.Property(e => e.Mainunitref).HasColumnName("MAINUNITREF");

                entity.Property(e => e.Mainvariantref).HasColumnName("MAINVARIANTREF");

                entity.Property(e => e.Meetamnt).HasColumnName("MEETAMNT");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Parentref).HasColumnName("PARENTREF");

                entity.Property(e => e.Parenttype).HasColumnName("PARENTTYPE");

                entity.Property(e => e.Prevlineno).HasColumnName("PREVLINENO");

                entity.Property(e => e.Prevlineref).HasColumnName("PREVLINEREF");

                entity.Property(e => e.Purordfref).HasColumnName("PURORDFREF");

                entity.Property(e => e.Purordlnref).HasColumnName("PURORDLNREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Saleordfref).HasColumnName("SALEORDFREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Supplierref).HasColumnName("SUPPLIERREF");

                entity.Property(e => e.Unitref).HasColumnName("UNITREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg00101Orfiche>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_ORFICHE_I1");

                entity.ToTable("LG_001_01_ORFICHE");

                entity.HasIndex(e => new { e.Trcode, e.Ficheno }, "I001_01_ORFICHE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Trcode, e.Date, e.Time }, "I001_01_ORFICHE_I3");

                entity.HasIndex(e => new { e.Clientref, e.Trcode, e.Date, e.Time }, "I001_01_ORFICHE_I4");

                entity.HasIndex(e => new { e.Salesmanref, e.Date, e.Time }, "I001_01_ORFICHE_I5");

                entity.HasIndex(e => e.Trcode, "I001_01_ORFICHE_I6");

                entity.HasIndex(e => e.Globalid, "I001_01_ORFICHE_I7");

                entity.HasIndex(e => e.Guid, "I001_01_ORFICHE_I8");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accepteinvpublic).HasColumnName("ACCEPTEINVPUBLIC");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Actrenting).HasColumnName("ACTRENTING");

                entity.Property(e => e.Adddiscounts).HasColumnName("ADDDISCOUNTS");

                entity.Property(e => e.Adddiscountsvat).HasColumnName("ADDDISCOUNTSVAT");

                entity.Property(e => e.Addexpenses).HasColumnName("ADDEXPENSES");

                entity.Property(e => e.Addexpensesvat).HasColumnName("ADDEXPENSESVAT");

                entity.Property(e => e.Advancepaym).HasColumnName("ADVANCEPAYM");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Altnr).HasColumnName("ALTNR");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Ataxexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTCODE");

                entity.Property(e => e.Ataxexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTREASON");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Campaigncode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CAMPAIGNCODE");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cantcrededuct).HasColumnName("CANTCREDEDUCT");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Checkamount).HasColumnName("CHECKAMOUNT");

                entity.Property(e => e.Checkprice).HasColumnName("CHECKPRICE");

                entity.Property(e => e.Checktotal).HasColumnName("CHECKTOTAL");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Custordno)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CUSTORDNO");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Deductionpart1).HasColumnName("DEDUCTIONPART1");

                entity.Property(e => e.Deductionpart2).HasColumnName("DEDUCTIONPART2");

                entity.Property(e => e.Defaultfiche).HasColumnName("DEFAULTFICHE");

                entity.Property(e => e.Deliverycode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DELIVERYCODE");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Devir).HasColumnName("DEVIR");

                entity.Property(e => e.Dlvclient).HasColumnName("DLVCLIENT");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Doctrackingnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("DOCTRACKINGNR");

                entity.Property(e => e.Einvoice).HasColumnName("EINVOICE");

                entity.Property(e => e.Einvoicetyp).HasColumnName("EINVOICETYP");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Fcstatusref).HasColumnName("FCSTATUSREF");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Genexctyp).HasColumnName("GENEXCTYP");

                entity.Property(e => e.Genexp1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP1");

                entity.Property(e => e.Genexp2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP2");

                entity.Property(e => e.Genexp3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP3");

                entity.Property(e => e.Genexp4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP4");

                entity.Property(e => e.Genexp5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP5");

                entity.Property(e => e.Genexp6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP6");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Grosstotal).HasColumnName("GROSSTOTAL");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Insteadofdesp).HasColumnName("INSTEADOFDESP");

                entity.Property(e => e.Lastrevision).HasColumnName("LASTREVISION");

                entity.Property(e => e.Leasingref).HasColumnName("LEASINGREF");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Nettotal).HasColumnName("NETTOTAL");

                entity.Property(e => e.Notifycrdref).HasColumnName("NOTIFYCRDREF");

                entity.Property(e => e.Offaltref).HasColumnName("OFFALTREF");

                entity.Property(e => e.Offerref).HasColumnName("OFFERREF");

                entity.Property(e => e.Onlyonepayline).HasColumnName("ONLYONEPAYLINE");

                entity.Property(e => e.Opstat).HasColumnName("OPSTAT");

                entity.Property(e => e.Orgdate)
                    .HasColumnType("datetime")
                    .HasColumnName("ORGDATE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Paydefref).HasColumnName("PAYDEFREF");

                entity.Property(e => e.Paymenttype).HasColumnName("PAYMENTTYPE");

                entity.Property(e => e.Pofferbegdt)
                    .HasColumnType("datetime")
                    .HasColumnName("POFFERBEGDT");

                entity.Property(e => e.Pofferenddt)
                    .HasColumnType("datetime")
                    .HasColumnName("POFFERENDDT");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Publicbnaccref).HasColumnName("PUBLICBNACCREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Recvref).HasColumnName("RECVREF");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Revisnr)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("REVISNR");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Sendcnt).HasColumnName("SENDCNT");

                entity.Property(e => e.Shipinforef).HasColumnName("SHIPINFOREF");

                entity.Property(e => e.Shpagncod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("SHPAGNCOD");

                entity.Property(e => e.Shptypcod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("SHPTYPCOD");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Slsactref).HasColumnName("SLSACTREF");

                entity.Property(e => e.Slscustref).HasColumnName("SLSCUSTREF");

                entity.Property(e => e.Slsopprref).HasColumnName("SLSOPPRREF");

                entity.Property(e => e.Sourcecostgrp).HasColumnName("SOURCECOSTGRP");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Taxfreechx).HasColumnName("TAXFREECHX");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Totaladdtax).HasColumnName("TOTALADDTAX");

                entity.Property(e => e.Totaldiscounted).HasColumnName("TOTALDISCOUNTED");

                entity.Property(e => e.Totaldiscounts).HasColumnName("TOTALDISCOUNTS");

                entity.Property(e => e.Totalexaddtax).HasColumnName("TOTALEXADDTAX");

                entity.Property(e => e.Totalexpenses).HasColumnName("TOTALEXPENSES");

                entity.Property(e => e.Totalexpensesvat).HasColumnName("TOTALEXPENSESVAT");

                entity.Property(e => e.Totalpromotions).HasColumnName("TOTALPROMOTIONS");

                entity.Property(e => e.Totalvat).HasColumnName("TOTALVAT");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Transferwithpay).HasColumnName("TRANSFERWITHPAY");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Updcurr).HasColumnName("UPDCURR");

                entity.Property(e => e.Updtrcurr).HasColumnName("UPDTRCURR");

                entity.Property(e => e.Vatexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTCODE");

                entity.Property(e => e.Vatexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTREASON");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Withpaytrans).HasColumnName("WITHPAYTRANS");
            });

            modelBuilder.Entity<Lg00101Orfline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_ORFLINE_I1");

                entity.ToTable("LG_001_01_ORFLINE");

                entity.HasIndex(e => new { e.Orglogicref, e.Logicalref, e.Siteid }, "I001_01_ORFLINE_I10")
                    .IsUnique();

                entity.HasIndex(e => e.Prclistref, "I001_01_ORFLINE_I11");

                entity.HasIndex(e => e.Globalid, "I001_01_ORFLINE_I12");

                entity.HasIndex(e => e.Guid, "I001_01_ORFLINE_I13");

                entity.HasIndex(e => new { e.Ordficheref, e.Parentlnref, e.Linetype }, "I001_01_ORFLINE_I14");

                entity.HasIndex(e => e.Bomrevref, "I001_01_ORFLINE_I15");

                entity.HasIndex(e => new { e.Stockref, e.Variantref, e.Date, e.Time, e.Trcode, e.Ordficheref }, "I001_01_ORFLINE_I2");

                entity.HasIndex(e => new { e.Date, e.Time, e.Trcode, e.Stockref, e.Variantref, e.Ordficheref }, "I001_01_ORFLINE_I3");

                entity.HasIndex(e => new { e.Ordficheref, e.Lineno }, "I001_01_ORFLINE_I4");

                entity.HasIndex(e => new { e.Clientref, e.Date, e.Time, e.Trcode }, "I001_01_ORFLINE_I5");

                entity.HasIndex(e => new { e.Salesmanref, e.Stockref, e.Variantref, e.Trcode }, "I001_01_ORFLINE_I6");

                entity.HasIndex(e => e.Uomref, "I001_01_ORFLINE_I7");

                entity.HasIndex(e => new { e.Ordficheref, e.Prevlineref, e.Prevlineno }, "I001_01_ORFLINE_I8");

                entity.HasIndex(e => e.Offtransref, "I001_01_ORFLINE_I9");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Addtaxaccref).HasColumnName("ADDTAXACCREF");

                entity.Property(e => e.Addtaxamntisupd).HasColumnName("ADDTAXAMNTISUPD");

                entity.Property(e => e.Addtaxamount).HasColumnName("ADDTAXAMOUNT");

                entity.Property(e => e.Addtaxcenterref).HasColumnName("ADDTAXCENTERREF");

                entity.Property(e => e.Addtaxconvfact).HasColumnName("ADDTAXCONVFACT");

                entity.Property(e => e.Addtaxdiscamount).HasColumnName("ADDTAXDISCAMOUNT");

                entity.Property(e => e.Addtaxrate).HasColumnName("ADDTAXRATE");

                entity.Property(e => e.Addtaxvatmatrah).HasColumnName("ADDTAXVATMATRAH");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Altpromflag).HasColumnName("ALTPROMFLAG");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Ataxexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTCODE");

                entity.Property(e => e.Ataxexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTREASON");

                entity.Property(e => e.Billeditem).HasColumnName("BILLEDITEM");

                entity.Property(e => e.Bomref).HasColumnName("BOMREF");

                entity.Property(e => e.Bomrevref).HasColumnName("BOMREVREF");

                entity.Property(e => e.Bomtype).HasColumnName("BOMTYPE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Calctype).HasColumnName("CALCTYPE");

                entity.Property(e => e.Campaignrefs1).HasColumnName("CAMPAIGNREFS1");

                entity.Property(e => e.Campaignrefs2).HasColumnName("CAMPAIGNREFS2");

                entity.Property(e => e.Campaignrefs3).HasColumnName("CAMPAIGNREFS3");

                entity.Property(e => e.Campaignrefs4).HasColumnName("CAMPAIGNREFS4");

                entity.Property(e => e.Campaignrefs5).HasColumnName("CAMPAIGNREFS5");

                entity.Property(e => e.Camppaydefref).HasColumnName("CAMPPAYDEFREF");

                entity.Property(e => e.Camppoint).HasColumnName("CAMPPOINT");

                entity.Property(e => e.Camppoints1).HasColumnName("CAMPPOINTS1");

                entity.Property(e => e.Camppoints2).HasColumnName("CAMPPOINTS2");

                entity.Property(e => e.Camppoints3).HasColumnName("CAMPPOINTS3");

                entity.Property(e => e.Camppoints4).HasColumnName("CAMPPOINTS4");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Candeduct).HasColumnName("CANDEDUCT");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Closed).HasColumnName("CLOSED");

                entity.Property(e => e.Cmpglineref).HasColumnName("CMPGLINEREF");

                entity.Property(e => e.Cmpglinerefs1).HasColumnName("CMPGLINEREFS1");

                entity.Property(e => e.Cmpglinerefs2).HasColumnName("CMPGLINEREFS2");

                entity.Property(e => e.Cmpglinerefs3).HasColumnName("CMPGLINEREFS3");

                entity.Property(e => e.Cmpglinerefs4).HasColumnName("CMPGLINEREFS4");

                entity.Property(e => e.Conditionref).HasColumnName("CONDITIONREF");

                entity.Property(e => e.Cpacode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CPACODE");

                entity.Property(e => e.Cpstflag).HasColumnName("CPSTFLAG");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Deductcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DEDUCTCODE");

                entity.Property(e => e.Deductionpart1).HasColumnName("DEDUCTIONPART1");

                entity.Property(e => e.Deductionpart2).HasColumnName("DEDUCTIONPART2");

                entity.Property(e => e.Delvrycode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DELVRYCODE");

                entity.Property(e => e.Demficheref).HasColumnName("DEMFICHEREF");

                entity.Property(e => e.Dempeggedamnt).HasColumnName("DEMPEGGEDAMNT");

                entity.Property(e => e.Demtransref).HasColumnName("DEMTRANSREF");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Detline).HasColumnName("DETLINE");

                entity.Property(e => e.Devir).HasColumnName("DEVIR");

                entity.Property(e => e.Discper).HasColumnName("DISCPER");

                entity.Property(e => e.Distcost).HasColumnName("DISTCOST");

                entity.Property(e => e.Distdisc).HasColumnName("DISTDISC");

                entity.Property(e => e.Distdiscvat).HasColumnName("DISTDISCVAT");

                entity.Property(e => e.Distexp).HasColumnName("DISTEXP");

                entity.Property(e => e.Distexpvat).HasColumnName("DISTEXPVAT");

                entity.Property(e => e.Distprom).HasColumnName("DISTPROM");

                entity.Property(e => e.Distreserved).HasColumnName("DISTRESERVED");

                entity.Property(e => e.Doreserve).HasColumnName("DORESERVE");

                entity.Property(e => e.Dref).HasColumnName("DREF");

                entity.Property(e => e.Duedate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUEDATE");

                entity.Property(e => e.Euvatstatus).HasColumnName("EUVATSTATUS");

                entity.Property(e => e.Exaddtaxamnt).HasColumnName("EXADDTAXAMNT");

                entity.Property(e => e.Exaddtaxconvf).HasColumnName("EXADDTAXCONVF");

                entity.Property(e => e.Exaddtaxrate).HasColumnName("EXADDTAXRATE");

                entity.Property(e => e.Eximamount).HasColumnName("EXIMAMOUNT");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Faregref).HasColumnName("FAREGREF");

                entity.Property(e => e.Fctyp).HasColumnName("FCTYP");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Globtrans).HasColumnName("GLOBTRANS");

                entity.Property(e => e.Grossuinfo1).HasColumnName("GROSSUINFO1");

                entity.Property(e => e.Grossuinfo2).HasColumnName("GROSSUINFO2");

                entity.Property(e => e.Gtipcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("GTIPCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Inuse).HasColumnName("INUSE");

                entity.Property(e => e.Itemasgref).HasColumnName("ITEMASGREF");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenet).HasColumnName("LINENET");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Netdiscamnt).HasColumnName("NETDISCAMNT");

                entity.Property(e => e.Netdiscflag).HasColumnName("NETDISCFLAG");

                entity.Property(e => e.Netdiscperc).HasColumnName("NETDISCPERC");

                entity.Property(e => e.Offerref).HasColumnName("OFFERREF");

                entity.Property(e => e.Offtransref).HasColumnName("OFFTRANSREF");

                entity.Property(e => e.Onvehicle).HasColumnName("ONVEHICLE");

                entity.Property(e => e.Operationref).HasColumnName("OPERATIONREF");

                entity.Property(e => e.Orderedamount).HasColumnName("ORDEREDAMOUNT");

                entity.Property(e => e.Orderparam).HasColumnName("ORDERPARAM");

                entity.Property(e => e.Ordficheref).HasColumnName("ORDFICHEREF");

                entity.Property(e => e.Orgamount).HasColumnName("ORGAMOUNT");

                entity.Property(e => e.Orgduedate)
                    .HasColumnType("datetime")
                    .HasColumnName("ORGDUEDATE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Orgprice).HasColumnName("ORGPRICE");

                entity.Property(e => e.Parentlnref).HasColumnName("PARENTLNREF");

                entity.Property(e => e.Paydefref).HasColumnName("PAYDEFREF");

                entity.Property(e => e.Pointcampref).HasColumnName("POINTCAMPREF");

                entity.Property(e => e.Pointcamprefs1).HasColumnName("POINTCAMPREFS1");

                entity.Property(e => e.Pointcamprefs2).HasColumnName("POINTCAMPREFS2");

                entity.Property(e => e.Pointcamprefs3).HasColumnName("POINTCAMPREFS3");

                entity.Property(e => e.Pointcamprefs4).HasColumnName("POINTCAMPREFS4");

                entity.Property(e => e.Praccref).HasColumnName("PRACCREF");

                entity.Property(e => e.Prcenterref).HasColumnName("PRCENTERREF");

                entity.Property(e => e.Prclistref).HasColumnName("PRCLISTREF");

                entity.Property(e => e.Prcurr).HasColumnName("PRCURR");

                entity.Property(e => e.Prevlineno).HasColumnName("PREVLINENO");

                entity.Property(e => e.Prevlineref).HasColumnName("PREVLINEREF");

                entity.Property(e => e.Price).HasColumnName("PRICE");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Promclasitemref).HasColumnName("PROMCLASITEMREF");

                entity.Property(e => e.Promref).HasColumnName("PROMREF");

                entity.Property(e => e.Prprice).HasColumnName("PRPRICE");

                entity.Property(e => e.Prrate).HasColumnName("PRRATE");

                entity.Property(e => e.Prvataccref).HasColumnName("PRVATACCREF");

                entity.Property(e => e.Prvatcenref).HasColumnName("PRVATCENREF");

                entity.Property(e => e.Publiccountryref).HasColumnName("PUBLICCOUNTRYREF");

                entity.Property(e => e.Purchoffnr).HasColumnName("PURCHOFFNR");

                entity.Property(e => e.Reasonfornotshp).HasColumnName("REASONFORNOTSHP");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reflvataccref).HasColumnName("REFLVATACCREF");

                entity.Property(e => e.Reflvatothaccref).HasColumnName("REFLVATOTHACCREF");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Reserveamount).HasColumnName("RESERVEAMOUNT");

                entity.Property(e => e.Reservedate)
                    .HasColumnType("datetime")
                    .HasColumnName("RESERVEDATE");

                entity.Property(e => e.Routingref).HasColumnName("ROUTINGREF");

                entity.Property(e => e.Rprice).HasColumnName("RPRICE");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Shippedamntsugg).HasColumnName("SHIPPEDAMNTSUGG");

                entity.Property(e => e.Shippedamount).HasColumnName("SHIPPEDAMOUNT");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourcecostgrp).HasColumnName("SOURCECOSTGRP");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Specode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trgflag).HasColumnName("TRGFLAG");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Underdeductlimit).HasColumnName("UNDERDEDUCTLIMIT");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Usref).HasColumnName("USREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Vat).HasColumnName("VAT");

                entity.Property(e => e.Vataccref).HasColumnName("VATACCREF");

                entity.Property(e => e.Vatamnt).HasColumnName("VATAMNT");

                entity.Property(e => e.Vatcenterref).HasColumnName("VATCENTERREF");

                entity.Property(e => e.Vatexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTCODE");

                entity.Property(e => e.Vatexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTREASON");

                entity.Property(e => e.Vatinc).HasColumnName("VATINC");

                entity.Property(e => e.Vatmatrah).HasColumnName("VATMATRAH");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Withpaytrans).HasColumnName("WITHPAYTRANS");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg00101Packageasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_PACKAGEASGN_I1");

                entity.ToTable("LG_001_01_PACKAGEASGN");

                entity.HasIndex(e => e.Packficheref, "I001_01_PACKAGEASGN_I2");

                entity.HasIndex(e => e.Packlnref, "I001_01_PACKAGEASGN_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Asgnficheref).HasColumnName("ASGNFICHEREF");

                entity.Property(e => e.Asgnfichetype).HasColumnName("ASGNFICHETYPE");

                entity.Property(e => e.Asgnsltranref).HasColumnName("ASGNSLTRANREF");

                entity.Property(e => e.Asgntransref).HasColumnName("ASGNTRANSREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Mainitemlnref).HasColumnName("MAINITEMLNREF");

                entity.Property(e => e.Packficheref).HasColumnName("PACKFICHEREF");

                entity.Property(e => e.Packlnref).HasColumnName("PACKLNREF");

                entity.Property(e => e.Parentpacklnref).HasColumnName("PARENTPACKLNREF");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg00101Packagefcln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_PACKAGEFCLN_I1");

                entity.ToTable("LG_001_01_PACKAGEFCLN");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Date).HasColumnName("DATE_");

                entity.Property(e => e.Filledrate).HasColumnName("FILLEDRATE");

                entity.Property(e => e.Ingredientref).HasColumnName("INGREDIENTREF");

                entity.Property(e => e.Ingredienttype).HasColumnName("INGREDIENTTYPE");

                entity.Property(e => e.Linebarcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("LINEBARCODE");

                entity.Property(e => e.Lineindex).HasColumnName("LINEINDEX");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Packagenumber)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("PACKAGENUMBER");

                entity.Property(e => e.Packficheref).HasColumnName("PACKFICHEREF");

                entity.Property(e => e.Packuinfo1).HasColumnName("PACKUINFO1");

                entity.Property(e => e.Packuinfo2).HasColumnName("PACKUINFO2");

                entity.Property(e => e.Packuinfo3).HasColumnName("PACKUINFO3");

                entity.Property(e => e.Packuinfo4).HasColumnName("PACKUINFO4");

                entity.Property(e => e.Packuinfo5).HasColumnName("PACKUINFO5");

                entity.Property(e => e.Packuinfo6).HasColumnName("PACKUINFO6");

                entity.Property(e => e.Packuinfo7).HasColumnName("PACKUINFO7");

                entity.Property(e => e.Packuinfo8).HasColumnName("PACKUINFO8");

                entity.Property(e => e.Parentpacklnref).HasColumnName("PARENTPACKLNREF");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg00101Packagefiche>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_PACKAGEFICHE_I1");

                entity.ToTable("LG_001_01_PACKAGEFICHE");

                entity.HasIndex(e => e.Ficheno, "I001_01_PACKAGEFICHE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Date, "I001_01_PACKAGEFICHE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Branchno).HasColumnName("BRANCHNO");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Compingredpack).HasColumnName("COMPINGREDPACK");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Departmentno).HasColumnName("DEPARTMENTNO");

                entity.Property(e => e.Explain)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EXPLAIN");

                entity.Property(e => e.Factoryno).HasColumnName("FACTORYNO");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Grossweight).HasColumnName("GROSSWEIGHT");

                entity.Property(e => e.Grossweightref).HasColumnName("GROSSWEIGHTREF");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Netweight).HasColumnName("NETWEIGHT");

                entity.Property(e => e.Netweightref).HasColumnName("NETWEIGHTREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Userno).HasColumnName("USERNO");
            });

            modelBuilder.Entity<Lg00101Paytran>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_PAYTRANS_I1");

                entity.ToTable("LG_001_01_PAYTRANS");

                entity.HasIndex(e => new { e.Sign, e.Paid }, "I001_01_PAYTRANS_I10");

                entity.HasIndex(e => new { e.Cardref, e.Trcurr, e.Date, e.Sign, e.Modulenr, e.Ficheref }, "I001_01_PAYTRANS_I2");

                entity.HasIndex(e => new { e.Modulenr, e.Ficheref, e.Sign }, "I001_01_PAYTRANS_I3");

                entity.HasIndex(e => e.Date, "I001_01_PAYTRANS_I4");

                entity.HasIndex(e => e.Instalref, "I001_01_PAYTRANS_I5");

                entity.HasIndex(e => new { e.Modulenr, e.Trcode, e.Bankaccref }, "I001_01_PAYTRANS_I6");

                entity.HasIndex(e => e.Bankaccref, "I001_01_PAYTRANS_I7");

                entity.HasIndex(e => e.Bnfchref, "I001_01_PAYTRANS_I8");

                entity.HasIndex(e => new { e.Bnfchref, e.Bnflnref }, "I001_01_PAYTRANS_I9");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Approvenum)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("APPROVENUM");

                entity.Property(e => e.Bankaccref).HasColumnName("BANKACCREF");

                entity.Property(e => e.Bankpaydate)
                    .HasColumnType("datetime")
                    .HasColumnName("BANKPAYDATE");

                entity.Property(e => e.Batchnum)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BATCHNUM");

                entity.Property(e => e.Bnfchref).HasColumnName("BNFCHREF");

                entity.Property(e => e.Bnflnref).HasColumnName("BNFLNREF");

                entity.Property(e => e.Bntrcreated).HasColumnName("BNTRCREATED");

                entity.Property(e => e.Calctype).HasColumnName("CALCTYPE");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Cashaccref).HasColumnName("CASHACCREF");

                entity.Property(e => e.Clbnaccountno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLBNACCOUNTNO");

                entity.Property(e => e.Cldiffinv).HasColumnName("CLDIFFINV");

                entity.Property(e => e.Closingrate).HasColumnName("CLOSINGRATE");

                entity.Property(e => e.Creditcardnum)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CREDITCARDNUM");

                entity.Property(e => e.Crosscurr).HasColumnName("CROSSCURR");

                entity.Property(e => e.Crossref).HasColumnName("CROSSREF");

                entity.Property(e => e.Crosstotal).HasColumnName("CROSSTOTAL");

                entity.Property(e => e.Currdiffclosed).HasColumnName("CURRDIFFCLOSED");

                entity.Property(e => e.Currdiffclsref).HasColumnName("CURRDIFFCLSREF");

                entity.Property(e => e.Currdiffrate).HasColumnName("CURRDIFFRATE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Delaytotal).HasColumnName("DELAYTOTAL");

                entity.Property(e => e.Devir).HasColumnName("DEVIR");

                entity.Property(e => e.Devirbranch).HasColumnName("DEVIRBRANCH");

                entity.Property(e => e.Devircardref).HasColumnName("DEVIRCARDREF");

                entity.Property(e => e.Devirdepartment).HasColumnName("DEVIRDEPARTMENT");

                entity.Property(e => e.Devirficheref).HasColumnName("DEVIRFICHEREF");

                entity.Property(e => e.Devirlineref).HasColumnName("DEVIRLINEREF");

                entity.Property(e => e.Devirprocdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DEVIRPROCDATE");

                entity.Property(e => e.Discduedate)
                    .HasColumnType("datetime")
                    .HasColumnName("DISCDUEDATE");

                entity.Property(e => e.Discflag).HasColumnName("DISCFLAG");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Duediffcomsn).HasColumnName("DUEDIFFCOMSN");

                entity.Property(e => e.Earlyintrate).HasColumnName("EARLYINTRATE");

                entity.Property(e => e.Fichelineref).HasColumnName("FICHELINEREF");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Globalcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALCODE");

                entity.Property(e => e.Infidx).HasColumnName("INFIDX");

                entity.Property(e => e.Instalref).HasColumnName("INSTALREF");

                entity.Property(e => e.Instaltype).HasColumnName("INSTALTYPE");

                entity.Property(e => e.Lastsendremlev).HasColumnName("LASTSENDREMLEV");

                entity.Property(e => e.Latelyintrate).HasColumnName("LATELYINTRATE");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Maininstalref).HasColumnName("MAININSTALREF");

                entity.Property(e => e.Matchdate)
                    .HasColumnType("datetime")
                    .HasColumnName("MATCHDATE");

                entity.Property(e => e.Modified).HasColumnName("MODIFIED");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Nettotal).HasColumnName("NETTOTAL");

                entity.Property(e => e.Opstat).HasColumnName("OPSTAT");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Paid).HasColumnName("PAID");

                entity.Property(e => e.Paidincash).HasColumnName("PAIDINCASH");

                entity.Property(e => e.Paymenttype).HasColumnName("PAYMENTTYPE");

                entity.Property(e => e.Payno).HasColumnName("PAYNO");

                entity.Property(e => e.Paytrcurr).HasColumnName("PAYTRCURR");

                entity.Property(e => e.Paytrnet).HasColumnName("PAYTRNET");

                entity.Property(e => e.Paytrrate).HasColumnName("PAYTRRATE");

                entity.Property(e => e.Pointcomsn).HasColumnName("POINTCOMSN");

                entity.Property(e => e.Pointtrans).HasColumnName("POINTTRANS");

                entity.Property(e => e.Poscomsn).HasColumnName("POSCOMSN");

                entity.Property(e => e.Posterminalnum)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("POSTERMINALNUM");

                entity.Property(e => e.Procdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PROCDATE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Remindlev).HasColumnName("REMINDLEV");

                entity.Property(e => e.Remindsent).HasColumnName("REMINDSENT");

                entity.Property(e => e.Repayplanref).HasColumnName("REPAYPLANREF");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Repyplnapplied).HasColumnName("REPYPLNAPPLIED");

                entity.Property(e => e.Retrefno)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("RETREFNO");

                entity.Property(e => e.Sign).HasColumnName("SIGN");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Stlineref).HasColumnName("STLINEREF");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Valbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("VALBEGDATE");

                entity.Property(e => e.Vatflag).HasColumnName("VATFLAG");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Perdoc>(entity =>
            {
                entity.HasKey(e => e.Lref)
                    .HasName("I001_01_PERDOC_I2");

                entity.ToTable("LG_001_01_PERDOC");

                entity.HasIndex(e => new { e.Infotyp, e.Inforef, e.Doctyp, e.Docnr }, "I001_01_PERDOC_I1");

                entity.Property(e => e.Lref).HasColumnName("LREF");

                entity.Property(e => e.Docnr).HasColumnName("DOCNR");

                entity.Property(e => e.Doctyp).HasColumnName("DOCTYP");

                entity.Property(e => e.Inforef).HasColumnName("INFOREF");

                entity.Property(e => e.Infotyp).HasColumnName("INFOTYP");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");
            });

            modelBuilder.Entity<Lg00101Plugin>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_PLUGINS_I1");

                entity.ToTable("LG_001_01_PLUGINS");

                entity.HasIndex(e => e.Plgid, "I001_01_PLUGINS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Author)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("AUTHOR");

                entity.Property(e => e.Description)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Inuse).HasColumnName("INUSE");

                entity.Property(e => e.Libname)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("LIBNAME");

                entity.Property(e => e.Plgid).HasColumnName("PLGID");

                entity.Property(e => e.Plgname)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("PLGNAME");

                entity.Property(e => e.Version)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("VERSION");
            });

            modelBuilder.Entity<Lg00101Prdcost>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_PRDCOST_I1");

                entity.ToTable("LG_001_01_PRDCOST");

                entity.HasIndex(e => new { e.Prdenddate, e.Prdcosttype, e.Itemref, e.Variantref, e.Invencosttype, e.Invencostgrpnr, e.Invencostwsref }, "I001_01_PRDCOST_I2");

                entity.HasIndex(e => new { e.Prdenddate, e.Prdcosttype, e.Itemref, e.Variantref, e.Invencosttype, e.Invencostgrpnr, e.Invencostwsref, e.Sttransref }, "I001_01_PRDCOST_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Invencostgrpnr).HasColumnName("INVENCOSTGRPNR");

                entity.Property(e => e.Invencosttype).HasColumnName("INVENCOSTTYPE");

                entity.Property(e => e.Invencostwsref).HasColumnName("INVENCOSTWSREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Mainunitref).HasColumnName("MAINUNITREF");

                entity.Property(e => e.Prdcosttype).HasColumnName("PRDCOSTTYPE");

                entity.Property(e => e.Prdenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRDENDDATE");

                entity.Property(e => e.Prdendtime).HasColumnName("PRDENDTIME");

                entity.Property(e => e.Sttransref).HasColumnName("STTRANSREF");

                entity.Property(e => e.Totadjcurrufrs).HasColumnName("TOTADJCURRUFRS");

                entity.Property(e => e.Totadjinfufrs).HasColumnName("TOTADJINFUFRS");

                entity.Property(e => e.Totadjvalufrs).HasColumnName("TOTADJVALUFRS");

                entity.Property(e => e.Totamnt).HasColumnName("TOTAMNT");

                entity.Property(e => e.Totataxcurr).HasColumnName("TOTATAXCURR");

                entity.Property(e => e.Totataxval).HasColumnName("TOTATAXVAL");

                entity.Property(e => e.Totcurr).HasColumnName("TOTCURR");

                entity.Property(e => e.Totcurrufrs).HasColumnName("TOTCURRUFRS");

                entity.Property(e => e.Totdiffcurr).HasColumnName("TOTDIFFCURR");

                entity.Property(e => e.Totdiffcurrufrs).HasColumnName("TOTDIFFCURRUFRS");

                entity.Property(e => e.Totdiffinf).HasColumnName("TOTDIFFINF");

                entity.Property(e => e.Totdiffinfufrs).HasColumnName("TOTDIFFINFUFRS");

                entity.Property(e => e.Totdiffprice).HasColumnName("TOTDIFFPRICE");

                entity.Property(e => e.Totdiffpriceufrs).HasColumnName("TOTDIFFPRICEUFRS");

                entity.Property(e => e.Totdiffrepprice).HasColumnName("TOTDIFFREPPRICE");

                entity.Property(e => e.Totdiffreppriceufrs).HasColumnName("TOTDIFFREPPRICEUFRS");

                entity.Property(e => e.Totdiffval).HasColumnName("TOTDIFFVAL");

                entity.Property(e => e.Totdiffvalufrs).HasColumnName("TOTDIFFVALUFRS");

                entity.Property(e => e.Totinf).HasColumnName("TOTINF");

                entity.Property(e => e.Totinfufrs).HasColumnName("TOTINFUFRS");

                entity.Property(e => e.Totval).HasColumnName("TOTVAL");

                entity.Property(e => e.Totvalufrs).HasColumnName("TOTVALUFRS");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg00101Preaccdistdetline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_PREACCDISTDETLINE_I1");

                entity.ToTable("LG_001_01_PREACCDISTDETLINE");

                entity.HasIndex(e => new { e.Ficheref, e.Prevlineref, e.Prevlinetype }, "I001_01_PREACCDISTDETLINE_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Canceled).HasColumnName("CANCELED");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Distrate).HasColumnName("DISTRATE");

                entity.Property(e => e.Disttempref).HasColumnName("DISTTEMPREF");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Maddtaxlnref).HasColumnName("MADDTAXLNREF");

                entity.Property(e => e.Modulnr).HasColumnName("MODULNR");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Prevlineref).HasColumnName("PREVLINEREF");

                entity.Property(e => e.Prevlinetype).HasColumnName("PREVLINETYPE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Tsign).HasColumnName("TSIGN");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg00101Processlog>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_PROCESSLOG_I1");

                entity.ToTable("LG_001_01_PROCESSLOG");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Action).HasColumnName("ACTION_");

                entity.Property(e => e.Currentdate)
                    .HasColumnType("datetime")
                    .HasColumnName("CURRENTDATE");

                entity.Property(e => e.Currenttime).HasColumnName("CURRENTTIME");

                entity.Property(e => e.Datatype).HasColumnName("DATATYPE");

                entity.Property(e => e.Detailstr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("DETAILSTR");

                entity.Property(e => e.Genexp).HasColumnName("GENEXP");

                entity.Property(e => e.Maindoc).HasColumnName("MAINDOC");

                entity.Property(e => e.Mainref).HasColumnName("MAINREF");

                entity.Property(e => e.Messsagestr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("MESSSAGESTR");
            });

            modelBuilder.Entity<Lg00101Procurement>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_PROCUREMENT_I1");

                entity.ToTable("LG_001_01_PROCUREMENT");

                entity.HasIndex(e => e.Prodordref, "I001_01_PROCUREMENT_I2");

                entity.HasIndex(e => e.Polineref, "I001_01_PROCUREMENT_I3");

                entity.HasIndex(e => new { e.Procuretype, e.Ficheref }, "I001_01_PROCUREMENT_I4");

                entity.HasIndex(e => new { e.Procuretype, e.Fichelineref }, "I001_01_PROCUREMENT_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Clcardref).HasColumnName("CLCARDREF");

                entity.Property(e => e.Converted).HasColumnName("CONVERTED");

                entity.Property(e => e.Displineref).HasColumnName("DISPLINEREF");

                entity.Property(e => e.Fichelineref).HasColumnName("FICHELINEREF");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Grossmainuinfo1).HasColumnName("GROSSMAINUINFO1");

                entity.Property(e => e.Grossmainuinfo2).HasColumnName("GROSSMAINUINFO2");

                entity.Property(e => e.Grossuinfo1).HasColumnName("GROSSUINFO1");

                entity.Property(e => e.Grossuinfo2).HasColumnName("GROSSUINFO2");

                entity.Property(e => e.Invennr).HasColumnName("INVENNR");

                entity.Property(e => e.Itemalter).HasColumnName("ITEMALTER");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Itemtemp).HasColumnName("ITEMTEMP");

                entity.Property(e => e.Mainamount).HasColumnName("MAINAMOUNT");

                entity.Property(e => e.Mainitemref).HasColumnName("MAINITEMREF");

                entity.Property(e => e.Mainuinfo1).HasColumnName("MAINUINFO1");

                entity.Property(e => e.Mainuinfo2).HasColumnName("MAINUINFO2");

                entity.Property(e => e.Mainuinfo3).HasColumnName("MAINUINFO3");

                entity.Property(e => e.Mainuinfo4).HasColumnName("MAINUINFO4");

                entity.Property(e => e.Mainuinfo5).HasColumnName("MAINUINFO5");

                entity.Property(e => e.Mainuinfo6).HasColumnName("MAINUINFO6");

                entity.Property(e => e.Mainuinfo7).HasColumnName("MAINUINFO7");

                entity.Property(e => e.Mainuinfo8).HasColumnName("MAINUINFO8");

                entity.Property(e => e.Mainuomref).HasColumnName("MAINUOMREF");

                entity.Property(e => e.Mainvariantref).HasColumnName("MAINVARIANTREF");

                entity.Property(e => e.Plnstficheref).HasColumnName("PLNSTFICHEREF");

                entity.Property(e => e.Plnstlineref).HasColumnName("PLNSTLINEREF");

                entity.Property(e => e.Polineref).HasColumnName("POLINEREF");

                entity.Property(e => e.Procuretype).HasColumnName("PROCURETYPE");

                entity.Property(e => e.Prodordref).HasColumnName("PRODORDREF");

                entity.Property(e => e.Prodordtyp).HasColumnName("PRODORDTYP");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg00101Producer>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_PRODUCER_I1");

                entity.ToTable("LG_001_01_PRODUCER");

                entity.HasIndex(e => e.Invref, "I001_01_PRODUCER_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bagkur).HasColumnName("BAGKUR");

                entity.Property(e => e.Bagkuraccref).HasColumnName("BAGKURACCREF");

                entity.Property(e => e.Bagkurcalctype).HasColumnName("BAGKURCALCTYPE");

                entity.Property(e => e.Bagkurcref).HasColumnName("BAGKURCREF");

                entity.Property(e => e.Bagkurper).HasColumnName("BAGKURPER");

                entity.Property(e => e.Borsa).HasColumnName("BORSA");

                entity.Property(e => e.Borsaaccref).HasColumnName("BORSAACCREF");

                entity.Property(e => e.Borsacref).HasColumnName("BORSACREF");

                entity.Property(e => e.Borsaper).HasColumnName("BORSAPER");

                entity.Property(e => e.Ek1).HasColumnName("EK1");

                entity.Property(e => e.Ek1accref).HasColumnName("EK1ACCREF");

                entity.Property(e => e.Ek1cref).HasColumnName("EK1CREF");

                entity.Property(e => e.Ek1per).HasColumnName("EK1PER");

                entity.Property(e => e.Ek2).HasColumnName("EK2");

                entity.Property(e => e.Ek2accref).HasColumnName("EK2ACCREF");

                entity.Property(e => e.Ek2cref).HasColumnName("EK2CREF");

                entity.Property(e => e.Ek2per).HasColumnName("EK2PER");

                entity.Property(e => e.Ek3).HasColumnName("EK3");

                entity.Property(e => e.Ek3accref).HasColumnName("EK3ACCREF");

                entity.Property(e => e.Ek3cref).HasColumnName("EK3CREF");

                entity.Property(e => e.Ek3per).HasColumnName("EK3PER");

                entity.Property(e => e.Ek4).HasColumnName("EK4");

                entity.Property(e => e.Ek4accref).HasColumnName("EK4ACCREF");

                entity.Property(e => e.Ek4cref).HasColumnName("EK4CREF");

                entity.Property(e => e.Ek4per).HasColumnName("EK4PER");

                entity.Property(e => e.Ek5).HasColumnName("EK5");

                entity.Property(e => e.Ek5accref).HasColumnName("EK5ACCREF");

                entity.Property(e => e.Ek5cref).HasColumnName("EK5CREF");

                entity.Property(e => e.Ek5per).HasColumnName("EK5PER");

                entity.Property(e => e.Invref).HasColumnName("INVREF");

                entity.Property(e => e.Komentry).HasColumnName("KOMENTRY");

                entity.Property(e => e.Komisyon).HasColumnName("KOMISYON");

                entity.Property(e => e.Komisyonaccref).HasColumnName("KOMISYONACCREF");

                entity.Property(e => e.Komisyoncref).HasColumnName("KOMISYONCREF");

                entity.Property(e => e.Komisyonper).HasColumnName("KOMISYONPER");

                entity.Property(e => e.Komkdv).HasColumnName("KOMKDV");

                entity.Property(e => e.Komkdvaccref).HasColumnName("KOMKDVACCREF");

                entity.Property(e => e.Komkdvcref).HasColumnName("KOMKDVCREF");

                entity.Property(e => e.Komkdvper).HasColumnName("KOMKDVPER");

                entity.Property(e => e.Ssdf).HasColumnName("SSDF");

                entity.Property(e => e.Ssdfaccref).HasColumnName("SSDFACCREF");

                entity.Property(e => e.Ssdfcref).HasColumnName("SSDFCREF");

                entity.Property(e => e.Ssdfper).HasColumnName("SSDFPER");

                entity.Property(e => e.Stopaj).HasColumnName("STOPAJ");

                entity.Property(e => e.Stopajaccref).HasColumnName("STOPAJACCREF");

                entity.Property(e => e.Stopajcalctype).HasColumnName("STOPAJCALCTYPE");

                entity.Property(e => e.Stopajcref).HasColumnName("STOPAJCREF");

                entity.Property(e => e.Stopajper).HasColumnName("STOPAJPER");
            });

            modelBuilder.Entity<Lg00101Qprodline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_QPRODLINE_I1");

                entity.ToTable("LG_001_01_QPRODLINE");

                entity.HasIndex(e => new { e.Maincref, e.Lineno }, "I001_01_QPRODLINE_I2");

                entity.HasIndex(e => e.Stcref, "I001_01_QPRODLINE_I3");

                entity.HasIndex(e => new { e.Qprofcref, e.Lineno }, "I001_01_QPRODLINE_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Altitemuse).HasColumnName("ALTITEMUSE");

                entity.Property(e => e.Amnt).HasColumnName("AMNT");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Comptype).HasColumnName("COMPTYPE");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Grossuinfo1).HasColumnName("GROSSUINFO1");

                entity.Property(e => e.Grossuinfo2).HasColumnName("GROSSUINFO2");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Lostfactor).HasColumnName("LOSTFACTOR");

                entity.Property(e => e.Maincref).HasColumnName("MAINCREF");

                entity.Property(e => e.Perc).HasColumnName("PERC");

                entity.Property(e => e.Price).HasColumnName("PRICE");

                entity.Property(e => e.Qprofcref).HasColumnName("QPROFCREF");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Stcref).HasColumnName("STCREF");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Vrntref).HasColumnName("VRNTREF");
            });

            modelBuilder.Entity<Lg00101Qproduct>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_QPRODUCT_I1");

                entity.ToTable("LG_001_01_QPRODUCT");

                entity.HasIndex(e => e.Itemref, "I001_01_QPRODUCT_I2");

                entity.HasIndex(e => new { e.Ficheno, e.Prodtype }, "I001_01_QPRODUCT_I3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Prodtype }, "I001_01_QPRODUCT_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Calcoption).HasColumnName("CALCOPTION");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Createwhfiche).HasColumnName("CREATEWHFICHE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Genexp1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP1");

                entity.Property(e => e.Genexp2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP2");

                entity.Property(e => e.Genexp3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP3");

                entity.Property(e => e.Genexp4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP4");

                entity.Property(e => e.Genexp5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP5");

                entity.Property(e => e.Genexp6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP6");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lostfactor).HasColumnName("LOSTFACTOR");

                entity.Property(e => e.Orderref).HasColumnName("ORDERREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Prodtype).HasColumnName("PRODTYPE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Usetref).HasColumnName("USETREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Reckeeping>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_RECKEEPING_I1");

                entity.ToTable("LG_001_01_RECKEEPING");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Exportcreexcel).HasColumnName("EXPORTCREEXCEL");

                entity.Property(e => e.Exportcrexml).HasColumnName("EXPORTCREXML");

                entity.Property(e => e.Exportcrexprl).HasColumnName("EXPORTCREXPRL");

                entity.Property(e => e.Importcreexcel).HasColumnName("IMPORTCREEXCEL");

                entity.Property(e => e.Importcrexml).HasColumnName("IMPORTCREXML");

                entity.Property(e => e.Importcrexprl).HasColumnName("IMPORTCREXPRL");

                entity.Property(e => e.Producecreexcel).HasColumnName("PRODUCECREEXCEL");

                entity.Property(e => e.Producecrexml).HasColumnName("PRODUCECREXML");

                entity.Property(e => e.Producecrexprl).HasColumnName("PRODUCECREXPRL");

                entity.Property(e => e.Purchcreexcel).HasColumnName("PURCHCREEXCEL");

                entity.Property(e => e.Purchcrexml).HasColumnName("PURCHCREXML");

                entity.Property(e => e.Purchcrexprl).HasColumnName("PURCHCREXPRL");

                entity.Property(e => e.Salescreexcel).HasColumnName("SALESCREEXCEL");

                entity.Property(e => e.Salescrexml).HasColumnName("SALESCREXML");

                entity.Property(e => e.Salescrexprl).HasColumnName("SALESCREXPRL");

                entity.Property(e => e.Stockcreexcel).HasColumnName("STOCKCREEXCEL");

                entity.Property(e => e.Stockcrexml).HasColumnName("STOCKCREXML");

                entity.Property(e => e.Stockcrexprl).HasColumnName("STOCKCREXPRL");
            });

            modelBuilder.Entity<Lg00101Reflectasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_REFLECTASGN_I1");

                entity.ToTable("LG_001_01_REFLECTASGN");

                entity.HasIndex(e => new { e.Accficheref, e.Fichetype }, "I001_01_REFLECTASGN_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Fichetype).HasColumnName("FICHETYPE");

                entity.Property(e => e.Reflectref).HasColumnName("REFLECTREF");
            });

            modelBuilder.Entity<Lg00101Remindhist>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_REMINDHIST_I1");

                entity.ToTable("LG_001_01_REMINDHIST");

                entity.HasIndex(e => e.Clientref, "I001_01_REMINDHIST_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Payplanref).HasColumnName("PAYPLANREF");

                entity.Property(e => e.Paytransdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PAYTRANSDATE");

                entity.Property(e => e.Paytransref).HasColumnName("PAYTRANSREF");

                entity.Property(e => e.Paytranstotal).HasColumnName("PAYTRANSTOTAL");

                entity.Property(e => e.Paytrcurr).HasColumnName("PAYTRCURR");

                entity.Property(e => e.Remlevel).HasColumnName("REMLEVEL");

                entity.Property(e => e.Sentdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SENTDATE");
            });

            modelBuilder.Entity<Lg00101Responsehistory>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_RESPONSEHISTORY_I1");

                entity.ToTable("LG_001_01_RESPONSEHISTORY");

                entity.HasIndex(e => new { e.Doctype, e.Docref }, "I001_01_RESPONSEHISTORY_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Docref).HasColumnName("DOCREF");

                entity.Property(e => e.Doctype).HasColumnName("DOCTYPE");

                entity.Property(e => e.Estatus).HasColumnName("ESTATUS");

                entity.Property(e => e.Responsecode).HasColumnName("RESPONSECODE");

                entity.Property(e => e.Responsedesc)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("RESPONSEDESC");

                entity.Property(e => e.Responsestatus).HasColumnName("RESPONSESTATUS");

                entity.Property(e => e.Time).HasColumnName("TIME_");
            });

            modelBuilder.Entity<Lg00101Rule>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_RULES_I1");

                entity.ToTable("LG_001_01_RULES");

                entity.HasIndex(e => new { e.Code, e.Ruletype }, "I001_01_RULES_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Priority, e.Doctype }, "I001_01_RULES_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Datasourcetyp).HasColumnName("DATASOURCETYP");

                entity.Property(e => e.Def)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEF");

                entity.Property(e => e.Disabled).HasColumnName("DISABLED");

                entity.Property(e => e.Doctype).HasColumnName("DOCTYPE");

                entity.Property(e => e.Eventkind).HasColumnName("EVENTKIND");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Pwd)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("PWD");

                entity.Property(e => e.Ruletype).HasColumnName("RULETYPE");

                entity.Property(e => e.Version).HasColumnName("VERSION");
            });

            modelBuilder.Entity<Lg00101Rulehistory>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_RULEHISTORY_I1");

                entity.ToTable("LG_001_01_RULEHISTORY");

                entity.HasIndex(e => new { e.Doctype, e.Approvalref }, "I001_01_RULEHISTORY_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Action).HasColumnName("ACTION_");

                entity.Property(e => e.Approvalref).HasColumnName("APPROVALREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Doctype).HasColumnName("DOCTYPE");

                entity.Property(e => e.Event).HasColumnName("EVENT");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Ruleref).HasColumnName("RULEREF");

                entity.Property(e => e.Time).HasColumnName("TIME_");
            });

            modelBuilder.Entity<Lg00101Serilotn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_SERILOTN_I1");

                entity.ToTable("LG_001_01_SERILOTN");

                entity.HasIndex(e => new { e.Itemref, e.Variantref, e.Sltype, e.Code }, "I001_01_SERILOTN_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Itemref, e.Variantref, e.Sltype, e.Name }, "I001_01_SERILOTN_I3");

                entity.HasIndex(e => new { e.Code, e.Itemref, e.Variantref }, "I001_01_SERILOTN_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Grouplotno)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("GROUPLOTNO");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Name)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sltype).HasColumnName("SLTYPE");

                entity.Property(e => e.State).HasColumnName("STATE");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Slqcasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_SLQCASGN_I1");

                entity.ToTable("LG_001_01_SLQCASGN");

                entity.HasIndex(e => new { e.Asgntype, e.Sttransref, e.Linenr }, "I001_01_SLQCASGN_I2");

                entity.HasIndex(e => new { e.Asgntype, e.Sltransref, e.Linenr }, "I001_01_SLQCASGN_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Asgntype).HasColumnName("ASGNTYPE");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Condconamount).HasColumnName("CONDCONAMOUNT");

                entity.Property(e => e.Confirmed).HasColumnName("CONFIRMED");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Qcasgnlogicref).HasColumnName("QCASGNLOGICREF");

                entity.Property(e => e.Qccoderef).HasColumnName("QCCODEREF");

                entity.Property(e => e.Qcrevno).HasColumnName("QCREVNO");

                entity.Property(e => e.Qcsetref).HasColumnName("QCSETREF");

                entity.Property(e => e.Qcvalref).HasColumnName("QCVALREF");

                entity.Property(e => e.Qdate)
                    .HasColumnType("datetime")
                    .HasColumnName("QDATE");

                entity.Property(e => e.Qtype).HasColumnName("QTYPE");

                entity.Property(e => e.Qvalue).HasColumnName("QVALUE");

                entity.Property(e => e.Sltransref).HasColumnName("SLTRANSREF");

                entity.Property(e => e.Sttransref).HasColumnName("STTRANSREF");
            });

            modelBuilder.Entity<Lg00101Sltran>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_SLTRANS_I1");

                entity.ToTable("LG_001_01_SLTRANS");

                entity.HasIndex(e => e.Intransref, "I001_01_SLTRANS_I10");

                entity.HasIndex(e => new { e.Sttransref, e.Linenr }, "I001_01_SLTRANS_I2");

                entity.HasIndex(e => e.Slref, "I001_01_SLTRANS_I3");

                entity.HasIndex(e => new { e.Itemref, e.Variantref, e.Invenno, e.Iocode, e.Date }, "I001_01_SLTRANS_I4");

                entity.HasIndex(e => e.Insltransref, "I001_01_SLTRANS_I5");

                entity.HasIndex(e => new { e.Distordlnref, e.Linenr }, "I001_01_SLTRANS_I6");

                entity.HasIndex(e => new { e.Siteid, e.Orglogicref, e.Logicalref }, "I001_01_SLTRANS_I7")
                    .IsUnique();

                entity.HasIndex(e => e.Stficheref, "I001_01_SLTRANS_I8");

                entity.HasIndex(e => e.Guid, "I001_01_SLTRANS_I9");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Adjprcostcurrufrs).HasColumnName("ADJPRCOSTCURRUFRS");

                entity.Property(e => e.Adjprcostufrs).HasColumnName("ADJPRCOSTUFRS");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Ataxprcost).HasColumnName("ATAXPRCOST");

                entity.Property(e => e.Ataxprcostcurr).HasColumnName("ATAXPRCOSTCURR");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Diffprcost).HasColumnName("DIFFPRCOST");

                entity.Property(e => e.Diffprcostcurr).HasColumnName("DIFFPRCOSTCURR");

                entity.Property(e => e.Diffprcostcurrufrs).HasColumnName("DIFFPRCOSTCURRUFRS");

                entity.Property(e => e.Diffprcostufrs).HasColumnName("DIFFPRCOSTUFRS");

                entity.Property(e => e.Distordlnref).HasColumnName("DISTORDLNREF");

                entity.Property(e => e.Distordref).HasColumnName("DISTORDREF");

                entity.Property(e => e.Eximfctype).HasColumnName("EXIMFCTYPE");

                entity.Property(e => e.Eximfileref).HasColumnName("EXIMFILEREF");

                entity.Property(e => e.Eximprocnr).HasColumnName("EXIMPROCNR");

                entity.Property(e => e.Expdate)
                    .HasColumnType("datetime")
                    .HasColumnName("EXPDATE");

                entity.Property(e => e.Fichetype).HasColumnName("FICHETYPE");

                entity.Property(e => e.Grossuinfo1).HasColumnName("GROSSUINFO1");

                entity.Property(e => e.Grossuinfo2).HasColumnName("GROSSUINFO2");

                entity.Property(e => e.Grpbegcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("GRPBEGCODE");

                entity.Property(e => e.Grpendcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("GRPENDCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Indordsltrnref).HasColumnName("INDORDSLTRNREF");

                entity.Property(e => e.Infidx).HasColumnName("INFIDX");

                entity.Property(e => e.Infidxufrs).HasColumnName("INFIDXUFRS");

                entity.Property(e => e.Inplnsltransref).HasColumnName("INPLNSLTRANSREF");

                entity.Property(e => e.Inslamount).HasColumnName("INSLAMOUNT");

                entity.Property(e => e.Insltransref).HasColumnName("INSLTRANSREF");

                entity.Property(e => e.Intransref).HasColumnName("INTRANSREF");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Iocode).HasColumnName("IOCODE");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Locref).HasColumnName("LOCREF");

                entity.Property(e => e.Lprodstat).HasColumnName("LPRODSTAT");

                entity.Property(e => e.Madeofshred).HasColumnName("MADEOFSHRED");

                entity.Property(e => e.Mainamount).HasColumnName("MAINAMOUNT");

                entity.Property(e => e.Mainsllnref).HasColumnName("MAINSLLNREF");

                entity.Property(e => e.Notshipped).HasColumnName("NOTSHIPPED");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Outcost).HasColumnName("OUTCOST");

                entity.Property(e => e.Outcostcurr).HasColumnName("OUTCOSTCURR");

                entity.Property(e => e.Outcostcurrufrs).HasColumnName("OUTCOSTCURRUFRS");

                entity.Property(e => e.Outcostufrs).HasColumnName("OUTCOSTUFRS");

                entity.Property(e => e.Prdordref).HasColumnName("PRDORDREF");

                entity.Property(e => e.Prdordslplnreserve).HasColumnName("PRDORDSLPLNRESERVE");

                entity.Property(e => e.Qctransferamnt).HasColumnName("QCTRANSFERAMNT");

                entity.Property(e => e.Qctransferref).HasColumnName("QCTRANSFERREF");

                entity.Property(e => e.Ratescore).HasColumnName("RATESCORE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Remamount).HasColumnName("REMAMOUNT");

                entity.Property(e => e.Remlnunitamnt).HasColumnName("REMLNUNITAMNT");

                entity.Property(e => e.Seriqcok).HasColumnName("SERIQCOK");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Slref).HasColumnName("SLREF");

                entity.Property(e => e.Sltype).HasColumnName("SLTYPE");

                entity.Property(e => e.Sourcetype).HasColumnName("SOURCETYPE");

                entity.Property(e => e.Sourcewsref).HasColumnName("SOURCEWSREF");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Stficheref).HasColumnName("STFICHEREF");

                entity.Property(e => e.Sttransref).HasColumnName("STTRANSREF");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Spectemplate>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_SPECTEMPLATES_I1");

                entity.ToTable("LG_001_01_SPECTEMPLATES");

                entity.HasIndex(e => new { e.Headerref, e.Doctype, e.Edoctype, e.Speccode }, "I001_01_SPECTEMPLATES_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Doctype).HasColumnName("DOCTYPE");

                entity.Property(e => e.Edoctype).HasColumnName("EDOCTYPE");

                entity.Property(e => e.Headerref).HasColumnName("HEADERREF");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Speccode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECCODE");

                entity.Property(e => e.Templatename)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TEMPLATENAME");
            });

            modelBuilder.Entity<Lg00101Srvnum>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_SRVNUMS_I1");

                entity.ToTable("LG_001_01_SRVNUMS");

                entity.HasIndex(e => new { e.Cardref, e.Invenno }, "I001_01_SRVNUMS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Duration).HasColumnName("DURATION");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Lasttrdate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTTRDATE");

                entity.Property(e => e.Ordered).HasColumnName("ORDERED");

                entity.Property(e => e.Shipped).HasColumnName("SHIPPED");
            });

            modelBuilder.Entity<Lg00101Srvtot>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_SRVTOT_I1");

                entity.ToTable("LG_001_01_SRVTOT");

                entity.HasIndex(e => new { e.Cardref, e.Invenno, e.Month, e.TotalsVatamnt }, "I001_01_SRVTOT_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.TotalsAmount).HasColumnName("TOTALS_AMOUNT");

                entity.Property(e => e.TotalsCashamnt).HasColumnName("TOTALS_CASHAMNT");

                entity.Property(e => e.TotalsCurramnt).HasColumnName("TOTALS_CURRAMNT");

                entity.Property(e => e.TotalsDiscamnt).HasColumnName("TOTALS_DISCAMNT");

                entity.Property(e => e.TotalsRetamnt).HasColumnName("TOTALS_RETAMNT");

                entity.Property(e => e.TotalsVatamnt).HasColumnName("TOTALS_VATAMNT");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg00101Stfcextinf>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_STFCEXTINF_I1");

                entity.ToTable("LG_001_01_STFCEXTINF");

                entity.HasIndex(e => e.Stfcref, "I001_01_STFCEXTINF_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Artdesges)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("ARTDESGES");

                entity.Property(e => e.Stfcref).HasColumnName("STFCREF");

                entity.Property(e => e.Verfahren)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("VERFAHREN");

                entity.Property(e => e.Verkehrsz)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("VERKEHRSZ");
            });

            modelBuilder.Entity<Lg00101Stfexch>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_STFEXCH_I1");

                entity.ToTable("LG_001_01_STFEXCH");

                entity.HasIndex(e => e.Ficheref, "I001_01_STFEXCH_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Adddiscountsx).HasColumnName("ADDDISCOUNTSX");

                entity.Property(e => e.Addexpensesvatx).HasColumnName("ADDEXPENSESVATX");

                entity.Property(e => e.Addexpensesx).HasColumnName("ADDEXPENSESX");

                entity.Property(e => e.Bagkurx).HasColumnName("BAGKURX");

                entity.Property(e => e.Borsax).HasColumnName("BORSAX");

                entity.Property(e => e.Distexpensex).HasColumnName("DISTEXPENSEX");

                entity.Property(e => e.Ek1x).HasColumnName("EK1X");

                entity.Property(e => e.Ek2x).HasColumnName("EK2X");

                entity.Property(e => e.Ek3x).HasColumnName("EK3X");

                entity.Property(e => e.Ek4x).HasColumnName("EK4X");

                entity.Property(e => e.Ek5x).HasColumnName("EK5X");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Grosstotalx).HasColumnName("GROSSTOTALX");

                entity.Property(e => e.Komisyonx).HasColumnName("KOMISYONX");

                entity.Property(e => e.Komkdvx).HasColumnName("KOMKDVX");

                entity.Property(e => e.Ssdfx).HasColumnName("SSDFX");

                entity.Property(e => e.Stopajx).HasColumnName("STOPAJX");

                entity.Property(e => e.Totaladdtaxx).HasColumnName("TOTALADDTAXX");

                entity.Property(e => e.Totaldepozitox).HasColumnName("TOTALDEPOZITOX");

                entity.Property(e => e.Totaldiscountedx).HasColumnName("TOTALDISCOUNTEDX");

                entity.Property(e => e.Totaldiscountsx).HasColumnName("TOTALDISCOUNTSX");

                entity.Property(e => e.Totalexaddtaxx).HasColumnName("TOTALEXADDTAXX");

                entity.Property(e => e.Totalexpensesvatx).HasColumnName("TOTALEXPENSESVATX");

                entity.Property(e => e.Totalexpensesx).HasColumnName("TOTALEXPENSESX");

                entity.Property(e => e.Totalpromotionsx).HasColumnName("TOTALPROMOTIONSX");

                entity.Property(e => e.Totalservicesx).HasColumnName("TOTALSERVICESX");

                entity.Property(e => e.Totalvatx).HasColumnName("TOTALVATX");

                entity.Property(e => e.Vatincgrossx).HasColumnName("VATINCGROSSX");
            });

            modelBuilder.Entity<Lg00101Stfiche>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_STFICHE_I1");

                entity.ToTable("LG_001_01_STFICHE");

                entity.HasIndex(e => new { e.Sourcepolnref, e.Trcode }, "I001_01_STFICHE_I10");

                entity.HasIndex(e => new { e.Destpolnref, e.Trcode }, "I001_01_STFICHE_I11");

                entity.HasIndex(e => new { e.Orglogicref, e.Siteid }, "I001_01_STFICHE_I12");

                entity.HasIndex(e => new { e.Prodorderref, e.Grpcode, e.Date, e.Ftime, e.Iocode, e.Trcode }, "I001_01_STFICHE_I13");

                entity.HasIndex(e => new { e.Sourcepolnref, e.Prodstat, e.Trcode }, "I001_01_STFICHE_I14");

                entity.HasIndex(e => new { e.Orglogicref, e.Logicalref, e.Siteid }, "I001_01_STFICHE_I15")
                    .IsUnique();

                entity.HasIndex(e => e.Mainstfcref, "I001_01_STFICHE_I16");

                entity.HasIndex(e => new { e.Grpcode, e.Docode }, "I001_01_STFICHE_I17");

                entity.HasIndex(e => new { e.Status, e.Dispstatus }, "I001_01_STFICHE_I18");

                entity.HasIndex(e => new { e.Grpcode, e.Ficheno, e.Trcode }, "I001_01_STFICHE_I19");

                entity.HasIndex(e => new { e.Grpcode, e.Trcode, e.Ficheno }, "I001_01_STFICHE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Globalid, "I001_01_STFICHE_I20");

                entity.HasIndex(e => e.Guid, "I001_01_STFICHE_I21");

                entity.HasIndex(e => new { e.Clientref, e.Trcode, e.Date, e.Ftime }, "I001_01_STFICHE_I22");

                entity.HasIndex(e => new { e.Grpcode, e.Date, e.Ftime, e.Iocode, e.Trcode }, "I001_01_STFICHE_I3");

                entity.HasIndex(e => new { e.Invoiceref, e.Fichecnt }, "I001_01_STFICHE_I4");

                entity.HasIndex(e => new { e.Trcode, e.Ficheno }, "I001_01_STFICHE_I5")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Ftime, e.Iocode, e.Trcode }, "I001_01_STFICHE_I6");

                entity.HasIndex(e => e.Accficheref, "I001_01_STFICHE_I7");

                entity.HasIndex(e => new { e.Salesmanref, e.Date, e.Ftime }, "I001_01_STFICHE_I8");

                entity.HasIndex(e => e.Prodorderref, "I001_01_STFICHE_I9");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accepteinvpublic).HasColumnName("ACCEPTEINVPUBLIC");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Adddiscounts).HasColumnName("ADDDISCOUNTS");

                entity.Property(e => e.Addexpenses).HasColumnName("ADDEXPENSES");

                entity.Property(e => e.Addtaxcalc).HasColumnName("ADDTAXCALC");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Ataxexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTCODE");

                entity.Property(e => e.Ataxexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTREASON");

                entity.Property(e => e.Billed).HasColumnName("BILLED");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Campaigncode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CAMPAIGNCODE");

                entity.Property(e => e.Canceldate)
                    .HasColumnType("datetime")
                    .HasColumnName("CANCELDATE");

                entity.Property(e => e.Cancelexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("CANCELEXP");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cancelledacc).HasColumnName("CANCELLEDACC");

                entity.Property(e => e.Cancelledinvref1).HasColumnName("CANCELLEDINVREF1");

                entity.Property(e => e.Cancelledinvref2).HasColumnName("CANCELLEDINVREF2");

                entity.Property(e => e.Cancelledinvref3).HasColumnName("CANCELLEDINVREF3");

                entity.Property(e => e.Cancelledinvref4).HasColumnName("CANCELLEDINVREF4");

                entity.Property(e => e.Cantcrededuct).HasColumnName("CANTCREDEDUCT");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Compbranch).HasColumnName("COMPBRANCH");

                entity.Property(e => e.Compdepartment).HasColumnName("COMPDEPARTMENT");

                entity.Property(e => e.Compfactory).HasColumnName("COMPFACTORY");

                entity.Property(e => e.Compinvref).HasColumnName("COMPINVREF");

                entity.Property(e => e.Compstfcref).HasColumnName("COMPSTFCREF");

                entity.Property(e => e.Controlinfo).HasColumnName("CONTROLINFO");

                entity.Property(e => e.Createwhere).HasColumnName("CREATEWHERE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Deductionpart1).HasColumnName("DEDUCTIONPART1");

                entity.Property(e => e.Deductionpart2).HasColumnName("DEDUCTIONPART2");

                entity.Property(e => e.Deliverycode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DELIVERYCODE");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Destcostgrp).HasColumnName("DESTCOSTGRP");

                entity.Property(e => e.Destindex).HasColumnName("DESTINDEX");

                entity.Property(e => e.Destpolnref).HasColumnName("DESTPOLNREF");

                entity.Property(e => e.Deststatus).HasColumnName("DESTSTATUS");

                entity.Property(e => e.Desttype).HasColumnName("DESTTYPE");

                entity.Property(e => e.Destwsref).HasColumnName("DESTWSREF");

                entity.Property(e => e.Devir).HasColumnName("DEVIR");

                entity.Property(e => e.Dispstatus).HasColumnName("DISPSTATUS");

                entity.Property(e => e.Distorderref).HasColumnName("DISTORDERREF");

                entity.Property(e => e.Dlvclient).HasColumnName("DLVCLIENT");

                entity.Property(e => e.Docdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDATE");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Doctime).HasColumnName("DOCTIME");

                entity.Property(e => e.Doctrackingnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("DOCTRACKINGNR");

                entity.Property(e => e.Edespatch).HasColumnName("EDESPATCH");

                entity.Property(e => e.Edespstatus).HasColumnName("EDESPSTATUS");

                entity.Property(e => e.Einvoice).HasColumnName("EINVOICE");

                entity.Property(e => e.Einvoicetyp).HasColumnName("EINVOICETYP");

                entity.Property(e => e.Entrustdevir).HasColumnName("ENTRUSTDEVIR");

                entity.Property(e => e.Esenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ESENDDATE");

                entity.Property(e => e.Eximfctype).HasColumnName("EXIMFCTYPE");

                entity.Property(e => e.Eximwhfcref).HasColumnName("EXIMWHFCREF");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Fichecnt).HasColumnName("FICHECNT");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Frgtypcod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FRGTYPCOD");

                entity.Property(e => e.Fromexim).HasColumnName("FROMEXIM");

                entity.Property(e => e.Fromintegref).HasColumnName("FROMINTEGREF");

                entity.Property(e => e.Fromintegtype).HasColumnName("FROMINTEGTYPE");

                entity.Property(e => e.Fromordwithpay).HasColumnName("FROMORDWITHPAY");

                entity.Property(e => e.Fromtransfer).HasColumnName("FROMTRANSFER");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Genexctyp).HasColumnName("GENEXCTYP");

                entity.Property(e => e.Genexp1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP1");

                entity.Property(e => e.Genexp2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP2");

                entity.Property(e => e.Genexp3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP3");

                entity.Property(e => e.Genexp4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP4");

                entity.Property(e => e.Genexp5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP5");

                entity.Property(e => e.Genexp6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP6");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Grosstotal).HasColumnName("GROSSTOTAL");

                entity.Property(e => e.Grpcode).HasColumnName("GRPCODE");

                entity.Property(e => e.Grpfirmtrans).HasColumnName("GRPFIRMTRANS");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Inuse).HasColumnName("INUSE");

                entity.Property(e => e.Invkind).HasColumnName("INVKIND");

                entity.Property(e => e.Invno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("INVNO");

                entity.Property(e => e.Invoiceref).HasColumnName("INVOICEREF");

                entity.Property(e => e.Iocode).HasColumnName("IOCODE");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Mainstfcref).HasColumnName("MAINSTFCREF");

                entity.Property(e => e.Mntorderfref).HasColumnName("MNTORDERFREF");

                entity.Property(e => e.Nettotal).HasColumnName("NETTOTAL");

                entity.Property(e => e.Nocalculate).HasColumnName("NOCALCULATE");

                entity.Property(e => e.Notifycrdref).HasColumnName("NOTIFYCRDREF");

                entity.Property(e => e.Offerref).HasColumnName("OFFERREF");

                entity.Property(e => e.Okcfiche).HasColumnName("OKCFICHE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Paydefref).HasColumnName("PAYDEFREF");

                entity.Property(e => e.Porderficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("PORDERFICHENO");

                entity.Property(e => e.Prdordslplnreserve).HasColumnName("PRDORDSLPLNRESERVE");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Printeddespfcno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("PRINTEDDESPFCNO");

                entity.Property(e => e.Prodorderref).HasColumnName("PRODORDERREF");

                entity.Property(e => e.Prodordertyp).HasColumnName("PRODORDERTYP");

                entity.Property(e => e.Prodstat).HasColumnName("PRODSTAT");

                entity.Property(e => e.Profileid).HasColumnName("PROFILEID");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Publicbnaccref).HasColumnName("PUBLICBNACCREF");

                entity.Property(e => e.Qprodfcref).HasColumnName("QPRODFCREF");

                entity.Property(e => e.Qprodfctyp).HasColumnName("QPRODFCTYP");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Recvref).HasColumnName("RECVREF");

                entity.Property(e => e.Reltransfcref).HasColumnName("RELTRANSFCREF");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Sendcnt).HasColumnName("SENDCNT");

                entity.Property(e => e.Shipdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SHIPDATE");

                entity.Property(e => e.Shipinforef).HasColumnName("SHIPINFOREF");

                entity.Property(e => e.Shiptime).HasColumnName("SHIPTIME");

                entity.Property(e => e.Shpagncod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("SHPAGNCOD");

                entity.Property(e => e.Shptypcod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("SHPTYPCOD");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourcecostgrp).HasColumnName("SOURCECOSTGRP");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Sourcepolnref).HasColumnName("SOURCEPOLNREF");

                entity.Property(e => e.Sourcetype).HasColumnName("SOURCETYPE");

                entity.Property(e => e.Sourcewsref).HasColumnName("SOURCEWSREF");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Taxfreechx).HasColumnName("TAXFREECHX");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Totaladdtax).HasColumnName("TOTALADDTAX");

                entity.Property(e => e.Totaldepozito).HasColumnName("TOTALDEPOZITO");

                entity.Property(e => e.Totaldiscounted).HasColumnName("TOTALDISCOUNTED");

                entity.Property(e => e.Totaldiscounts).HasColumnName("TOTALDISCOUNTS");

                entity.Property(e => e.Totalexaddtax).HasColumnName("TOTALEXADDTAX");

                entity.Property(e => e.Totalexpenses).HasColumnName("TOTALEXPENSES");

                entity.Property(e => e.Totalpromotions).HasColumnName("TOTALPROMOTIONS");

                entity.Property(e => e.Totalservices).HasColumnName("TOTALSERVICES");

                entity.Property(e => e.Totalvat).HasColumnName("TOTALVAT");

                entity.Property(e => e.Tracknr)
                    .HasMaxLength(65)
                    .IsUnicode(false)
                    .HasColumnName("TRACKNR");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Ugirtrackingno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("UGIRTRACKINGNO");

                entity.Property(e => e.Undoexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("UNDOEXP");

                entity.Property(e => e.Updcurr).HasColumnName("UPDCURR");

                entity.Property(e => e.Updtrcurr).HasColumnName("UPDTRCURR");

                entity.Property(e => e.Vaaccref).HasColumnName("VAACCREF");

                entity.Property(e => e.Vacenterref).HasColumnName("VACENTERREF");

                entity.Property(e => e.Vatexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTCODE");

                entity.Property(e => e.Vatexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTREASON");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg00101Stinven>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_STINVENS_I1");

                entity.ToTable("LG_001_01_STINVENS");

                entity.HasIndex(e => new { e.Stockref, e.Invenno, e.Month, e.PurchasesAmount }, "I001_01_STINVENS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Mtrlinc).HasColumnName("MTRLINC");

                entity.Property(e => e.PurchasesAmount).HasColumnName("PURCHASES_AMOUNT");

                entity.Property(e => e.PurchasesCashamnt).HasColumnName("PURCHASES_CASHAMNT");

                entity.Property(e => e.PurchasesCurramnt).HasColumnName("PURCHASES_CURRAMNT");

                entity.Property(e => e.PurchasesDiscamnt).HasColumnName("PURCHASES_DISCAMNT");

                entity.Property(e => e.PurchasesRetamnt).HasColumnName("PURCHASES_RETAMNT");

                entity.Property(e => e.PurchasesVatamnt).HasColumnName("PURCHASES_VATAMNT");

                entity.Property(e => e.SalesAmount).HasColumnName("SALES_AMOUNT");

                entity.Property(e => e.SalesCashamnt).HasColumnName("SALES_CASHAMNT");

                entity.Property(e => e.SalesCurramnt).HasColumnName("SALES_CURRAMNT");

                entity.Property(e => e.SalesDiscamnt).HasColumnName("SALES_DISCAMNT");

                entity.Property(e => e.SalesRetamnt).HasColumnName("SALES_RETAMNT");

                entity.Property(e => e.SalesVatamnt).HasColumnName("SALES_VATAMNT");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Virtualinven).HasColumnName("VIRTUALINVEN");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg00101Stinvtot>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_STINVTOT_I1");

                entity.ToTable("LG_001_01_STINVTOT");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Actotherin).HasColumnName("ACTOTHERIN");

                entity.Property(e => e.Actotherout).HasColumnName("ACTOTHEROUT");

                entity.Property(e => e.Actporder).HasColumnName("ACTPORDER");

                entity.Property(e => e.Actprodin).HasColumnName("ACTPRODIN");

                entity.Property(e => e.Actsorder).HasColumnName("ACTSORDER");

                entity.Property(e => e.Actwaste).HasColumnName("ACTWASTE");

                entity.Property(e => e.Actwhousein).HasColumnName("ACTWHOUSEIN");

                entity.Property(e => e.Actwhouseout).HasColumnName("ACTWHOUSEOUT");

                entity.Property(e => e.Avgcurrval).HasColumnName("AVGCURRVAL");

                entity.Property(e => e.Avgvalue).HasColumnName("AVGVALUE");

                entity.Property(e => e.Countadd).HasColumnName("COUNTADD");

                entity.Property(e => e.Countdec).HasColumnName("COUNTDEC");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Distreserved).HasColumnName("DISTRESERVED");

                entity.Property(e => e.Invencostgrp).HasColumnName("INVENCOSTGRP");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Lasttrdate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTTRDATE");

                entity.Property(e => e.Meetplanin).HasColumnName("MEETPLANIN");

                entity.Property(e => e.Onhand).HasColumnName("ONHAND");

                entity.Property(e => e.Onvehicle).HasColumnName("ONVEHICLE");

                entity.Property(e => e.Plnotherin).HasColumnName("PLNOTHERIN");

                entity.Property(e => e.Plnotherout).HasColumnName("PLNOTHEROUT");

                entity.Property(e => e.Plnprodin).HasColumnName("PLNPRODIN");

                entity.Property(e => e.Plnprodout).HasColumnName("PLNPRODOUT");

                entity.Property(e => e.Plnrsrvprodin).HasColumnName("PLNRSRVPRODIN");

                entity.Property(e => e.Plnrsrvprodout).HasColumnName("PLNRSRVPRODOUT");

                entity.Property(e => e.Plnrsrvwhousein).HasColumnName("PLNRSRVWHOUSEIN");

                entity.Property(e => e.Plnrsrvwhouseout).HasColumnName("PLNRSRVWHOUSEOUT");

                entity.Property(e => e.Plnwhousein).HasColumnName("PLNWHOUSEIN");

                entity.Property(e => e.Plnwhouseout).HasColumnName("PLNWHOUSEOUT");

                entity.Property(e => e.Puramnt).HasColumnName("PURAMNT");

                entity.Property(e => e.Purcash).HasColumnName("PURCASH");

                entity.Property(e => e.Purcurr).HasColumnName("PURCURR");

                entity.Property(e => e.Received).HasColumnName("RECEIVED");

                entity.Property(e => e.Reserved).HasColumnName("RESERVED");

                entity.Property(e => e.Salamnt).HasColumnName("SALAMNT");

                entity.Property(e => e.Salcash).HasColumnName("SALCASH");

                entity.Property(e => e.Salcurr).HasColumnName("SALCURR");

                entity.Property(e => e.Shipped).HasColumnName("SHIPPED");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Tempin).HasColumnName("TEMPIN");

                entity.Property(e => e.Tempout).HasColumnName("TEMPOUT");

                entity.Property(e => e.Transferred).HasColumnName("TRANSFERRED");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg00101Stline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_STLINE_I1");

                entity.ToTable("LG_001_01_STLINE");

                entity.HasIndex(e => e.Uomref, "I001_01_STLINE_I10");

                entity.HasIndex(e => new { e.Linetype, e.Stficheref, e.Prevlineref, e.Prevlineno }, "I001_01_STLINE_I11");

                entity.HasIndex(e => e.Prodorderref, "I001_01_STLINE_I12");

                entity.HasIndex(e => e.Plnsttransref, "I001_01_STLINE_I13");

                entity.HasIndex(e => new { e.Sourcepolnref, e.Lprodstat, e.Trcode }, "I001_01_STLINE_I14");

                entity.HasIndex(e => new { e.Destpolnref, e.Lprodstat, e.Trcode }, "I001_01_STLINE_I15");

                entity.HasIndex(e => e.Polineref, "I001_01_STLINE_I16");

                entity.HasIndex(e => new { e.Orglogicref, e.Siteid }, "I001_01_STLINE_I17");

                entity.HasIndex(e => new { e.Faregref, e.Date, e.Logicalref }, "I001_01_STLINE_I18")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Ftime, e.Trcode, e.Iocode }, "I001_01_STLINE_I19");

                entity.HasIndex(e => new { e.Stockref, e.Variantref, e.Date, e.Ftime, e.Iocode, e.Sourceindex, e.Trcode, e.Linetype }, "I001_01_STLINE_I2");

                entity.HasIndex(e => new { e.Prodorderref, e.Stockref, e.Variantref, e.Lprodstat, e.Trcode }, "I001_01_STLINE_I20");

                entity.HasIndex(e => e.Prclistref, "I001_01_STLINE_I21");

                entity.HasIndex(e => new { e.Eximwhfcref, e.Destindex, e.Eximprocnr }, "I001_01_STLINE_I22");

                entity.HasIndex(e => new { e.Eximfctype, e.Eximfileref, e.Eximprocnr }, "I001_01_STLINE_I23");

                entity.HasIndex(e => new { e.Variantref, e.Trcode }, "I001_01_STLINE_I24");

                entity.HasIndex(e => e.Ordficheref, "I001_01_STLINE_I25");

                entity.HasIndex(e => new { e.Detline, e.Invoiceref }, "I001_01_STLINE_I26");

                entity.HasIndex(e => new { e.Eximwhlnref, e.Detline, e.Invoiceref }, "I001_01_STLINE_I27");

                entity.HasIndex(e => new { e.Stficheref, e.Linetype, e.Faregref }, "I001_01_STLINE_I28");

                entity.HasIndex(e => e.Globalid, "I001_01_STLINE_I29");

                entity.HasIndex(e => e.Ordtransref, "I001_01_STLINE_I3");

                entity.HasIndex(e => e.Guid, "I001_01_STLINE_I30");

                entity.HasIndex(e => new { e.Stficheref, e.Stfichelnno }, "I001_01_STLINE_I4");

                entity.HasIndex(e => new { e.Invoiceref, e.Invoicelnno }, "I001_01_STLINE_I5");

                entity.HasIndex(e => new { e.Clientref, e.Date, e.Ftime }, "I001_01_STLINE_I6");

                entity.HasIndex(e => e.Sourcelink, "I001_01_STLINE_I7");

                entity.HasIndex(e => new { e.Clientref, e.Stockref, e.Variantref, e.Date, e.Ftime }, "I001_01_STLINE_I8");

                entity.HasIndex(e => new { e.Salesmanref, e.Stockref, e.Variantref, e.Date, e.Ftime }, "I001_01_STLINE_I9");

                entity.HasIndex(e => new { e.Stockref, e.Sourceindex, e.Cancelled, e.Linetype, e.Trcode, e.Date }, "I001_01_STLINE_I98");

                entity.HasIndex(e => new { e.Detline, e.Cancelled, e.Offtransref, e.Trcode, e.Logicalref }, "I001_01_STLINE_I99")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Abvatamount).HasColumnName("ABVATAMOUNT");

                entity.Property(e => e.Abvatstatus).HasColumnName("ABVATSTATUS");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Addtaxaccref).HasColumnName("ADDTAXACCREF");

                entity.Property(e => e.Addtaxamntisupd).HasColumnName("ADDTAXAMNTISUPD");

                entity.Property(e => e.Addtaxamount).HasColumnName("ADDTAXAMOUNT");

                entity.Property(e => e.Addtaxcenterref).HasColumnName("ADDTAXCENTERREF");

                entity.Property(e => e.Addtaxconvfact).HasColumnName("ADDTAXCONVFACT");

                entity.Property(e => e.Addtaxcosaccref).HasColumnName("ADDTAXCOSACCREF");

                entity.Property(e => e.Addtaxcoscntref).HasColumnName("ADDTAXCOSCNTREF");

                entity.Property(e => e.Addtaxdiscamount).HasColumnName("ADDTAXDISCAMOUNT");

                entity.Property(e => e.Addtaxprcost).HasColumnName("ADDTAXPRCOST");

                entity.Property(e => e.Addtaxprcostcurr).HasColumnName("ADDTAXPRCOSTCURR");

                entity.Property(e => e.Addtaxrate).HasColumnName("ADDTAXRATE");

                entity.Property(e => e.Addtaxretcost).HasColumnName("ADDTAXRETCOST");

                entity.Property(e => e.Addtaxretcostcurr).HasColumnName("ADDTAXRETCOSTCURR");

                entity.Property(e => e.Addtaxvataccref).HasColumnName("ADDTAXVATACCREF");

                entity.Property(e => e.Addtaxvatcenref).HasColumnName("ADDTAXVATCENREF");

                entity.Property(e => e.Addtaxvatmatrah).HasColumnName("ADDTAXVATMATRAH");

                entity.Property(e => e.Adjprcostufrs).HasColumnName("ADJPRCOSTUFRS");

                entity.Property(e => e.Adjprcrcostufrs).HasColumnName("ADJPRCRCOSTUFRS");

                entity.Property(e => e.Adjpriceufrs).HasColumnName("ADJPRICEUFRS");

                entity.Property(e => e.Adjreppriceufrs).HasColumnName("ADJREPPRICEUFRS");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Altpromflag).HasColumnName("ALTPROMFLAG");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Ataxexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTCODE");

                entity.Property(e => e.Ataxexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTREASON");

                entity.Property(e => e.Billed).HasColumnName("BILLED");

                entity.Property(e => e.Billeditem).HasColumnName("BILLEDITEM");

                entity.Property(e => e.Calctype).HasColumnName("CALCTYPE");

                entity.Property(e => e.Campaignrefs1).HasColumnName("CAMPAIGNREFS1");

                entity.Property(e => e.Campaignrefs2).HasColumnName("CAMPAIGNREFS2");

                entity.Property(e => e.Campaignrefs3).HasColumnName("CAMPAIGNREFS3");

                entity.Property(e => e.Campaignrefs4).HasColumnName("CAMPAIGNREFS4");

                entity.Property(e => e.Campaignrefs5).HasColumnName("CAMPAIGNREFS5");

                entity.Property(e => e.Camppaydefref).HasColumnName("CAMPPAYDEFREF");

                entity.Property(e => e.Camppoint).HasColumnName("CAMPPOINT");

                entity.Property(e => e.Camppoints1).HasColumnName("CAMPPOINTS1");

                entity.Property(e => e.Camppoints2).HasColumnName("CAMPPOINTS2");

                entity.Property(e => e.Camppoints3).HasColumnName("CAMPPOINTS3");

                entity.Property(e => e.Camppoints4).HasColumnName("CAMPPOINTS4");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cancelledinvref1).HasColumnName("CANCELLEDINVREF1");

                entity.Property(e => e.Cancelledinvref2).HasColumnName("CANCELLEDINVREF2");

                entity.Property(e => e.Cancelledinvref3).HasColumnName("CANCELLEDINVREF3");

                entity.Property(e => e.Cancelledinvref4).HasColumnName("CANCELLEDINVREF4");

                entity.Property(e => e.Candeduct).HasColumnName("CANDEDUCT");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Cmpglineref).HasColumnName("CMPGLINEREF");

                entity.Property(e => e.Cmpglinerefs1).HasColumnName("CMPGLINEREFS1");

                entity.Property(e => e.Cmpglinerefs2).HasColumnName("CMPGLINEREFS2");

                entity.Property(e => e.Cmpglinerefs3).HasColumnName("CMPGLINEREFS3");

                entity.Property(e => e.Cmpglinerefs4).HasColumnName("CMPGLINEREFS4");

                entity.Property(e => e.Conditionref).HasColumnName("CONDITIONREF");

                entity.Property(e => e.Cosaccrefufrs).HasColumnName("COSACCREFUFRS");

                entity.Property(e => e.Coscntrefufrs).HasColumnName("COSCNTREFUFRS");

                entity.Property(e => e.Costdiffaccref).HasColumnName("COSTDIFFACCREF");

                entity.Property(e => e.Costdiffcenref).HasColumnName("COSTDIFFCENREF");

                entity.Property(e => e.Costdistprice).HasColumnName("COSTDISTPRICE");

                entity.Property(e => e.Costdistpriceufrs).HasColumnName("COSTDISTPRICEUFRS");

                entity.Property(e => e.Costdistrepprice).HasColumnName("COSTDISTREPPRICE");

                entity.Property(e => e.Costdistreppriceufrs).HasColumnName("COSTDISTREPPRICEUFRS");

                entity.Property(e => e.Costofsaleaccref).HasColumnName("COSTOFSALEACCREF");

                entity.Property(e => e.Costofsalecntref).HasColumnName("COSTOFSALECNTREF");

                entity.Property(e => e.Costrate).HasColumnName("COSTRATE");

                entity.Property(e => e.Cpacode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CPACODE");

                entity.Property(e => e.Cpstflag).HasColumnName("CPSTFLAG");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Decprdiff).HasColumnName("DECPRDIFF");

                entity.Property(e => e.Deductcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DEDUCTCODE");

                entity.Property(e => e.Deductionpart1).HasColumnName("DEDUCTIONPART1");

                entity.Property(e => e.Deductionpart2).HasColumnName("DEDUCTIONPART2");

                entity.Property(e => e.Delvrycode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DELVRYCODE");

                entity.Property(e => e.Dempeggedamnt).HasColumnName("DEMPEGGEDAMNT");

                entity.Property(e => e.Destcostgrp).HasColumnName("DESTCOSTGRP");

                entity.Property(e => e.Destindex).HasColumnName("DESTINDEX");

                entity.Property(e => e.Destpolnref).HasColumnName("DESTPOLNREF");

                entity.Property(e => e.Deststatus).HasColumnName("DESTSTATUS");

                entity.Property(e => e.Desttype).HasColumnName("DESTTYPE");

                entity.Property(e => e.Destwsref).HasColumnName("DESTWSREF");

                entity.Property(e => e.Detline).HasColumnName("DETLINE");

                entity.Property(e => e.Diffprcost).HasColumnName("DIFFPRCOST");

                entity.Property(e => e.Diffprcostufrs).HasColumnName("DIFFPRCOSTUFRS");

                entity.Property(e => e.Diffprcrcost).HasColumnName("DIFFPRCRCOST");

                entity.Property(e => e.Diffprcrcostufrs).HasColumnName("DIFFPRCRCOSTUFRS");

                entity.Property(e => e.Diffprice).HasColumnName("DIFFPRICE");

                entity.Property(e => e.Diffpriceufrs).HasColumnName("DIFFPRICEUFRS");

                entity.Property(e => e.Diffrepprice).HasColumnName("DIFFREPPRICE");

                entity.Property(e => e.Diffreppriceufrs).HasColumnName("DIFFREPPRICEUFRS");

                entity.Property(e => e.Discper).HasColumnName("DISCPER");

                entity.Property(e => e.Distaddexp).HasColumnName("DISTADDEXP");

                entity.Property(e => e.Distcoef).HasColumnName("DISTCOEF");

                entity.Property(e => e.Distcost).HasColumnName("DISTCOST");

                entity.Property(e => e.Distdisc).HasColumnName("DISTDISC");

                entity.Property(e => e.Distexp).HasColumnName("DISTEXP");

                entity.Property(e => e.Distorderref).HasColumnName("DISTORDERREF");

                entity.Property(e => e.Distordlineref).HasColumnName("DISTORDLINEREF");

                entity.Property(e => e.Distprom).HasColumnName("DISTPROM");

                entity.Property(e => e.Doreserve).HasColumnName("DORESERVE");

                entity.Property(e => e.Dref).HasColumnName("DREF");

                entity.Property(e => e.Eidistflnnr).HasColumnName("EIDISTFLNNR");

                entity.Property(e => e.Eisrvdsttyp).HasColumnName("EISRVDSTTYP");

                entity.Property(e => e.Exaddtaxamnt).HasColumnName("EXADDTAXAMNT");

                entity.Property(e => e.Exaddtaxaref).HasColumnName("EXADDTAXAREF");

                entity.Property(e => e.Exaddtaxconvf).HasColumnName("EXADDTAXCONVF");

                entity.Property(e => e.Exaddtaxcref).HasColumnName("EXADDTAXCREF");

                entity.Property(e => e.Exaddtaxrate).HasColumnName("EXADDTAXRATE");

                entity.Property(e => e.Eximfctype).HasColumnName("EXIMFCTYPE");

                entity.Property(e => e.Eximficheno)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("EXIMFICHENO");

                entity.Property(e => e.Eximfileref).HasColumnName("EXIMFILEREF");

                entity.Property(e => e.Eximprocnr).HasColumnName("EXIMPROCNR");

                entity.Property(e => e.Eximtype).HasColumnName("EXIMTYPE");

                entity.Property(e => e.Eximwhfcref).HasColumnName("EXIMWHFCREF");

                entity.Property(e => e.Eximwhlnref).HasColumnName("EXIMWHLNREF");

                entity.Property(e => e.Expdays).HasColumnName("EXPDAYS");

                entity.Property(e => e.Expraccref).HasColumnName("EXPRACCREF");

                entity.Property(e => e.Exprcntrref).HasColumnName("EXPRCNTRREF");

                entity.Property(e => e.Faattrib).HasColumnName("FAATTRIB");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Fadaccref).HasColumnName("FADACCREF");

                entity.Property(e => e.Fadcenterref).HasColumnName("FADCENTERREF");

                entity.Property(e => e.Fakkegamount).HasColumnName("FAKKEGAMOUNT");

                entity.Property(e => e.Falinktype).HasColumnName("FALINKTYPE");

                entity.Property(e => e.Falossaccref).HasColumnName("FALOSSACCREF");

                entity.Property(e => e.Falosscentref).HasColumnName("FALOSSCENTREF");

                entity.Property(e => e.Faplaccref).HasColumnName("FAPLACCREF");

                entity.Property(e => e.Faplcenterref).HasColumnName("FAPLCENTERREF");

                entity.Property(e => e.Faprofitaccref).HasColumnName("FAPROFITACCREF");

                entity.Property(e => e.Faprofitcentref).HasColumnName("FAPROFITCENTREF");

                entity.Property(e => e.Faraccref).HasColumnName("FARACCREF");

                entity.Property(e => e.Farcenterref).HasColumnName("FARCENTERREF");

                entity.Property(e => e.Faregbinddate)
                    .HasColumnType("datetime")
                    .HasColumnName("FAREGBINDDATE");

                entity.Property(e => e.Faregref).HasColumnName("FAREGREF");

                entity.Property(e => e.Fromintegref).HasColumnName("FROMINTEGREF");

                entity.Property(e => e.Fromintegtype).HasColumnName("FROMINTEGTYPE");

                entity.Property(e => e.Fromordwithpay).HasColumnName("FROMORDWITHPAY");

                entity.Property(e => e.Fromtransfer).HasColumnName("FROMTRANSFER");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Futmonthbegdate).HasColumnName("FUTMONTHBEGDATE");

                entity.Property(e => e.Futmonthbegdate1)
                    .HasColumnType("datetime")
                    .HasColumnName("FUTMONTHBEGDATE_");

                entity.Property(e => e.Futmonthcnt).HasColumnName("FUTMONTHCNT");

                entity.Property(e => e.Futmonthenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("FUTMONTHENDDATE");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Globtrans).HasColumnName("GLOBTRANS");

                entity.Property(e => e.Grossuinfo1).HasColumnName("GROSSUINFO1");

                entity.Property(e => e.Grossuinfo2).HasColumnName("GROSSUINFO2");

                entity.Property(e => e.Gtipcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("GTIPCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Ineffectivecost).HasColumnName("INEFFECTIVECOST");

                entity.Property(e => e.Infdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INFDATE");

                entity.Property(e => e.Infidx).HasColumnName("INFIDX");

                entity.Property(e => e.Infidxufrs).HasColumnName("INFIDXUFRS");

                entity.Property(e => e.Insexpline).HasColumnName("INSEXPLINE");

                entity.Property(e => e.Invoicelnno).HasColumnName("INVOICELNNO");

                entity.Property(e => e.Invoiceref).HasColumnName("INVOICEREF");

                entity.Property(e => e.Iocode).HasColumnName("IOCODE");

                entity.Property(e => e.Kkegaccref).HasColumnName("KKEGACCREF");

                entity.Property(e => e.Kkegcentref).HasColumnName("KKEGCENTREF");

                entity.Property(e => e.Kkegvataccref).HasColumnName("KKEGVATACCREF");

                entity.Property(e => e.Kkegvatcentref).HasColumnName("KKEGVATCENTREF");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenet).HasColumnName("LINENET");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Lprodrsrvstat).HasColumnName("LPRODRSRVSTAT");

                entity.Property(e => e.Lprodstat).HasColumnName("LPRODSTAT");

                entity.Property(e => e.Madeofshred).HasColumnName("MADEOFSHRED");

                entity.Property(e => e.Mainstlnref).HasColumnName("MAINSTLNREF");

                entity.Property(e => e.Markingtagno)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("MARKINGTAGNO");

                entity.Property(e => e.Middlemanexptyp).HasColumnName("MIDDLEMANEXPTYP");

                entity.Property(e => e.Mntorderfref).HasColumnName("MNTORDERFREF");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Netdiscamnt).HasColumnName("NETDISCAMNT");

                entity.Property(e => e.Netdiscflag).HasColumnName("NETDISCFLAG");

                entity.Property(e => e.Netdiscperc).HasColumnName("NETDISCPERC");

                entity.Property(e => e.Offerref).HasColumnName("OFFERREF");

                entity.Property(e => e.Offtransref).HasColumnName("OFFTRANSREF");

                entity.Property(e => e.Ordficheref).HasColumnName("ORDFICHEREF");

                entity.Property(e => e.Ordtransref).HasColumnName("ORDTRANSREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Othraddtaxaref).HasColumnName("OTHRADDTAXAREF");

                entity.Property(e => e.Othraddtaxcref).HasColumnName("OTHRADDTAXCREF");

                entity.Property(e => e.Outcost).HasColumnName("OUTCOST");

                entity.Property(e => e.Outcostcurr).HasColumnName("OUTCOSTCURR");

                entity.Property(e => e.Outcostcurrufrs).HasColumnName("OUTCOSTCURRUFRS");

                entity.Property(e => e.Outcostufrs).HasColumnName("OUTCOSTUFRS");

                entity.Property(e => e.Outputidcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("OUTPUTIDCODE");

                entity.Property(e => e.Outremamnt).HasColumnName("OUTREMAMNT");

                entity.Property(e => e.Outremcost).HasColumnName("OUTREMCOST");

                entity.Property(e => e.Outremcostcurr).HasColumnName("OUTREMCOSTCURR");

                entity.Property(e => e.Outremcostcurrufrs).HasColumnName("OUTREMCOSTCURRUFRS");

                entity.Property(e => e.Outremcostufrs).HasColumnName("OUTREMCOSTUFRS");

                entity.Property(e => e.Owner)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("OWNER");

                entity.Property(e => e.Parentlnref).HasColumnName("PARENTLNREF");

                entity.Property(e => e.Paydefref).HasColumnName("PAYDEFREF");

                entity.Property(e => e.Plnamount).HasColumnName("PLNAMOUNT");

                entity.Property(e => e.Plndefserilotno)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PLNDEFSERILOTNO");

                entity.Property(e => e.Plnsttranspernr).HasColumnName("PLNSTTRANSPERNR");

                entity.Property(e => e.Plnsttransref).HasColumnName("PLNSTTRANSREF");

                entity.Property(e => e.Plnunrsrvamount).HasColumnName("PLNUNRSRVAMOUNT");

                entity.Property(e => e.Pointcampref).HasColumnName("POINTCAMPREF");

                entity.Property(e => e.Pointcamprefs1).HasColumnName("POINTCAMPREFS1");

                entity.Property(e => e.Pointcamprefs2).HasColumnName("POINTCAMPREFS2");

                entity.Property(e => e.Pointcamprefs3).HasColumnName("POINTCAMPREFS3");

                entity.Property(e => e.Pointcamprefs4).HasColumnName("POINTCAMPREFS4");

                entity.Property(e => e.Polineref).HasColumnName("POLINEREF");

                entity.Property(e => e.Pordclsplnamnt).HasColumnName("PORDCLSPLNAMNT");

                entity.Property(e => e.Pordclsplnunrsrvamnt).HasColumnName("PORDCLSPLNUNRSRVAMNT");

                entity.Property(e => e.Porderficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("PORDERFICHENO");

                entity.Property(e => e.Pordsymoutln).HasColumnName("PORDSYMOUTLN");

                entity.Property(e => e.Praccref).HasColumnName("PRACCREF");

                entity.Property(e => e.Prcenterref).HasColumnName("PRCENTERREF");

                entity.Property(e => e.Prclistref).HasColumnName("PRCLISTREF");

                entity.Property(e => e.Prcurr).HasColumnName("PRCURR");

                entity.Property(e => e.Prdexptotal).HasColumnName("PRDEXPTOTAL");

                entity.Property(e => e.Prdordslplnreserve).HasColumnName("PRDORDSLPLNRESERVE");

                entity.Property(e => e.Prdordtotcoef).HasColumnName("PRDORDTOTCOEF");

                entity.Property(e => e.Prevataxprcostcurr).HasColumnName("PREVATAXPRCOSTCURR");

                entity.Property(e => e.Previousataxprcost).HasColumnName("PREVIOUSATAXPRCOST");

                entity.Property(e => e.Previousoutcost).HasColumnName("PREVIOUSOUTCOST");

                entity.Property(e => e.Prevlineno).HasColumnName("PREVLINENO");

                entity.Property(e => e.Prevlineref).HasColumnName("PREVLINEREF");

                entity.Property(e => e.Prevoutcostcurr).HasColumnName("PREVOUTCOSTCURR");

                entity.Property(e => e.Price).HasColumnName("PRICE");

                entity.Property(e => e.Prodorderref).HasColumnName("PRODORDERREF");

                entity.Property(e => e.Prodordertyp).HasColumnName("PRODORDERTYP");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Promclasitemref).HasColumnName("PROMCLASITEMREF");

                entity.Property(e => e.Promref).HasColumnName("PROMREF");

                entity.Property(e => e.Proutcostcrufrsdiff).HasColumnName("PROUTCOSTCRUFRSDIFF");

                entity.Property(e => e.Proutcostufrsdiff).HasColumnName("PROUTCOSTUFRSDIFF");

                entity.Property(e => e.Prprice).HasColumnName("PRPRICE");

                entity.Property(e => e.Prrate).HasColumnName("PRRATE");

                entity.Property(e => e.Prvataccref).HasColumnName("PRVATACCREF");

                entity.Property(e => e.Prvatcenref).HasColumnName("PRVATCENREF");

                entity.Property(e => e.Publiccountryref).HasColumnName("PUBLICCOUNTRYREF");

                entity.Property(e => e.Purchaccref).HasColumnName("PURCHACCREF");

                entity.Property(e => e.Purchaccrefufrs).HasColumnName("PURCHACCREFUFRS");

                entity.Property(e => e.Purchcentref).HasColumnName("PURCHCENTREF");

                entity.Property(e => e.Purchcentrefufrs).HasColumnName("PURCHCENTREFUFRS");

                entity.Property(e => e.Qctransferamnt).HasColumnName("QCTRANSFERAMNT");

                entity.Property(e => e.Qctransferref).HasColumnName("QCTRANSFERREF");

                entity.Property(e => e.Qprodfcref).HasColumnName("QPRODFCREF");

                entity.Property(e => e.Qprodfctyp).HasColumnName("QPRODFCTYP");

                entity.Property(e => e.Qproditemtype).HasColumnName("QPRODITEMTYPE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reflaccref).HasColumnName("REFLACCREF");

                entity.Property(e => e.Reflothaccref).HasColumnName("REFLOTHACCREF");

                entity.Property(e => e.Reflvataccref).HasColumnName("REFLVATACCREF");

                entity.Property(e => e.Reflvatothaccref).HasColumnName("REFLVATOTHACCREF");

                entity.Property(e => e.Regtypref).HasColumnName("REGTYPREF");

                entity.Property(e => e.Reltransfcref).HasColumnName("RELTRANSFCREF");

                entity.Property(e => e.Reltranslnref).HasColumnName("RELTRANSLNREF");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Retamount).HasColumnName("RETAMOUNT");

                entity.Property(e => e.Retcost).HasColumnName("RETCOST");

                entity.Property(e => e.Retcostcurr).HasColumnName("RETCOSTCURR");

                entity.Property(e => e.Retcostcurrufrs).HasColumnName("RETCOSTCURRUFRS");

                entity.Property(e => e.Retcosttype).HasColumnName("RETCOSTTYPE");

                entity.Property(e => e.Retcostufrs).HasColumnName("RETCOSTUFRS");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourcecostgrp).HasColumnName("SOURCECOSTGRP");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Sourcelink).HasColumnName("SOURCELINK");

                entity.Property(e => e.Sourcepolnref).HasColumnName("SOURCEPOLNREF");

                entity.Property(e => e.Sourcetype).HasColumnName("SOURCETYPE");

                entity.Property(e => e.Sourcewsref).HasColumnName("SOURCEWSREF");

                entity.Property(e => e.Specode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Stdrpunitcost).HasColumnName("STDRPUNITCOST");

                entity.Property(e => e.Stdunitcost).HasColumnName("STDUNITCOST");

                entity.Property(e => e.Stfichelnno).HasColumnName("STFICHELNNO");

                entity.Property(e => e.Stficheref).HasColumnName("STFICHEREF");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Subcontorderref).HasColumnName("SUBCONTORDERREF");

                entity.Property(e => e.Tcktaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TCKTAXNR");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Transexpline).HasColumnName("TRANSEXPLINE");

                entity.Property(e => e.Transqcok).HasColumnName("TRANSQCOK");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Underdeductlimit).HasColumnName("UNDERDEDUCTLIMIT");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Updthisline).HasColumnName("UPDTHISLINE");

                entity.Property(e => e.Usref).HasColumnName("USREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Vat).HasColumnName("VAT");

                entity.Property(e => e.Vataccref).HasColumnName("VATACCREF");

                entity.Property(e => e.Vatamnt).HasColumnName("VATAMNT");

                entity.Property(e => e.Vatcalcdiff).HasColumnName("VATCALCDIFF");

                entity.Property(e => e.Vatcenterref).HasColumnName("VATCENTERREF");

                entity.Property(e => e.Vatexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTCODE");

                entity.Property(e => e.Vatexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTREASON");

                entity.Property(e => e.Vatinc).HasColumnName("VATINC");

                entity.Property(e => e.Vatmatrah).HasColumnName("VATMATRAH");

                entity.Property(e => e.Vendcomm).HasColumnName("VENDCOMM");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Xprice).HasColumnName("XPRICE");

                entity.Property(e => e.Xpriceupd).HasColumnName("XPRICEUPD");

                entity.Property(e => e.Xreprate).HasColumnName("XREPRATE");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg00101Stlinecost>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_STLINECOST_I1");

                entity.ToTable("LG_001_01_STLINECOST");

                entity.HasIndex(e => e.Sttransref, "I001_01_STLINECOST_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Rolluplaborcost).HasColumnName("ROLLUPLABORCOST");

                entity.Property(e => e.Rolluplaborrpcost).HasColumnName("ROLLUPLABORRPCOST");

                entity.Property(e => e.Rollupmaterialcost).HasColumnName("ROLLUPMATERIALCOST");

                entity.Property(e => e.Rollupmaterialrpcost).HasColumnName("ROLLUPMATERIALRPCOST");

                entity.Property(e => e.Rollupoverhcost).HasColumnName("ROLLUPOVERHCOST");

                entity.Property(e => e.Rollupoverhcostg1).HasColumnName("ROLLUPOVERHCOSTG1");

                entity.Property(e => e.Rollupoverhcostg10).HasColumnName("ROLLUPOVERHCOSTG10");

                entity.Property(e => e.Rollupoverhcostg2).HasColumnName("ROLLUPOVERHCOSTG2");

                entity.Property(e => e.Rollupoverhcostg3).HasColumnName("ROLLUPOVERHCOSTG3");

                entity.Property(e => e.Rollupoverhcostg4).HasColumnName("ROLLUPOVERHCOSTG4");

                entity.Property(e => e.Rollupoverhcostg5).HasColumnName("ROLLUPOVERHCOSTG5");

                entity.Property(e => e.Rollupoverhcostg6).HasColumnName("ROLLUPOVERHCOSTG6");

                entity.Property(e => e.Rollupoverhcostg7).HasColumnName("ROLLUPOVERHCOSTG7");

                entity.Property(e => e.Rollupoverhcostg8).HasColumnName("ROLLUPOVERHCOSTG8");

                entity.Property(e => e.Rollupoverhcostg9).HasColumnName("ROLLUPOVERHCOSTG9");

                entity.Property(e => e.Rollupoverhrpcost).HasColumnName("ROLLUPOVERHRPCOST");

                entity.Property(e => e.Rollupoverhrpcostg1).HasColumnName("ROLLUPOVERHRPCOSTG1");

                entity.Property(e => e.Rollupoverhrpcostg10).HasColumnName("ROLLUPOVERHRPCOSTG10");

                entity.Property(e => e.Rollupoverhrpcostg2).HasColumnName("ROLLUPOVERHRPCOSTG2");

                entity.Property(e => e.Rollupoverhrpcostg3).HasColumnName("ROLLUPOVERHRPCOSTG3");

                entity.Property(e => e.Rollupoverhrpcostg4).HasColumnName("ROLLUPOVERHRPCOSTG4");

                entity.Property(e => e.Rollupoverhrpcostg5).HasColumnName("ROLLUPOVERHRPCOSTG5");

                entity.Property(e => e.Rollupoverhrpcostg6).HasColumnName("ROLLUPOVERHRPCOSTG6");

                entity.Property(e => e.Rollupoverhrpcostg7).HasColumnName("ROLLUPOVERHRPCOSTG7");

                entity.Property(e => e.Rollupoverhrpcostg8).HasColumnName("ROLLUPOVERHRPCOSTG8");

                entity.Property(e => e.Rollupoverhrpcostg9).HasColumnName("ROLLUPOVERHRPCOSTG9");

                entity.Property(e => e.Rolluptotalcost).HasColumnName("ROLLUPTOTALCOST");

                entity.Property(e => e.Rolluptotalrpcost).HasColumnName("ROLLUPTOTALRPCOST");

                entity.Property(e => e.Rollupwscost).HasColumnName("ROLLUPWSCOST");

                entity.Property(e => e.Rollupwsrpcost).HasColumnName("ROLLUPWSRPCOST");

                entity.Property(e => e.Sttransref).HasColumnName("STTRANSREF");
            });

            modelBuilder.Entity<Lg00101Stlineexch>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_STLINEEXCH_I1");

                entity.ToTable("LG_001_01_STLINEEXCH");

                entity.HasIndex(e => e.Transref, "I001_01_STLINEEXCH_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addtaxamountx).HasColumnName("ADDTAXAMOUNTX");

                entity.Property(e => e.Addtaxconvfactx).HasColumnName("ADDTAXCONVFACTX");

                entity.Property(e => e.Addtaxdiscamountx).HasColumnName("ADDTAXDISCAMOUNTX");

                entity.Property(e => e.Addtaxvatmatrahx).HasColumnName("ADDTAXVATMATRAHX");

                entity.Property(e => e.Distaddexpx).HasColumnName("DISTADDEXPX");

                entity.Property(e => e.Distcostx).HasColumnName("DISTCOSTX");

                entity.Property(e => e.Distdiscx).HasColumnName("DISTDISCX");

                entity.Property(e => e.Distexpvatx).HasColumnName("DISTEXPVATX");

                entity.Property(e => e.Distexpx).HasColumnName("DISTEXPX");

                entity.Property(e => e.Distpromx).HasColumnName("DISTPROMX");

                entity.Property(e => e.Euvatamountx).HasColumnName("EUVATAMOUNTX");

                entity.Property(e => e.Exaddtaxamntx).HasColumnName("EXADDTAXAMNTX");

                entity.Property(e => e.Exaddtaxconvfx).HasColumnName("EXADDTAXCONVFX");

                entity.Property(e => e.Linenetx).HasColumnName("LINENETX");

                entity.Property(e => e.Netdiscamntx).HasColumnName("NETDISCAMNTX");

                entity.Property(e => e.Pricex).HasColumnName("PRICEX");

                entity.Property(e => e.Totalx).HasColumnName("TOTALX");

                entity.Property(e => e.Transref).HasColumnName("TRANSREF");

                entity.Property(e => e.Vatamntx).HasColumnName("VATAMNTX");

                entity.Property(e => e.Vatcalcdiffx).HasColumnName("VATCALCDIFFX");

                entity.Property(e => e.Vatmatrahx).HasColumnName("VATMATRAHX");
            });

            modelBuilder.Entity<Lg00101Stlninfcoef>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_STLNINFCOEF_I1");

                entity.ToTable("LG_001_01_STLNINFCOEF");

                entity.HasIndex(e => new { e.Ficheref, e.Lineref }, "I001_01_STLNINFCOEF_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Coefarr0).HasColumnName("COEFARR0");

                entity.Property(e => e.Coefarr1).HasColumnName("COEFARR1");

                entity.Property(e => e.Coefarr10).HasColumnName("COEFARR10");

                entity.Property(e => e.Coefarr11).HasColumnName("COEFARR11");

                entity.Property(e => e.Coefarr12).HasColumnName("COEFARR12");

                entity.Property(e => e.Coefarr13).HasColumnName("COEFARR13");

                entity.Property(e => e.Coefarr2).HasColumnName("COEFARR2");

                entity.Property(e => e.Coefarr3).HasColumnName("COEFARR3");

                entity.Property(e => e.Coefarr4).HasColumnName("COEFARR4");

                entity.Property(e => e.Coefarr5).HasColumnName("COEFARR5");

                entity.Property(e => e.Coefarr6).HasColumnName("COEFARR6");

                entity.Property(e => e.Coefarr7).HasColumnName("COEFARR7");

                entity.Property(e => e.Coefarr8).HasColumnName("COEFARR8");

                entity.Property(e => e.Coefarr9).HasColumnName("COEFARR9");

                entity.Property(e => e.Fichedate)
                    .HasColumnType("datetime")
                    .HasColumnName("FICHEDATE");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Invref).HasColumnName("INVREF");

                entity.Property(e => e.Lineref).HasColumnName("LINEREF");
            });

            modelBuilder.Entity<Lg00101Stlniopegging>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_STLNIOPEGGING_I1");

                entity.ToTable("LG_001_01_STLNIOPEGGING");

                entity.HasIndex(e => new { e.Stockref, e.Variantref }, "I001_01_STLNIOPEGGING_I2");

                entity.HasIndex(e => e.Outsttrref, "I001_01_STLNIOPEGGING_I3");

                entity.HasIndex(e => e.Insttrref, "I001_01_STLNIOPEGGING_I4");

                entity.HasIndex(e => new { e.Stockref, e.Variantref, e.Outsttrdate }, "I001_01_STLNIOPEGGING_I5");

                entity.HasIndex(e => new { e.Stockref, e.Variantref, e.Insttrref }, "I001_01_STLNIOPEGGING_I6");

                entity.HasIndex(e => new { e.Outsttrref, e.Linenr }, "I001_01_STLNIOPEGGING_I7");

                entity.HasIndex(e => new { e.Insttrref, e.Linenr }, "I001_01_STLNIOPEGGING_I8");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Instfcref).HasColumnName("INSTFCREF");

                entity.Property(e => e.Insttrdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INSTTRDATE");

                entity.Property(e => e.Insttrref).HasColumnName("INSTTRREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Outstfcref).HasColumnName("OUTSTFCREF");

                entity.Property(e => e.Outsttrdate)
                    .HasColumnType("datetime")
                    .HasColumnName("OUTSTTRDATE");

                entity.Property(e => e.Outsttrref).HasColumnName("OUTSTTRREF");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg00101Stshippedamount>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_STSHIPPEDAMOUNT_I1");

                entity.ToTable("LG_001_01_STSHIPPEDAMOUNT");

                entity.HasIndex(e => new { e.Transref, e.Ordtransref, e.Logicalref }, "I001_01_STSHIPPEDAMOUNT_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Ordtransref).HasColumnName("ORDTRANSREF");

                entity.Property(e => e.Shippedamount).HasColumnName("SHIPPEDAMOUNT");

                entity.Property(e => e.Shippedrsrvamt).HasColumnName("SHIPPEDRSRVAMT");

                entity.Property(e => e.Transref).HasColumnName("TRANSREF");
            });

            modelBuilder.Entity<Lg00101Tmpacasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_TMPACASGN_I1");

                entity.ToTable("LG_001_01_TMPACASGN");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Clsdamount).HasColumnName("CLSDAMOUNT");

                entity.Property(e => e.Clsdtotal).HasColumnName("CLSDTOTAL");

                entity.Property(e => e.Clsduomref).HasColumnName("CLSDUOMREF");

                entity.Property(e => e.Clsdusref).HasColumnName("CLSDUSREF");

                entity.Property(e => e.Diiblineref).HasColumnName("DIIBLINEREF");

                entity.Property(e => e.Inveximlineref).HasColumnName("INVEXIMLINEREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<Lg00101Transac>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_TRANSAC_I1");

                entity.ToTable("LG_001_01_TRANSAC");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Apprdates1)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES1");

                entity.Property(e => e.Apprdates10)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES10");

                entity.Property(e => e.Apprdates11)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES11");

                entity.Property(e => e.Apprdates12)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES12");

                entity.Property(e => e.Apprdates13)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES13");

                entity.Property(e => e.Apprdates14)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES14");

                entity.Property(e => e.Apprdates15)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES15");

                entity.Property(e => e.Apprdates16)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES16");

                entity.Property(e => e.Apprdates17)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES17");

                entity.Property(e => e.Apprdates18)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES18");

                entity.Property(e => e.Apprdates19)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES19");

                entity.Property(e => e.Apprdates2)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES2");

                entity.Property(e => e.Apprdates20)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES20");

                entity.Property(e => e.Apprdates3)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES3");

                entity.Property(e => e.Apprdates4)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES4");

                entity.Property(e => e.Apprdates5)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES5");

                entity.Property(e => e.Apprdates6)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES6");

                entity.Property(e => e.Apprdates7)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES7");

                entity.Property(e => e.Apprdates8)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES8");

                entity.Property(e => e.Apprdates9)
                    .HasColumnType("datetime")
                    .HasColumnName("APPRDATES9");

                entity.Property(e => e.Lastjndate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTJNDATE");

                entity.Property(e => e.Lastjnumber).HasColumnName("LASTJNUMBER");

                entity.Property(e => e.Periodbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PERIODBEGDATE");

                entity.Property(e => e.Periodenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("PERIODENDDATE");

                entity.Property(e => e.Periodnr).HasColumnName("PERIODNR");
            });

            modelBuilder.Entity<Lg00101Uetdscargoinfo>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_UETDSCARGOINFO_I1");

                entity.ToTable("LG_001_01_UETDSCARGOINFO");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Buyertaxno)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("BUYERTAXNO");

                entity.Property(e => e.Buyertitle)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("BUYERTITLE");

                entity.Property(e => e.Cargoid)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("CARGOID");

                entity.Property(e => e.Firmcargono)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("FIRMCARGONO");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Loadamount).HasColumnName("LOADAMOUNT");

                entity.Property(e => e.Loadcitycode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("LOADCITYCODE");

                entity.Property(e => e.Loadcitydef)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("LOADCITYDEF");

                entity.Property(e => e.Loadcntrycode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("LOADCNTRYCODE");

                entity.Property(e => e.Loadcntrydef)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("LOADCNTRYDEF");

                entity.Property(e => e.Loaddate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOADDATE");

                entity.Property(e => e.Loaddstrctcode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("LOADDSTRCTCODE");

                entity.Property(e => e.Loaddstrctdef)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("LOADDSTRCTDEF");

                entity.Property(e => e.Loadtime).HasColumnName("LOADTIME");

                entity.Property(e => e.Loadtype)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("LOADTYPE");

                entity.Property(e => e.Loadtypedef)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("LOADTYPEDEF");

                entity.Property(e => e.Loadunit)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("LOADUNIT");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Sendertaxno)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SENDERTAXNO");

                entity.Property(e => e.Sendertitle)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("SENDERTITLE");

                entity.Property(e => e.Transportmode).HasColumnName("TRANSPORTMODE");

                entity.Property(e => e.Transporttype).HasColumnName("TRANSPORTTYPE");

                entity.Property(e => e.Uncode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("UNCODE");

                entity.Property(e => e.Undef)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("UNDEF");

                entity.Property(e => e.Unloadcitycode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("UNLOADCITYCODE");

                entity.Property(e => e.Unloadcitydef)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNLOADCITYDEF");

                entity.Property(e => e.Unloadcntrycode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("UNLOADCNTRYCODE");

                entity.Property(e => e.Unloadcntrydef)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNLOADCNTRYDEF");

                entity.Property(e => e.Unloaddate)
                    .HasColumnType("datetime")
                    .HasColumnName("UNLOADDATE");

                entity.Property(e => e.Unloaddstrctcode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("UNLOADDSTRCTCODE");

                entity.Property(e => e.Unloaddstrctdef)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNLOADDSTRCTDEF");

                entity.Property(e => e.Unloadtime).HasColumnName("UNLOADTIME");

                entity.Property(e => e.Voyageref).HasColumnName("VOYAGEREF");
            });

            modelBuilder.Entity<Lg00101Uetdsvoyage>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_UETDSVOYAGE_I1");

                entity.ToTable("LG_001_01_UETDSVOYAGE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Drivertcno1)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERTCNO1");

                entity.Property(e => e.Drivertcno2)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("DRIVERTCNO2");

                entity.Property(e => e.Firmvoyageno)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("FIRMVOYAGENO");

                entity.Property(e => e.Genexp)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP");

                entity.Property(e => e.Platenr1)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("PLATENR1");

                entity.Property(e => e.Platenr2)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("PLATENR2");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Voyagebegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("VOYAGEBEGDATE");

                entity.Property(e => e.Voyagebegtime).HasColumnName("VOYAGEBEGTIME");

                entity.Property(e => e.Voyageenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("VOYAGEENDDATE");

                entity.Property(e => e.Voyageendtime).HasColumnName("VOYAGEENDTIME");

                entity.Property(e => e.Voyageid)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("VOYAGEID");
            });

            modelBuilder.Entity<Lg00101Vrntinven>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_VRNTINVENS_I1");

                entity.ToTable("LG_001_01_VRNTINVENS");

                entity.HasIndex(e => new { e.PurchasesCashamnt, e.Invenno, e.Month, e.PurchasesAmount }, "I001_01_VRNTINVENS_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Stockref, e.PurchasesCashamnt, e.Invenno, e.Month, e.PurchasesAmount }, "I001_01_VRNTINVENS_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Mtrlinc).HasColumnName("MTRLINC");

                entity.Property(e => e.PurchasesAmount).HasColumnName("PURCHASES_AMOUNT");

                entity.Property(e => e.PurchasesCashamnt).HasColumnName("PURCHASES_CASHAMNT");

                entity.Property(e => e.PurchasesCurramnt).HasColumnName("PURCHASES_CURRAMNT");

                entity.Property(e => e.PurchasesDiscamnt).HasColumnName("PURCHASES_DISCAMNT");

                entity.Property(e => e.PurchasesRetamnt).HasColumnName("PURCHASES_RETAMNT");

                entity.Property(e => e.PurchasesVatamnt).HasColumnName("PURCHASES_VATAMNT");

                entity.Property(e => e.SalesAmount).HasColumnName("SALES_AMOUNT");

                entity.Property(e => e.SalesCashamnt).HasColumnName("SALES_CASHAMNT");

                entity.Property(e => e.SalesCurramnt).HasColumnName("SALES_CURRAMNT");

                entity.Property(e => e.SalesDiscamnt).HasColumnName("SALES_DISCAMNT");

                entity.Property(e => e.SalesRetamnt).HasColumnName("SALES_RETAMNT");

                entity.Property(e => e.SalesVatamnt).HasColumnName("SALES_VATAMNT");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Virtualinven).HasColumnName("VIRTUALINVEN");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg00101Vrntinvtot>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_01_VRNTINVTOT_I1");

                entity.ToTable("LG_001_01_VRNTINVTOT");

                entity.HasIndex(e => new { e.Variantref, e.Invenno, e.Date }, "I001_01_VRNTINVTOT_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Stockref, e.Variantref, e.Invenno, e.Date }, "I001_01_VRNTINVTOT_I3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Invenno, e.Stockref, e.Variantref, e.Date }, "I001_01_VRNTINVTOT_I4")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Actotherin).HasColumnName("ACTOTHERIN");

                entity.Property(e => e.Actotherout).HasColumnName("ACTOTHEROUT");

                entity.Property(e => e.Actporder).HasColumnName("ACTPORDER");

                entity.Property(e => e.Actprodin).HasColumnName("ACTPRODIN");

                entity.Property(e => e.Actsorder).HasColumnName("ACTSORDER");

                entity.Property(e => e.Actwaste).HasColumnName("ACTWASTE");

                entity.Property(e => e.Actwhousein).HasColumnName("ACTWHOUSEIN");

                entity.Property(e => e.Actwhouseout).HasColumnName("ACTWHOUSEOUT");

                entity.Property(e => e.Avgcurrval).HasColumnName("AVGCURRVAL");

                entity.Property(e => e.Avgvalue).HasColumnName("AVGVALUE");

                entity.Property(e => e.Countadd).HasColumnName("COUNTADD");

                entity.Property(e => e.Countdec).HasColumnName("COUNTDEC");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Distreserved).HasColumnName("DISTRESERVED");

                entity.Property(e => e.Invencostgrp).HasColumnName("INVENCOSTGRP");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Lasttrdate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTTRDATE");

                entity.Property(e => e.Meetplanin).HasColumnName("MEETPLANIN");

                entity.Property(e => e.Onhand).HasColumnName("ONHAND");

                entity.Property(e => e.Onvehicle).HasColumnName("ONVEHICLE");

                entity.Property(e => e.Plnotherin).HasColumnName("PLNOTHERIN");

                entity.Property(e => e.Plnotherout).HasColumnName("PLNOTHEROUT");

                entity.Property(e => e.Plnprodin).HasColumnName("PLNPRODIN");

                entity.Property(e => e.Plnprodout).HasColumnName("PLNPRODOUT");

                entity.Property(e => e.Plnrsrvprodin).HasColumnName("PLNRSRVPRODIN");

                entity.Property(e => e.Plnrsrvprodout).HasColumnName("PLNRSRVPRODOUT");

                entity.Property(e => e.Plnrsrvwhousein).HasColumnName("PLNRSRVWHOUSEIN");

                entity.Property(e => e.Plnrsrvwhouseout).HasColumnName("PLNRSRVWHOUSEOUT");

                entity.Property(e => e.Plnwhousein).HasColumnName("PLNWHOUSEIN");

                entity.Property(e => e.Plnwhouseout).HasColumnName("PLNWHOUSEOUT");

                entity.Property(e => e.Puramnt).HasColumnName("PURAMNT");

                entity.Property(e => e.Purcash).HasColumnName("PURCASH");

                entity.Property(e => e.Purcurr).HasColumnName("PURCURR");

                entity.Property(e => e.Received).HasColumnName("RECEIVED");

                entity.Property(e => e.Reserved).HasColumnName("RESERVED");

                entity.Property(e => e.Salamnt).HasColumnName("SALAMNT");

                entity.Property(e => e.Salcash).HasColumnName("SALCASH");

                entity.Property(e => e.Salcurr).HasColumnName("SALCURR");

                entity.Property(e => e.Shipped).HasColumnName("SHIPPED");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Tempin).HasColumnName("TEMPIN");

                entity.Property(e => e.Tempout).HasColumnName("TEMPOUT");

                entity.Property(e => e.Transferred).HasColumnName("TRANSFERRED");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg001Abudgetprd>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ABUDGETPRD_I1");

                entity.ToTable("LG_001_ABUDGETPRD");

                entity.HasIndex(e => e.Code, "I001_ABUDGETPRD_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_ABUDGETPRD_I3");

                entity.HasIndex(e => e.Begdate, "I001_ABUDGETPRD_I4")
                    .IsUnique();

                entity.HasIndex(e => e.Enddate, "I001_ABUDGETPRD_I5")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Subprdnum).HasColumnName("SUBPRDNUM");

                entity.Property(e => e.Subprdtype).HasColumnName("SUBPRDTYPE");
            });

            modelBuilder.Entity<Lg001Acccode>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ACCCODES_I1");

                entity.ToTable("LG_001_ACCCODES");

                entity.HasIndex(e => e.Modnr, "I001_ACCCODES_I2");

                entity.HasIndex(e => new { e.Modnr, e.Indexcode }, "I001_ACCCODES_I3");

                entity.HasIndex(e => new { e.Modnr, e.Prevalue }, "I001_ACCCODES_I4");

                entity.HasIndex(e => new { e.Modnr, e.Branchnr }, "I001_ACCCODES_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Branchnr).HasColumnName("BRANCHNR");

                entity.Property(e => e.Calcformula)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("CALCFORMULA");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Effectivecost).HasColumnName("EFFECTIVECOST");

                entity.Property(e => e.Exptype).HasColumnName("EXPTYPE");

                entity.Property(e => e.Grpfilter)
                    .HasColumnType("image")
                    .HasColumnName("GRPFILTER");

                entity.Property(e => e.Indexcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("INDEXCODE");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Modnr).HasColumnName("MODNR");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Prdiff).HasColumnName("PRDIFF");

                entity.Property(e => e.Prevalue).HasColumnName("PREVALUE");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Vatrate).HasColumnName("VATRATE");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg001Accdisttemp>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ACCDISTTEMP_I1");

                entity.ToTable("LG_001_ACCDISTTEMP");

                entity.HasIndex(e => new { e.Accountref, e.Code }, "I001_ACCDISTTEMP_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Accountref, e.Name }, "I001_ACCDISTTEMP_I3");

                entity.HasIndex(e => new { e.Accountref, e.Begdate, e.Enddate }, "I001_ACCDISTTEMP_I4");

                entity.HasIndex(e => new { e.Accountref, e.Active, e.Code }, "I001_ACCDISTTEMP_I5")
                    .IsUnique();

                entity.HasIndex(e => new { e.Accountref, e.Active, e.Name }, "I001_ACCDISTTEMP_I6");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Begacccode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("BEGACCCODE");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Endacccode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ENDACCCODE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Accdisttempln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ACCDISTTEMPLN_I1");

                entity.ToTable("LG_001_ACCDISTTEMPLN");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Distfact).HasColumnName("DISTFACT");

                entity.Property(e => e.Disttempref).HasColumnName("DISTTEMPREF");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");
            });

            modelBuilder.Entity<Lg001Accounttemplate>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ACCOUNTTEMPLATES_I1");

                entity.ToTable("LG_001_ACCOUNTTEMPLATES");

                entity.HasIndex(e => new { e.Trcode, e.Typ }, "I001_ACCOUNTTEMPLATES_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Lastcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("LASTCODE");

                entity.Property(e => e.Lastpartlevel).HasColumnName("LASTPARTLEVEL");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<Lg001Activityamnt>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ACTIVITYAMNT_I1");

                entity.ToTable("LG_001_ACTIVITYAMNT");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Displineref).HasColumnName("DISPLINEREF");

                entity.Property(e => e.Ovhdtrref).HasColumnName("OVHDTRREF");

                entity.Property(e => e.Prodordref).HasColumnName("PRODORDREF");
            });

            modelBuilder.Entity<Lg001Actovrhddist>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ACTOVRHDDIST_I1");

                entity.ToTable("LG_001_ACTOVRHDDIST");

                entity.HasIndex(e => new { e.Ovhdclnref, e.Accountref }, "I001_ACTOVRHDDIST_I2");

                entity.HasIndex(e => e.Parentref, "I001_ACTOVRHDDIST_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Actunitcost).HasColumnName("ACTUNITCOST");

                entity.Property(e => e.Expbranch).HasColumnName("EXPBRANCH");

                entity.Property(e => e.Expcenterref).HasColumnName("EXPCENTERREF");

                entity.Property(e => e.Expcenterspecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("EXPCENTERSPECODE");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Loadrate).HasColumnName("LOADRATE");

                entity.Property(e => e.Ovhdclnref).HasColumnName("OVHDCLNREF");

                entity.Property(e => e.Parentref).HasColumnName("PARENTREF");

                entity.Property(e => e.Postedprdref).HasColumnName("POSTEDPRDREF");

                entity.Property(e => e.Rdtotal).HasColumnName("RDTOTAL");

                entity.Property(e => e.Realcapacity).HasColumnName("REALCAPACITY");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<Lg001Addtax>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ADDTAX_I1");

                entity.ToTable("LG_001_ADDTAX");

                entity.HasIndex(e => e.Taxcode, "I001_ADDTAX_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Taxdef, "I001_ADDTAX_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addtocost).HasColumnName("ADDTOCOST");

                entity.Property(e => e.Canteffectcost).HasColumnName("CANTEFFECTCOST");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Effectkdv).HasColumnName("EFFECTKDV");

                entity.Property(e => e.Globalcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALCODE");

                entity.Property(e => e.Inlinenet).HasColumnName("INLINENET");

                entity.Property(e => e.Multipleaddtax).HasColumnName("MULTIPLEADDTAX");

                entity.Property(e => e.Multipleorderno).HasColumnName("MULTIPLEORDERNO");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Taxcode)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TAXCODE");

                entity.Property(e => e.Taxdef)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("TAXDEF");

                entity.Property(e => e.Taxgroupid)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TAXGROUPID");
            });

            modelBuilder.Entity<Lg001Addtaxline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ADDTAXLINE_I1");

                entity.ToTable("LG_001_ADDTAXLINE");

                entity.HasIndex(e => e.Addtaxref, "I001_ADDTAXLINE_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addtaxref).HasColumnName("ADDTAXREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Collectamount).HasColumnName("COLLECTAMOUNT");

                entity.Property(e => e.Collectrate).HasColumnName("COLLECTRATE");

                entity.Property(e => e.Discamount).HasColumnName("DISCAMOUNT");

                entity.Property(e => e.Exceptamount).HasColumnName("EXCEPTAMOUNT");

                entity.Property(e => e.Exceptrate).HasColumnName("EXCEPTRATE");

                entity.Property(e => e.Fcspecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("FCSPECODE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Rate).HasColumnName("RATE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Taxtype).HasColumnName("TAXTYPE");

                entity.Property(e => e.Trspecode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRSPECODE");

                entity.Property(e => e.Trspecode2)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("TRSPECODE2");

                entity.Property(e => e.Unitref).HasColumnName("UNITREF");

                entity.Property(e => e.Unitsetref).HasColumnName("UNITSETREF");

                entity.Property(e => e.Unittype).HasColumnName("UNITTYPE");
            });

            modelBuilder.Entity<Lg001Anbudget>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ANBUDGET_I1");

                entity.ToTable("LG_001_ANBUDGET");

                entity.HasIndex(e => e.Code, "I001_ANBUDGET_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Definition, "I001_ANBUDGET_I3");

                entity.HasIndex(e => new { e.Lowlevelcodes1, e.Lowlevelcodes2, e.Lowlevelcodes3, e.Lowlevelcodes4, e.Lowlevelcodes5, e.Lowlevelcodes6, e.Lowlevelcodes7, e.Lowlevelcodes8, e.Logicalref }, "I001_ANBUDGET_I4")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bdgtprdref).HasColumnName("BDGTPRDREF");

                entity.Property(e => e.Bdgtrevfcref).HasColumnName("BDGTREVFCREF");

                entity.Property(e => e.Bdgtrevno).HasColumnName("BDGTREVNO");

                entity.Property(e => e.Bdgttype).HasColumnName("BDGTTYPE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Lowlevelcodes1).HasColumnName("LOWLEVELCODES1");

                entity.Property(e => e.Lowlevelcodes10).HasColumnName("LOWLEVELCODES10");

                entity.Property(e => e.Lowlevelcodes2).HasColumnName("LOWLEVELCODES2");

                entity.Property(e => e.Lowlevelcodes3).HasColumnName("LOWLEVELCODES3");

                entity.Property(e => e.Lowlevelcodes4).HasColumnName("LOWLEVELCODES4");

                entity.Property(e => e.Lowlevelcodes5).HasColumnName("LOWLEVELCODES5");

                entity.Property(e => e.Lowlevelcodes6).HasColumnName("LOWLEVELCODES6");

                entity.Property(e => e.Lowlevelcodes7).HasColumnName("LOWLEVELCODES7");

                entity.Property(e => e.Lowlevelcodes8).HasColumnName("LOWLEVELCODES8");

                entity.Property(e => e.Lowlevelcodes9).HasColumnName("LOWLEVELCODES9");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Parbdgtref).HasColumnName("PARBDGTREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Totalcredit).HasColumnName("TOTALCREDIT");

                entity.Property(e => e.Totaldebit).HasColumnName("TOTALDEBIT");
            });

            modelBuilder.Entity<Lg001Anbudgetln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ANBUDGETLN_I1");

                entity.ToTable("LG_001_ANBUDGETLN");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Acccorpcode1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCCORPCODE1");

                entity.Property(e => e.Acccorpcode2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCCORPCODE2");

                entity.Property(e => e.Acccorpcode3)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCCORPCODE3");

                entity.Property(e => e.Acccorpcode4)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCCORPCODE4");

                entity.Property(e => e.Accecocode1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCECOCODE1");

                entity.Property(e => e.Accecocode2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCECOCODE2");

                entity.Property(e => e.Accecocode3)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCECOCODE3");

                entity.Property(e => e.Accecocode4)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCECOCODE4");

                entity.Property(e => e.Accfincode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCFINCODE");

                entity.Property(e => e.Accfunccode1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCFUNCCODE1");

                entity.Property(e => e.Accfunccode2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCFUNCCODE2");

                entity.Property(e => e.Accfunccode3)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCFUNCCODE3");

                entity.Property(e => e.Accfunccode4)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ACCFUNCCODE4");

                entity.Property(e => e.Accref).HasColumnName("ACCREF");

                entity.Property(e => e.Bdgtprdref).HasColumnName("BDGTPRDREF");

                entity.Property(e => e.Bdgtref).HasColumnName("BDGTREF");

                entity.Property(e => e.Bdgtrevfcref).HasColumnName("BDGTREVFCREF");

                entity.Property(e => e.Bdgtrevno).HasColumnName("BDGTREVNO");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Crsaccref).HasColumnName("CRSACCREF");

                entity.Property(e => e.Crsraccref).HasColumnName("CRSRACCREF");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");
            });

            modelBuilder.Entity<Lg001Anbudgetprd>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ANBUDGETPRD_I1");

                entity.ToTable("LG_001_ANBUDGETPRD");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accref).HasColumnName("ACCREF");

                entity.Property(e => e.Bdgtlnref).HasColumnName("BDGTLNREF");

                entity.Property(e => e.Bdgtprdref).HasColumnName("BDGTPRDREF");

                entity.Property(e => e.Bdgtref).HasColumnName("BDGTREF");

                entity.Property(e => e.Bdgtrevfcref).HasColumnName("BDGTREVFCREF");

                entity.Property(e => e.Bdgtrevno).HasColumnName("BDGTREVNO");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Crsaccref).HasColumnName("CRSACCREF");

                entity.Property(e => e.Crsraccref).HasColumnName("CRSRACCREF");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Prdbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRDBEGDATE");

                entity.Property(e => e.Prdenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRDENDDATE");

                entity.Property(e => e.Prdno).HasColumnName("PRDNO");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<Lg001Appparam>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_APPPARAM_I1");

                entity.ToTable("LG_001_APPPARAM");

                entity.HasIndex(e => e.Usernr, "I001_APPPARAM_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bdgttreeview).HasColumnName("BDGTTREEVIEW");

                entity.Property(e => e.Bttmclgrph).HasColumnName("BTTMCLGRPH");

                entity.Property(e => e.Bttmcustgrph).HasColumnName("BTTMCUSTGRPH");

                entity.Property(e => e.Bttmpprdtgrph).HasColumnName("BTTMPPRDTGRPH");

                entity.Property(e => e.Bttmsprdtgrph).HasColumnName("BTTMSPRDTGRPH");

                entity.Property(e => e.Cltreeview).HasColumnName("CLTREEVIEW");

                entity.Property(e => e.Gnrlsalesgrph).HasColumnName("GNRLSALESGRPH");

                entity.Property(e => e.Itemtreeview).HasColumnName("ITEMTREEVIEW");

                entity.Property(e => e.Itmcharview).HasColumnName("ITMCHARVIEW");

                entity.Property(e => e.Itmliveapply).HasColumnName("ITMLIVEAPPLY");

                entity.Property(e => e.Paydatetype).HasColumnName("PAYDATETYPE");

                entity.Property(e => e.Srvtreeview).HasColumnName("SRVTREEVIEW");

                entity.Property(e => e.Topteninterval).HasColumnName("TOPTENINTERVAL");

                entity.Property(e => e.Toptentype).HasColumnName("TOPTENTYPE");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");

                entity.Property(e => e.Varcharview).HasColumnName("VARCHARVIEW");

                entity.Property(e => e.Varliveapply).HasColumnName("VARLIVEAPPLY");
            });

            modelBuilder.Entity<Lg001Approveuser>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_APPROVEUSER_I1");

                entity.ToTable("LG_001_APPROVEUSER");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recordref).HasColumnName("RECORDREF");

                entity.Property(e => e.Recordtype).HasColumnName("RECORDTYPE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");
            });

            modelBuilder.Entity<Lg001Ascond>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ASCOND_I1");

                entity.ToTable("LG_001_ASCOND");

                entity.HasIndex(e => new { e.Usetype, e.Lineno }, "I001_ASCOND_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Cicodes)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("CICODES");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Itemtype).HasColumnName("ITEMTYPE");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Paycodes)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PAYCODES");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Stcodes)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("STCODES");

                entity.Property(e => e.Usetype).HasColumnName("USETYPE");
            });

            modelBuilder.Entity<Lg001Autoctemplate>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_AUTOCTEMPLATE_I1");

                entity.ToTable("LG_001_AUTOCTEMPLATE");

                entity.HasIndex(e => new { e.Itemref, e.Linenr }, "I001_AUTOCTEMPLATE_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Charabbrev)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CHARABBREV");

                entity.Property(e => e.Charref).HasColumnName("CHARREF");

                entity.Property(e => e.Charvalref).HasColumnName("CHARVALREF");

                entity.Property(e => e.Increment).HasColumnName("INCREMENT_");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Length).HasColumnName("LENGTH");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Send)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SEND");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sstart)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SSTART");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<Lg001Avgcurr>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_AVGCURRS_I1");

                entity.ToTable("LG_001_AVGCURRS");

                entity.HasIndex(e => new { e.Currtype, e.Periodref }, "I001_AVGCURRS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Avgcurrval).HasColumnName("AVGCURRVAL");

                entity.Property(e => e.Currtype).HasColumnName("CURRTYPE");

                entity.Property(e => e.Periodref).HasColumnName("PERIODREF");
            });

            modelBuilder.Entity<Lg001Bankacc>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_BANKACC_I1");

                entity.ToTable("LG_001_BANKACC");

                entity.HasIndex(e => new { e.Bankref, e.Cardtype, e.Code }, "I001_BANKACC_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Code }, "I001_BANKACC_I3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Bankref, e.Active, e.Cardtype, e.Code }, "I001_BANKACC_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Cardtype, e.Code }, "I001_BANKACC_I5");

                entity.HasIndex(e => e.Accountno, "I001_BANKACC_I6");

                entity.HasIndex(e => e.Guid, "I001_BANKACC_I7");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountno)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ACCOUNTNO");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Bankref).HasColumnName("BANKREF");

                entity.Property(e => e.Batchnum)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BATCHNUM");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Checklimit).HasColumnName("CHECKLIMIT");

                entity.Property(e => e.Checkmargin).HasColumnName("CHECKMARGIN");

                entity.Property(e => e.Ckinterest).HasColumnName("CKINTEREST");

                entity.Property(e => e.Code)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Collatrllimit).HasColumnName("COLLATRLLIMIT");

                entity.Property(e => e.Creditcardlimit).HasColumnName("CREDITCARDLIMIT");

                entity.Property(e => e.Creditcardno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CREDITCARDNO");

                entity.Property(e => e.Curratetype).HasColumnName("CURRATETYPE");

                entity.Property(e => e.Currency).HasColumnName("CURRENCY");

                entity.Property(e => e.Custinterest).HasColumnName("CUSTINTEREST");

                entity.Property(e => e.Cutoffday).HasColumnName("CUTOFFDAY");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Defbnaccref).HasColumnName("DEFBNACCREF");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Defksref).HasColumnName("DEFKSREF");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Fonper).HasColumnName("FONPER");

                entity.Property(e => e.Glbbankbranch)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("GLBBANKBRANCH");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Iban)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("IBAN");

                entity.Property(e => e.Kkusage).HasColumnName("KKUSAGE");

                entity.Property(e => e.Lastpaymentday).HasColumnName("LASTPAYMENTDAY");

                entity.Property(e => e.Notelimit).HasColumnName("NOTELIMIT");

                entity.Property(e => e.Notemargin).HasColumnName("NOTEMARGIN");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Posterminalnum)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("POSTERMINALNUM");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Skinterest).HasColumnName("SKINTEREST");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Stopajper).HasColumnName("STOPAJPER");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Usedinperiods).HasColumnName("USEDINPERIODS");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Wthcltrlinterest).HasColumnName("WTHCLTRLINTEREST");

                entity.Property(e => e.Wthcltrllimit).HasColumnName("WTHCLTRLLIMIT");
            });

            modelBuilder.Entity<Lg001Barcodetmp>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_BARCODETMP_I1");

                entity.ToTable("LG_001_BARCODETMP");

                entity.HasIndex(e => e.Code, "I001_BARCODETMP_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Barcodetype).HasColumnName("BARCODETYPE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Controldigit).HasColumnName("CONTROLDIGIT");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Tmpref).HasColumnName("TMPREF");

                entity.Property(e => e.Unitsetlnnr).HasColumnName("UNITSETLNNR");
            });

            modelBuilder.Entity<Lg001Bncard>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_BNCARD_I1");

                entity.ToTable("LG_001_BNCARD");

                entity.HasIndex(e => e.Code, "I001_BNCARD_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Definition, "I001_BNCARD_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_BNCARD_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Definition }, "I001_BNCARD_I5");

                entity.HasIndex(e => e.Guid, "I001_BNCARD_I6");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.Branch)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("BRANCH");

                entity.Property(e => e.Branchno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BRANCHNO");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Cntrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CNTRYCODE");

                entity.Property(e => e.Code)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Corrpacc)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CORRPACC");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.District)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Faxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("FAXNR");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Incharge)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("INCHARGE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Telnrs1)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS1");

                entity.Property(e => e.Telnrs2)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS2");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Town)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Voen)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VOEN");

                entity.Property(e => e.Webaddr)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("WEBADDR");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Bncreditcard>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_BNCREDITCARD_I1");

                entity.ToTable("LG_001_BNCREDITCARD");

                entity.HasIndex(e => new { e.Crcardtype, e.Code }, "I001_BNCREDITCARD_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Crcardtype, e.Name }, "I001_BNCREDITCARD_I3");

                entity.HasIndex(e => e.Begdate, "I001_BNCREDITCARD_I4");

                entity.HasIndex(e => e.Enddate, "I001_BNCREDITCARD_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Bnaccref).HasColumnName("BNACCREF");

                entity.Property(e => e.Bncraccref).HasColumnName("BNCRACCREF");

                entity.Property(e => e.Bncrref).HasColumnName("BNCRREF");

                entity.Property(e => e.Bnref).HasColumnName("BNREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Bsmvrate).HasColumnName("BSMVRATE");

                entity.Property(e => e.Bsmvtotal).HasColumnName("BSMVTOTAL");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Commtotal).HasColumnName("COMMTOTAL");

                entity.Property(e => e.Crcalctype).HasColumnName("CRCALCTYPE");

                entity.Property(e => e.Crcardtype).HasColumnName("CRCARDTYPE");

                entity.Property(e => e.Createbnfiche).HasColumnName("CREATEBNFICHE");

                entity.Property(e => e.Credittype).HasColumnName("CREDITTYPE");

                entity.Property(e => e.Crestatus).HasColumnName("CRESTATUS");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Duedate).HasColumnName("DUEDATE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Gksno)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("GKSNO");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Intrate).HasColumnName("INTRATE");

                entity.Property(e => e.Inttotal).HasColumnName("INTTOTAL");

                entity.Property(e => e.Kkdfrate).HasColumnName("KKDFRATE");

                entity.Property(e => e.Kkdftotal).HasColumnName("KKDFTOTAL");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Parentref).HasColumnName("PARENTREF");

                entity.Property(e => e.Paybegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PAYBEGDATE");

                entity.Property(e => e.Periodendpay).HasColumnName("PERIODENDPAY");

                entity.Property(e => e.Ppiasdebt).HasColumnName("PPIASDEBT");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Repayplanref).HasColumnName("REPAYPLANREF");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Reversepayment).HasColumnName("REVERSEPAYMENT");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Structdate)
                    .HasColumnType("datetime")
                    .HasColumnName("STRUCTDATE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trrateacc).HasColumnName("TRRATEACC");

                entity.Property(e => e.Trratecr).HasColumnName("TRRATECR");

                entity.Property(e => e.Trtotal).HasColumnName("TRTOTAL");

                entity.Property(e => e.Valorcalc).HasColumnName("VALORCALC");
            });

            modelBuilder.Entity<Lg001Bncrepaytr>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_BNCREPAYTR_I1");

                entity.ToTable("LG_001_BNCREPAYTR");

                entity.HasIndex(e => e.Creditref, "I001_BNCREPAYTR_I2");

                entity.HasIndex(e => e.Duedate, "I001_BNCREPAYTR_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bnaccref).HasColumnName("BNACCREF");

                entity.Property(e => e.Bncrparentref).HasColumnName("BNCRPARENTREF");

                entity.Property(e => e.Bnfchref).HasColumnName("BNFCHREF");

                entity.Property(e => e.Bsmvrate).HasColumnName("BSMVRATE");

                entity.Property(e => e.Bsmvtotal).HasColumnName("BSMVTOTAL");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Creditref).HasColumnName("CREDITREF");

                entity.Property(e => e.Duedate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUEDATE");

                entity.Property(e => e.Earlyintrate).HasColumnName("EARLYINTRATE");

                entity.Property(e => e.Earlyinttot).HasColumnName("EARLYINTTOT");

                entity.Property(e => e.Fromcreditclose).HasColumnName("FROMCREDITCLOSE");

                entity.Property(e => e.Intrate).HasColumnName("INTRATE");

                entity.Property(e => e.Inttotal).HasColumnName("INTTOTAL");

                entity.Property(e => e.Kkdftotal).HasColumnName("KKDFTOTAL");

                entity.Property(e => e.Lateintrate).HasColumnName("LATEINTRATE");

                entity.Property(e => e.Lateinttot).HasColumnName("LATEINTTOT");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Modified).HasColumnName("MODIFIED");

                entity.Property(e => e.Oprdate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPRDATE");

                entity.Property(e => e.Orglogicalref).HasColumnName("ORGLOGICALREF");

                entity.Property(e => e.Parentref).HasColumnName("PARENTREF");

                entity.Property(e => e.Pernr).HasColumnName("PERNR");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Sbsmvrate).HasColumnName("SBSMVRATE");

                entity.Property(e => e.Sintrate).HasColumnName("SINTRATE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Structed).HasColumnName("STRUCTED");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Tranlineexp)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TRANLINEEXP");

                entity.Property(e => e.Transpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("TRANSPECODE");

                entity.Property(e => e.Transtype).HasColumnName("TRANSTYPE");

                entity.Property(e => e.Trrateacc).HasColumnName("TRRATEACC");

                entity.Property(e => e.Trratecr).HasColumnName("TRRATECR");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Bomaster>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_BOMASTER_I1");

                entity.ToTable("LG_001_BOMASTER");

                entity.HasIndex(e => new { e.Bomtype, e.Code }, "I001_BOMASTER_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Bomtype, e.Name }, "I001_BOMASTER_I3");

                entity.HasIndex(e => e.Mainprodref, "I001_BOMASTER_I4");

                entity.HasIndex(e => new { e.Active, e.Bomtype, e.Code }, "I001_BOMASTER_I5")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Bomtype, e.Name }, "I001_BOMASTER_I6");

                entity.HasIndex(e => new { e.Active, e.Validrevref, e.Bomtype }, "I001_BOMASTER_I7");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.Bomtype).HasColumnName("BOMTYPE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Demontaj).HasColumnName("DEMONTAJ");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Mainprodref).HasColumnName("MAINPRODREF");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Name2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Productlineref).HasColumnName("PRODUCTLINEREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Routingref).HasColumnName("ROUTINGREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Validrevref).HasColumnName("VALIDREVREF");

                entity.Property(e => e.Variabledefs1)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS1");

                entity.Property(e => e.Variabledefs10)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS10");

                entity.Property(e => e.Variabledefs2)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS2");

                entity.Property(e => e.Variabledefs3)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS3");

                entity.Property(e => e.Variabledefs4)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS4");

                entity.Property(e => e.Variabledefs5)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS5");

                entity.Property(e => e.Variabledefs6)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS6");

                entity.Property(e => e.Variabledefs7)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS7");

                entity.Property(e => e.Variabledefs8)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS8");

                entity.Property(e => e.Variabledefs9)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS9");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Bomline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_BOMLINE_I1");

                entity.ToTable("LG_001_BOMLINE");

                entity.HasIndex(e => new { e.Bomrevref, e.Lineno }, "I001_BOMLINE_I2");

                entity.HasIndex(e => new { e.Bomrevref, e.Prevlineref }, "I001_BOMLINE_I3");

                entity.HasIndex(e => e.Itemref, "I001_BOMLINE_I4");

                entity.HasIndex(e => e.Production, "I001_BOMLINE_I5");

                entity.HasIndex(e => e.Nextlevrevref, "I001_BOMLINE_I6");

                entity.HasIndex(e => e.Outitemref, "I001_BOMLINE_I7");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Altitemuse).HasColumnName("ALTITEMUSE");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Bomlineexp)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BOMLINEEXP");

                entity.Property(e => e.Bommasterref).HasColumnName("BOMMASTERREF");

                entity.Property(e => e.Bomrevref).HasColumnName("BOMREVREF");

                entity.Property(e => e.Bomtype).HasColumnName("BOMTYPE");

                entity.Property(e => e.Bydefaultexists).HasColumnName("BYDEFAULTEXISTS");

                entity.Property(e => e.Cost).HasColumnName("COST");

                entity.Property(e => e.Costrate).HasColumnName("COSTRATE");

                entity.Property(e => e.Defcosttype).HasColumnName("DEFCOSTTYPE");

                entity.Property(e => e.Detline).HasColumnName("DETLINE");

                entity.Property(e => e.Dref).HasColumnName("DREF");

                entity.Property(e => e.Effectoptime).HasColumnName("EFFECTOPTIME");

                entity.Property(e => e.Engineering).HasColumnName("ENGINEERING");

                entity.Property(e => e.Formula)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA");

                entity.Property(e => e.Formulaitemref).HasColumnName("FORMULAITEMREF");

                entity.Property(e => e.Grossuinfo1).HasColumnName("GROSSUINFO1");

                entity.Property(e => e.Grossuinfo2).HasColumnName("GROSSUINFO2");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineclstype).HasColumnName("LINECLSTYPE");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Nextlevbomtype).HasColumnName("NEXTLEVBOMTYPE");

                entity.Property(e => e.Nextlevelbomref).HasColumnName("NEXTLEVELBOMREF");

                entity.Property(e => e.Nextlevrevref).HasColumnName("NEXTLEVREVREF");

                entity.Property(e => e.Operationref).HasColumnName("OPERATIONREF");

                entity.Property(e => e.Optional).HasColumnName("OPTIONAL");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Outitemref).HasColumnName("OUTITEMREF");

                entity.Property(e => e.Overlapmethod).HasColumnName("OVERLAPMETHOD");

                entity.Property(e => e.Overlaptype).HasColumnName("OVERLAPTYPE");

                entity.Property(e => e.Overlapunit).HasColumnName("OVERLAPUNIT");

                entity.Property(e => e.Overlapvalue).HasColumnName("OVERLAPVALUE");

                entity.Property(e => e.Overlapwith).HasColumnName("OVERLAPWITH");

                entity.Property(e => e.Prevlineref).HasColumnName("PREVLINEREF");

                entity.Property(e => e.Production).HasColumnName("PRODUCTION");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Routlineref).HasColumnName("ROUTLINEREF");

                entity.Property(e => e.Scalable).HasColumnName("SCALABLE");

                entity.Property(e => e.Scrapcalc).HasColumnName("SCRAPCALC");

                entity.Property(e => e.Scrapfact).HasColumnName("SCRAPFACT");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Tempinuse).HasColumnName("TEMPINUSE");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Usestdcost).HasColumnName("USESTDCOST");

                entity.Property(e => e.Usref).HasColumnName("USREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Bomparam>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_BOMPARAM_I1");

                entity.ToTable("LG_001_BOMPARAM");

                entity.HasIndex(e => new { e.Bommasterref, e.Paramref }, "I001_BOMPARAM_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bommasterref).HasColumnName("BOMMASTERREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Paramdefault).HasColumnName("PARAMDEFAULT");

                entity.Property(e => e.Paramref).HasColumnName("PARAMREF");
            });

            modelBuilder.Entity<Lg001Bomrevsn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_BOMREVSN_I1");

                entity.ToTable("LG_001_BOMREVSN");

                entity.HasIndex(e => new { e.Bommasterref, e.Code }, "I001_BOMREVSN_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_BOMREVSN_I3");

                entity.HasIndex(e => new { e.Active, e.Bommasterref, e.Code }, "I001_BOMREVSN_I4");

                entity.HasIndex(e => new { e.Bommasterref, e.Code }, "I001_BOMREVSN_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Bommasterref).HasColumnName("BOMMASTERREF");

                entity.Property(e => e.Bomtype).HasColumnName("BOMTYPE");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Engchgref).HasColumnName("ENGCHGREF");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Lowlevelcodes1).HasColumnName("LOWLEVELCODES1");

                entity.Property(e => e.Lowlevelcodes10).HasColumnName("LOWLEVELCODES10");

                entity.Property(e => e.Lowlevelcodes2).HasColumnName("LOWLEVELCODES2");

                entity.Property(e => e.Lowlevelcodes3).HasColumnName("LOWLEVELCODES3");

                entity.Property(e => e.Lowlevelcodes4).HasColumnName("LOWLEVELCODES4");

                entity.Property(e => e.Lowlevelcodes5).HasColumnName("LOWLEVELCODES5");

                entity.Property(e => e.Lowlevelcodes6).HasColumnName("LOWLEVELCODES6");

                entity.Property(e => e.Lowlevelcodes7).HasColumnName("LOWLEVELCODES7");

                entity.Property(e => e.Lowlevelcodes8).HasColumnName("LOWLEVELCODES8");

                entity.Property(e => e.Lowlevelcodes9).HasColumnName("LOWLEVELCODES9");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Opreqref).HasColumnName("OPREQREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Overlapamnt).HasColumnName("OVERLAPAMNT");

                entity.Property(e => e.Overlapperc).HasColumnName("OVERLAPPERC");

                entity.Property(e => e.Overlaptype).HasColumnName("OVERLAPTYPE");

                entity.Property(e => e.Pegguid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("PEGGUID");

                entity.Property(e => e.Pegtype).HasColumnName("PEGTYPE");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Qtydepduration).HasColumnName("QTYDEPDURATION");

                entity.Property(e => e.Qtydepttime).HasColumnName("QTYDEPTTIME");

                entity.Property(e => e.Qtyindepduration).HasColumnName("QTYINDEPDURATION");

                entity.Property(e => e.Qtyundepttime).HasColumnName("QTYUNDEPTTIME");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Revdate)
                    .HasColumnType("datetime")
                    .HasColumnName("REVDATE");

                entity.Property(e => e.Routingref).HasColumnName("ROUTINGREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Stdovhdformula)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDFORMULA");

                entity.Property(e => e.Stdovhdformula10)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDFORMULA10");

                entity.Property(e => e.Stdovhdformula2)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDFORMULA2");

                entity.Property(e => e.Stdovhdformula3)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDFORMULA3");

                entity.Property(e => e.Stdovhdformula4)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDFORMULA4");

                entity.Property(e => e.Stdovhdformula5)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDFORMULA5");

                entity.Property(e => e.Stdovhdformula6)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDFORMULA6");

                entity.Property(e => e.Stdovhdformula7)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDFORMULA7");

                entity.Property(e => e.Stdovhdformula8)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDFORMULA8");

                entity.Property(e => e.Stdovhdformula9)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDFORMULA9");

                entity.Property(e => e.Stdovhdrpformula)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDRPFORMULA");

                entity.Property(e => e.Stdovhdrpformula10)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDRPFORMULA10");

                entity.Property(e => e.Stdovhdrpformula2)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDRPFORMULA2");

                entity.Property(e => e.Stdovhdrpformula3)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDRPFORMULA3");

                entity.Property(e => e.Stdovhdrpformula4)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDRPFORMULA4");

                entity.Property(e => e.Stdovhdrpformula5)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDRPFORMULA5");

                entity.Property(e => e.Stdovhdrpformula6)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDRPFORMULA6");

                entity.Property(e => e.Stdovhdrpformula7)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDRPFORMULA7");

                entity.Property(e => e.Stdovhdrpformula8)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDRPFORMULA8");

                entity.Property(e => e.Stdovhdrpformula9)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDRPFORMULA9");

                entity.Property(e => e.Usedepttimeforprd).HasColumnName("USEDEPTTIMEFORPRD");

                entity.Property(e => e.Usewsforprd).HasColumnName("USEWSFORPRD");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Withoutrouting).HasColumnName("WITHOUTROUTING");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");

                entity.Property(e => e.Wstype).HasColumnName("WSTYPE");
            });

            modelBuilder.Entity<Lg001Bomvrntformula>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_BOMVRNTFORMULA_I1");

                entity.ToTable("LG_001_BOMVRNTFORMULA");

                entity.HasIndex(e => new { e.Bomlref, e.Typ, e.Linenr }, "I001_BOMVRNTFORMULA_I2");

                entity.HasIndex(e => new { e.Bomlref, e.Typ, e.Asgtyp }, "I001_BOMVRNTFORMULA_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Asgtyp).HasColumnName("ASGTYP");

                entity.Property(e => e.Bomlref).HasColumnName("BOMLREF");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Isitemrefcboml).HasColumnName("ISITEMREFCBOML");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Logicop).HasColumnName("LOGICOP");

                entity.Property(e => e.Maincharref).HasColumnName("MAINCHARREF");

                entity.Property(e => e.Mainitemref).HasColumnName("MAINITEMREF");

                entity.Property(e => e.Mainvalref).HasColumnName("MAINVALREF");

                entity.Property(e => e.Operator).HasColumnName("OPERATOR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<Lg001Campaign>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_CAMPAIGN_I1");

                entity.ToTable("LG_001_CAMPAIGN");

                entity.HasIndex(e => new { e.Cardtype, e.Code }, "I001_CAMPAIGN_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Name }, "I001_CAMPAIGN_I3");

                entity.HasIndex(e => new { e.Cardtype, e.Active, e.Code }, "I001_CAMPAIGN_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Active, e.Name }, "I001_CAMPAIGN_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Citycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CITYCODE");

                entity.Property(e => e.Clapplycount).HasColumnName("CLAPPLYCOUNT");

                entity.Property(e => e.Clcyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLCYPHCODE");

                entity.Property(e => e.Clientcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTCODE");

                entity.Property(e => e.Clspecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLSPECODE");

                entity.Property(e => e.Clspecode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLSPECODE2");

                entity.Property(e => e.Clspecode3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLSPECODE3");

                entity.Property(e => e.Clspecode4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLSPECODE4");

                entity.Property(e => e.Clspecode5)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLSPECODE5");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Districtcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICTCODE");

                entity.Property(e => e.Doccyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCCYPHCODE");

                entity.Property(e => e.Docdocode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCDOCODE");

                entity.Property(e => e.Docspecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCSPECODE");

                entity.Property(e => e.Dontfixlines).HasColumnName("DONTFIXLINES");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Payplancode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANCODE");

                entity.Property(e => e.Ppgroupcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PPGROUPCODE");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Prioritygrp)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PRIORITYGRP");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Towncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TOWNCODE");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Variabledefs1)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS1");

                entity.Property(e => e.Variabledefs2)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS2");

                entity.Property(e => e.Variabledefs21)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS21");

                entity.Property(e => e.Variabledefs22)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS22");

                entity.Property(e => e.Variabledefs23)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS23");

                entity.Property(e => e.Variabledefs24)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS24");

                entity.Property(e => e.Variabledefs25)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS25");

                entity.Property(e => e.Variabledefs3)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS3");

                entity.Property(e => e.Variabledefs31)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS31");

                entity.Property(e => e.Variabledefs310)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS310");

                entity.Property(e => e.Variabledefs32)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS32");

                entity.Property(e => e.Variabledefs33)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS33");

                entity.Property(e => e.Variabledefs34)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS34");

                entity.Property(e => e.Variabledefs35)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS35");

                entity.Property(e => e.Variabledefs36)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS36");

                entity.Property(e => e.Variabledefs37)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS37");

                entity.Property(e => e.Variabledefs38)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS38");

                entity.Property(e => e.Variabledefs39)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS39");

                entity.Property(e => e.Variabledefs4)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS4");

                entity.Property(e => e.Variabledefs5)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("VARIABLEDEFS5");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Cashflowdef>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_CASHFLOWDEF_I1");

                entity.ToTable("LG_001_CASHFLOWDEF");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<Lg001Changelog>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_CHANGELOG_I1");

                entity.ToTable("LG_001_CHANGELOG");

                entity.HasIndex(e => e.Date, "I001_CHANGELOG_I2");

                entity.HasIndex(e => new { e.Recordref, e.Moduletype }, "I001_CHANGELOG_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Description)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Formid).HasColumnName("FORMID");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Moduletype).HasColumnName("MODULETYPE");

                entity.Property(e => e.Operation).HasColumnName("OPERATION");

                entity.Property(e => e.Period).HasColumnName("PERIOD");

                entity.Property(e => e.Recordref).HasColumnName("RECORDREF");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");
            });

            modelBuilder.Entity<Lg001Charasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_CHARASGN_I1");

                entity.ToTable("LG_001_CHARASGN");

                entity.HasIndex(e => new { e.Itemref, e.Charcoderef, e.Charvalref }, "I001_CHARASGN_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Charcoderef, e.Charvalref, e.Itemref }, "I001_CHARASGN_I3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Itemref, e.Linenr }, "I001_CHARASGN_I4");

                entity.HasIndex(e => new { e.Charvalref, e.Charcoderef, e.Itemref }, "I001_CHARASGN_I5")
                    .IsUnique();

                entity.HasIndex(e => new { e.Charcoderef, e.Itemref, e.Charvalref }, "I001_CHARASGN_I6")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Charcoderef).HasColumnName("CHARCODEREF");

                entity.Property(e => e.Charvalref).HasColumnName("CHARVALREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Matrixloc).HasColumnName("MATRIXLOC");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            });

            modelBuilder.Entity<Lg001Charcode>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_CHARCODE_I1");

                entity.ToTable("LG_001_CHARCODE");

                entity.HasIndex(e => e.Code, "I001_CHARCODE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_CHARCODE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Name2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Charset>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_CHARSET_I1");

                entity.ToTable("LG_001_CHARSET");

                entity.HasIndex(e => e.Code, "I001_CHARSET_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_CHARSET_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");
            });

            modelBuilder.Entity<Lg001Charsetasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_CHARSETASGN_I1");

                entity.ToTable("LG_001_CHARSETASGN");

                entity.HasIndex(e => new { e.Charsetref, e.Charcoderef }, "I001_CHARSETASGN_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Charcoderef, e.Charsetref }, "I001_CHARSETASGN_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Charcoderef).HasColumnName("CHARCODEREF");

                entity.Property(e => e.Charsetref).HasColumnName("CHARSETREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<Lg001Charval>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_CHARVAL_I1");

                entity.ToTable("LG_001_CHARVAL");

                entity.HasIndex(e => new { e.Charcoderef, e.Valno }, "I001_CHARVAL_I2");

                entity.HasIndex(e => new { e.Charcoderef, e.Code }, "I001_CHARVAL_I3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Charcoderef, e.Name }, "I001_CHARVAL_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Charcoderef).HasColumnName("CHARCODEREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Name2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Valno).HasColumnName("VALNO");
            });

            modelBuilder.Entity<Lg001Clcard>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_CLCARD_I1");

                entity.ToTable("LG_001_CLCARD");

                entity.HasIndex(e => new { e.Purchbrws, e.Active, e.Code }, "I001_CLCARD_I10")
                    .IsUnique();

                entity.HasIndex(e => new { e.Salesbrws, e.Active, e.Code }, "I001_CLCARD_I11")
                    .IsUnique();

                entity.HasIndex(e => new { e.Impbrws, e.Active, e.Code }, "I001_CLCARD_I12")
                    .IsUnique();

                entity.HasIndex(e => new { e.Expbrws, e.Active, e.Code }, "I001_CLCARD_I13")
                    .IsUnique();

                entity.HasIndex(e => new { e.Finbrws, e.Active, e.Code }, "I001_CLCARD_I14")
                    .IsUnique();

                entity.HasIndex(e => new { e.Purchbrws, e.Active, e.Definition }, "I001_CLCARD_I15");

                entity.HasIndex(e => new { e.Salesbrws, e.Active, e.Definition }, "I001_CLCARD_I16");

                entity.HasIndex(e => new { e.Impbrws, e.Active, e.Definition }, "I001_CLCARD_I17");

                entity.HasIndex(e => new { e.Expbrws, e.Active, e.Definition }, "I001_CLCARD_I18");

                entity.HasIndex(e => new { e.Finbrws, e.Active, e.Definition }, "I001_CLCARD_I19");

                entity.HasIndex(e => e.Code, "I001_CLCARD_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Cardtype, e.Recstatus, e.Storecreditcardno }, "I001_CLCARD_I20");

                entity.HasIndex(e => e.Taxnr, "I001_CLCARD_I21");

                entity.HasIndex(e => e.Globalid, "I001_CLCARD_I22");

                entity.HasIndex(e => e.Guid, "I001_CLCARD_I23");

                entity.HasIndex(e => e.Definition, "I001_CLCARD_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_CLCARD_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Definition }, "I001_CLCARD_I5");

                entity.HasIndex(e => e.Logoid, "I001_CLCARD_I6");

                entity.HasIndex(e => new { e.Cardtype, e.Parentclref }, "I001_CLCARD_I7");

                entity.HasIndex(e => new { e.Active, e.Cardtype }, "I001_CLCARD_I8");

                entity.HasIndex(e => new { e.Lowlevelcodes1, e.Lowlevelcodes2, e.Lowlevelcodes3, e.Lowlevelcodes4, e.Lowlevelcodes5, e.Lowlevelcodes6, e.Lowlevelcodes7, e.Logicalref }, "I001_CLCARD_I9")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Acceptedesp).HasColumnName("ACCEPTEDESP");

                entity.Property(e => e.Accepteinv).HasColumnName("ACCEPTEINV");

                entity.Property(e => e.Accepteinvpublic).HasColumnName("ACCEPTEINVPUBLIC");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.Addtoreflist).HasColumnName("ADDTOREFLIST");

                entity.Property(e => e.Adressno)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSNO");

                entity.Property(e => e.Appleid)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("APPLEID");

                entity.Property(e => e.Arpquoteinc).HasColumnName("ARPQUOTEINC");

                entity.Property(e => e.Autopaidbank)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("AUTOPAIDBANK");

                entity.Property(e => e.Bankaccounts1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS1");

                entity.Property(e => e.Bankaccounts2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS2");

                entity.Property(e => e.Bankaccounts3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS3");

                entity.Property(e => e.Bankaccounts4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS4");

                entity.Property(e => e.Bankaccounts5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS5");

                entity.Property(e => e.Bankaccounts6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS6");

                entity.Property(e => e.Bankaccounts7)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS7");

                entity.Property(e => e.Bankbcurrency1)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BANKBCURRENCY1");

                entity.Property(e => e.Bankbcurrency2)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BANKBCURRENCY2");

                entity.Property(e => e.Bankbcurrency3)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BANKBCURRENCY3");

                entity.Property(e => e.Bankbcurrency4)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BANKBCURRENCY4");

                entity.Property(e => e.Bankbcurrency5)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BANKBCURRENCY5");

                entity.Property(e => e.Bankbcurrency6)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BANKBCURRENCY6");

                entity.Property(e => e.Bankbcurrency7)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BANKBCURRENCY7");

                entity.Property(e => e.Bankbics1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKBICS1");

                entity.Property(e => e.Bankbics2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKBICS2");

                entity.Property(e => e.Bankbics3)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKBICS3");

                entity.Property(e => e.Bankbics4)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKBICS4");

                entity.Property(e => e.Bankbics5)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKBICS5");

                entity.Property(e => e.Bankbics6)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKBICS6");

                entity.Property(e => e.Bankbics7)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKBICS7");

                entity.Property(e => e.Bankbranchs1)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS1");

                entity.Property(e => e.Bankbranchs2)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS2");

                entity.Property(e => e.Bankbranchs3)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS3");

                entity.Property(e => e.Bankbranchs4)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS4");

                entity.Property(e => e.Bankbranchs5)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS5");

                entity.Property(e => e.Bankbranchs6)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS6");

                entity.Property(e => e.Bankbranchs7)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS7");

                entity.Property(e => e.Bankcorrpacc1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKCORRPACC1");

                entity.Property(e => e.Bankcorrpacc2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKCORRPACC2");

                entity.Property(e => e.Bankcorrpacc3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKCORRPACC3");

                entity.Property(e => e.Bankcorrpacc4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKCORRPACC4");

                entity.Property(e => e.Bankcorrpacc5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKCORRPACC5");

                entity.Property(e => e.Bankcorrpacc6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKCORRPACC6");

                entity.Property(e => e.Bankcorrpacc7)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKCORRPACC7");

                entity.Property(e => e.Bankibans1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKIBANS1");

                entity.Property(e => e.Bankibans2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKIBANS2");

                entity.Property(e => e.Bankibans3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKIBANS3");

                entity.Property(e => e.Bankibans4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKIBANS4");

                entity.Property(e => e.Bankibans5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKIBANS5");

                entity.Property(e => e.Bankibans6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKIBANS6");

                entity.Property(e => e.Bankibans7)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKIBANS7");

                entity.Property(e => e.Banknames1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAMES1");

                entity.Property(e => e.Banknames2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAMES2");

                entity.Property(e => e.Banknames3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAMES3");

                entity.Property(e => e.Banknames4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAMES4");

                entity.Property(e => e.Banknames5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAMES5");

                entity.Property(e => e.Banknames6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAMES6");

                entity.Property(e => e.Banknames7)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAMES7");

                entity.Property(e => e.Bankvoen1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKVOEN1");

                entity.Property(e => e.Bankvoen2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKVOEN2");

                entity.Property(e => e.Bankvoen3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKVOEN3");

                entity.Property(e => e.Bankvoen4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKVOEN4");

                entity.Property(e => e.Bankvoen5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKVOEN5");

                entity.Property(e => e.Bankvoen6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKVOEN6");

                entity.Property(e => e.Bankvoen7)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKVOEN7");

                entity.Property(e => e.Blocked).HasColumnName("BLOCKED");

                entity.Property(e => e.Brokercomp).HasColumnName("BROKERCOMP");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Cashref).HasColumnName("CASHREF");

                entity.Property(e => e.Ccurrency).HasColumnName("CCURRENCY");

                entity.Property(e => e.Cellphone)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("CELLPHONE");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Citycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CITYCODE");

                entity.Property(e => e.Cityid)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("CITYID");

                entity.Property(e => e.Clanguage).HasColumnName("CLANGUAGE");

                entity.Property(e => e.Clccandeduct).HasColumnName("CLCCANDEDUCT");

                entity.Property(e => e.Clcrm).HasColumnName("CLCRM");

                entity.Property(e => e.Clordfreq).HasColumnName("CLORDFREQ");

                entity.Property(e => e.Closedatecount).HasColumnName("CLOSEDATECOUNT");

                entity.Property(e => e.Closedatetrack).HasColumnName("CLOSEDATETRACK");

                entity.Property(e => e.Code)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Collectinvoicing).HasColumnName("COLLECTINVOICING");

                entity.Property(e => e.Conscoderef).HasColumnName("CONSCODEREF");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.Cratediffproc).HasColumnName("CRATEDIFFPROC");

                entity.Property(e => e.Createwhfiche).HasColumnName("CREATEWHFICHE");

                entity.Property(e => e.Curratetype).HasColumnName("CURRATETYPE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Dbsbankcurrency1).HasColumnName("DBSBANKCURRENCY1");

                entity.Property(e => e.Dbsbankcurrency2).HasColumnName("DBSBANKCURRENCY2");

                entity.Property(e => e.Dbsbankcurrency3).HasColumnName("DBSBANKCURRENCY3");

                entity.Property(e => e.Dbsbankcurrency4).HasColumnName("DBSBANKCURRENCY4");

                entity.Property(e => e.Dbsbankcurrency5).HasColumnName("DBSBANKCURRENCY5");

                entity.Property(e => e.Dbsbankcurrency6).HasColumnName("DBSBANKCURRENCY6");

                entity.Property(e => e.Dbsbankcurrency7).HasColumnName("DBSBANKCURRENCY7");

                entity.Property(e => e.Dbsbankno1).HasColumnName("DBSBANKNO1");

                entity.Property(e => e.Dbsbankno2).HasColumnName("DBSBANKNO2");

                entity.Property(e => e.Dbsbankno3).HasColumnName("DBSBANKNO3");

                entity.Property(e => e.Dbsbankno4).HasColumnName("DBSBANKNO4");

                entity.Property(e => e.Dbsbankno5).HasColumnName("DBSBANKNO5");

                entity.Property(e => e.Dbsbankno6).HasColumnName("DBSBANKNO6");

                entity.Property(e => e.Dbsbankno7).HasColumnName("DBSBANKNO7");

                entity.Property(e => e.Dbslimit1).HasColumnName("DBSLIMIT1");

                entity.Property(e => e.Dbslimit2).HasColumnName("DBSLIMIT2");

                entity.Property(e => e.Dbslimit3).HasColumnName("DBSLIMIT3");

                entity.Property(e => e.Dbslimit4).HasColumnName("DBSLIMIT4");

                entity.Property(e => e.Dbslimit5).HasColumnName("DBSLIMIT5");

                entity.Property(e => e.Dbslimit6).HasColumnName("DBSLIMIT6");

                entity.Property(e => e.Dbslimit7).HasColumnName("DBSLIMIT7");

                entity.Property(e => e.Dbsriskcntrl1).HasColumnName("DBSRISKCNTRL1");

                entity.Property(e => e.Dbsriskcntrl2).HasColumnName("DBSRISKCNTRL2");

                entity.Property(e => e.Dbsriskcntrl3).HasColumnName("DBSRISKCNTRL3");

                entity.Property(e => e.Dbsriskcntrl4).HasColumnName("DBSRISKCNTRL4");

                entity.Property(e => e.Dbsriskcntrl5).HasColumnName("DBSRISKCNTRL5");

                entity.Property(e => e.Dbsriskcntrl6).HasColumnName("DBSRISKCNTRL6");

                entity.Property(e => e.Dbsriskcntrl7).HasColumnName("DBSRISKCNTRL7");

                entity.Property(e => e.Dbstotal1).HasColumnName("DBSTOTAL1");

                entity.Property(e => e.Dbstotal2).HasColumnName("DBSTOTAL2");

                entity.Property(e => e.Dbstotal3).HasColumnName("DBSTOTAL3");

                entity.Property(e => e.Dbstotal4).HasColumnName("DBSTOTAL4");

                entity.Property(e => e.Dbstotal5).HasColumnName("DBSTOTAL5");

                entity.Property(e => e.Dbstotal6).HasColumnName("DBSTOTAL6");

                entity.Property(e => e.Dbstotal7).HasColumnName("DBSTOTAL7");

                entity.Property(e => e.Defbnaccref).HasColumnName("DEFBNACCREF");

                entity.Property(e => e.Definition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Definition2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION2");

                entity.Property(e => e.Degactive).HasColumnName("DEGACTIVE");

                entity.Property(e => e.Degcurr).HasColumnName("DEGCURR");

                entity.Property(e => e.Deliveryfirm)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DELIVERYFIRM");

                entity.Property(e => e.Deliverymethod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DELIVERYMETHOD");

                entity.Property(e => e.Discrate).HasColumnName("DISCRATE");

                entity.Property(e => e.Disctype).HasColumnName("DISCTYPE");

                entity.Property(e => e.Dispprintcnt).HasColumnName("DISPPRINTCNT");

                entity.Property(e => e.District)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Districtcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICTCODE");

                entity.Property(e => e.Driverref).HasColumnName("DRIVERREF");

                entity.Property(e => e.Dspsendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("DSPSENDEMAILADDR");

                entity.Property(e => e.Dspsendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DSPSENDFAXNR");

                entity.Property(e => e.Dspsendformat).HasColumnName("DSPSENDFORMAT");

                entity.Property(e => e.Dspsendmethod).HasColumnName("DSPSENDMETHOD");

                entity.Property(e => e.Duedatecontrol1).HasColumnName("DUEDATECONTROL1");

                entity.Property(e => e.Duedatecontrol10).HasColumnName("DUEDATECONTROL10");

                entity.Property(e => e.Duedatecontrol11).HasColumnName("DUEDATECONTROL11");

                entity.Property(e => e.Duedatecontrol12).HasColumnName("DUEDATECONTROL12");

                entity.Property(e => e.Duedatecontrol13).HasColumnName("DUEDATECONTROL13");

                entity.Property(e => e.Duedatecontrol14).HasColumnName("DUEDATECONTROL14");

                entity.Property(e => e.Duedatecontrol15).HasColumnName("DUEDATECONTROL15");

                entity.Property(e => e.Duedatecontrol2).HasColumnName("DUEDATECONTROL2");

                entity.Property(e => e.Duedatecontrol3).HasColumnName("DUEDATECONTROL3");

                entity.Property(e => e.Duedatecontrol4).HasColumnName("DUEDATECONTROL4");

                entity.Property(e => e.Duedatecontrol5).HasColumnName("DUEDATECONTROL5");

                entity.Property(e => e.Duedatecontrol6).HasColumnName("DUEDATECONTROL6");

                entity.Property(e => e.Duedatecontrol7).HasColumnName("DUEDATECONTROL7");

                entity.Property(e => e.Duedatecontrol8).HasColumnName("DUEDATECONTROL8");

                entity.Property(e => e.Duedatecontrol9).HasColumnName("DUEDATECONTROL9");

                entity.Property(e => e.Duedatecount).HasColumnName("DUEDATECOUNT");

                entity.Property(e => e.Duedatelimit).HasColumnName("DUEDATELIMIT");

                entity.Property(e => e.Duedatetrack).HasColumnName("DUEDATETRACK");

                entity.Property(e => e.Earcemailaddr1)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EARCEMAILADDR1");

                entity.Property(e => e.Earcemailaddr2)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EARCEMAILADDR2");

                entity.Property(e => e.Earcemailaddr3)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EARCEMAILADDR3");

                entity.Property(e => e.Ebankno).HasColumnName("EBANKNO");

                entity.Property(e => e.Ebusdatasendtype).HasColumnName("EBUSDATASENDTYPE");

                entity.Property(e => e.Edino)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EDINO");

                entity.Property(e => e.Einvcustom).HasColumnName("EINVCUSTOM");

                entity.Property(e => e.Einvoiceid)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("EINVOICEID");

                entity.Property(e => e.Einvoicetyp).HasColumnName("EINVOICETYP");

                entity.Property(e => e.Einvoicetype).HasColumnName("EINVOICETYPE");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Emailaddr2)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR2");

                entity.Property(e => e.Emailaddr3)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR3");

                entity.Property(e => e.Excntryref).HasColumnName("EXCNTRYREF");

                entity.Property(e => e.Excntrytyp).HasColumnName("EXCNTRYTYP");

                entity.Property(e => e.Eximbrbankref).HasColumnName("EXIMBRBANKREF");

                entity.Property(e => e.Eximcnsltclref).HasColumnName("EXIMCNSLTCLREF");

                entity.Property(e => e.Eximcustomref).HasColumnName("EXIMCUSTOMREF");

                entity.Property(e => e.Eximfrghtclref).HasColumnName("EXIMFRGHTCLREF");

                entity.Property(e => e.Eximntfyclref).HasColumnName("EXIMNTFYCLREF");

                entity.Property(e => e.Eximpaytypref).HasColumnName("EXIMPAYTYPREF");

                entity.Property(e => e.Eximregtypref).HasColumnName("EXIMREGTYPREF");

                entity.Property(e => e.Eximsendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EXIMSENDEMAILADDR");

                entity.Property(e => e.Eximsendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("EXIMSENDFAXNR");

                entity.Property(e => e.Eximsendformat).HasColumnName("EXIMSENDFORMAT");

                entity.Property(e => e.Eximsendmethod).HasColumnName("EXIMSENDMETHOD");

                entity.Property(e => e.Expbrws).HasColumnName("EXPBRWS");

                entity.Property(e => e.Expbustypref).HasColumnName("EXPBUSTYPREF");

                entity.Property(e => e.Expdocno)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("EXPDOCNO");

                entity.Property(e => e.Expregno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EXPREGNO");

                entity.Property(e => e.Extaccessflags).HasColumnName("EXTACCESSFLAGS");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Extsendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EXTSENDEMAILADDR");

                entity.Property(e => e.Extsendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("EXTSENDFAXNR");

                entity.Property(e => e.Extsendformat).HasColumnName("EXTSENDFORMAT");

                entity.Property(e => e.Extsendmethod).HasColumnName("EXTSENDMETHOD");

                entity.Property(e => e.Facebookurl)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("FACEBOOKURL");

                entity.Property(e => e.Factorydivnr).HasColumnName("FACTORYDIVNR");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Faxcode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("FAXCODE");

                entity.Property(e => e.Faxextnum)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("FAXEXTNUM");

                entity.Property(e => e.Faxnr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("FAXNR");

                entity.Property(e => e.Fbasendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("FBASENDEMAILADDR");

                entity.Property(e => e.Fbasendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("FBASENDFAXNR");

                entity.Property(e => e.Fbasendformat).HasColumnName("FBASENDFORMAT");

                entity.Property(e => e.Fbasendmethod).HasColumnName("FBASENDMETHOD");

                entity.Property(e => e.Fbssendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("FBSSENDEMAILADDR");

                entity.Property(e => e.Fbssendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("FBSSENDFAXNR");

                entity.Property(e => e.Fbssendformat).HasColumnName("FBSSENDFORMAT");

                entity.Property(e => e.Fbssendmethod).HasColumnName("FBSSENDMETHOD");

                entity.Property(e => e.Finbrws).HasColumnName("FINBRWS");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Grpfirmnr).HasColumnName("GRPFIRMNR");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Imageinc).HasColumnName("IMAGEINC");

                entity.Property(e => e.Imcntryref).HasColumnName("IMCNTRYREF");

                entity.Property(e => e.Imcntrytyp).HasColumnName("IMCNTRYTYP");

                entity.Property(e => e.Impbrws).HasColumnName("IMPBRWS");

                entity.Property(e => e.Incharge)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("INCHARGE");

                entity.Property(e => e.Incharge2)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("INCHARGE2");

                entity.Property(e => e.Incharge3)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("INCHARGE3");

                entity.Property(e => e.Inchtelcodes1)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELCODES1");

                entity.Property(e => e.Inchtelcodes2)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELCODES2");

                entity.Property(e => e.Inchtelcodes3)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELCODES3");

                entity.Property(e => e.Inchtelextnums1)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELEXTNUMS1");

                entity.Property(e => e.Inchtelextnums2)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELEXTNUMS2");

                entity.Property(e => e.Inchtelextnums3)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELEXTNUMS3");

                entity.Property(e => e.Inchtelnrs1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELNRS1");

                entity.Property(e => e.Inchtelnrs2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELNRS2");

                entity.Property(e => e.Inchtelnrs3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELNRS3");

                entity.Property(e => e.Ininvennr).HasColumnName("ININVENNR");

                entity.Property(e => e.Inistatusflags).HasColumnName("INISTATUSFLAGS");

                entity.Property(e => e.Insteadofdesp).HasColumnName("INSTEADOFDESP");

                entity.Property(e => e.Invprintcnt).HasColumnName("INVPRINTCNT");

                entity.Property(e => e.Invsendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("INVSENDEMAILADDR");

                entity.Property(e => e.Invsendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("INVSENDFAXNR");

                entity.Property(e => e.Invsendformat).HasColumnName("INVSENDFORMAT");

                entity.Property(e => e.Invsendmethod).HasColumnName("INVSENDMETHOD");

                entity.Property(e => e.Isforeign).HasColumnName("ISFOREIGN");

                entity.Property(e => e.Ispercurr).HasColumnName("ISPERCURR");

                entity.Property(e => e.Isperscomp).HasColumnName("ISPERSCOMP");

                entity.Property(e => e.Kvkkanonydate)
                    .HasColumnType("datetime")
                    .HasColumnName("KVKKANONYDATE");

                entity.Property(e => e.Kvkkanonystatus).HasColumnName("KVKKANONYSTATUS");

                entity.Property(e => e.Kvkkbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("KVKKBEGDATE");

                entity.Property(e => e.Kvkkcanceldate)
                    .HasColumnType("datetime")
                    .HasColumnName("KVKKCANCELDATE");

                entity.Property(e => e.Kvkkenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("KVKKENDDATE");

                entity.Property(e => e.Kvkkpermstatus).HasColumnName("KVKKPERMSTATUS");

                entity.Property(e => e.Labelinfo).HasColumnName("LABELINFO");

                entity.Property(e => e.Labelinfodesp).HasColumnName("LABELINFODESP");

                entity.Property(e => e.Lastsendremlev).HasColumnName("LASTSENDREMLEV");

                entity.Property(e => e.Latitute)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("LATITUTE");

                entity.Property(e => e.Ldxfirmnr).HasColumnName("LDXFIRMNR");

                entity.Property(e => e.Lidconfirmed).HasColumnName("LIDCONFIRMED");

                entity.Property(e => e.Loangrpctrl).HasColumnName("LOANGRPCTRL");

                entity.Property(e => e.Logoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("LOGOID");

                entity.Property(e => e.Longitude)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("LONGITUDE");

                entity.Property(e => e.Lowlevelcodes1).HasColumnName("LOWLEVELCODES1");

                entity.Property(e => e.Lowlevelcodes10).HasColumnName("LOWLEVELCODES10");

                entity.Property(e => e.Lowlevelcodes2).HasColumnName("LOWLEVELCODES2");

                entity.Property(e => e.Lowlevelcodes3).HasColumnName("LOWLEVELCODES3");

                entity.Property(e => e.Lowlevelcodes4).HasColumnName("LOWLEVELCODES4");

                entity.Property(e => e.Lowlevelcodes5).HasColumnName("LOWLEVELCODES5");

                entity.Property(e => e.Lowlevelcodes6).HasColumnName("LOWLEVELCODES6");

                entity.Property(e => e.Lowlevelcodes7).HasColumnName("LOWLEVELCODES7");

                entity.Property(e => e.Lowlevelcodes8).HasColumnName("LOWLEVELCODES8");

                entity.Property(e => e.Lowlevelcodes9).HasColumnName("LOWLEVELCODES9");

                entity.Property(e => e.Ltrsendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("LTRSENDEMAILADDR");

                entity.Property(e => e.Ltrsendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("LTRSENDFAXNR");

                entity.Property(e => e.Ltrsendformat).HasColumnName("LTRSENDFORMAT");

                entity.Property(e => e.Ltrsendmethod).HasColumnName("LTRSENDMETHOD");

                entity.Property(e => e.Mapid)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("MAPID");

                entity.Property(e => e.Name)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Notifycrdref).HasColumnName("NOTIFYCRDREF");

                entity.Property(e => e.Offsendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("OFFSENDEMAILADDR");

                entity.Property(e => e.Offsendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("OFFSENDFAXNR");

                entity.Property(e => e.Offsendformat).HasColumnName("OFFSENDFORMAT");

                entity.Property(e => e.Offsendmethod).HasColumnName("OFFSENDMETHOD");

                entity.Property(e => e.Ordday).HasColumnName("ORDDAY");

                entity.Property(e => e.Ordprintcnt).HasColumnName("ORDPRINTCNT");

                entity.Property(e => e.Ordpriority).HasColumnName("ORDPRIORITY");

                entity.Property(e => e.Ordsendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("ORDSENDEMAILADDR");

                entity.Property(e => e.Ordsendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ORDSENDFAXNR");

                entity.Property(e => e.Ordsendformat).HasColumnName("ORDSENDFORMAT");

                entity.Property(e => e.Ordsendmethod).HasColumnName("ORDSENDMETHOD");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Outinvennr).HasColumnName("OUTINVENNR");

                entity.Property(e => e.Overlapamnt).HasColumnName("OVERLAPAMNT");

                entity.Property(e => e.Overlapperc).HasColumnName("OVERLAPPERC");

                entity.Property(e => e.Overlaptype).HasColumnName("OVERLAPTYPE");

                entity.Property(e => e.Parentclref).HasColumnName("PARENTCLREF");

                entity.Property(e => e.Paymentproc).HasColumnName("PAYMENTPROC");

                entity.Property(e => e.Paymentprocbranch).HasColumnName("PAYMENTPROCBRANCH");

                entity.Property(e => e.Paymentref).HasColumnName("PAYMENTREF");

                entity.Property(e => e.Paymenttype).HasColumnName("PAYMENTTYPE");

                entity.Property(e => e.Personelcosts).HasColumnName("PERSONELCOSTS");

                entity.Property(e => e.Pieceordinflict).HasColumnName("PIECEORDINFLICT");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Postlabelcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("POSTLABELCODE");

                entity.Property(e => e.Postlabelcodedesp)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("POSTLABELCODEDESP");

                entity.Property(e => e.Ppgroupcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("PPGROUPCODE");

                entity.Property(e => e.Ppgroupref).HasColumnName("PPGROUPREF");

                entity.Property(e => e.Profileid).HasColumnName("PROFILEID");

                entity.Property(e => e.Profileiddesp).HasColumnName("PROFILEIDDESP");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Publicbnaccref).HasColumnName("PUBLICBNACCREF");

                entity.Property(e => e.Purchbrws).HasColumnName("PURCHBRWS");

                entity.Property(e => e.Purcorderprice).HasColumnName("PURCORDERPRICE");

                entity.Property(e => e.Purcorderstatus).HasColumnName("PURCORDERSTATUS");

                entity.Property(e => e.Qtydepduration).HasColumnName("QTYDEPDURATION");

                entity.Property(e => e.Qtyindepduration).HasColumnName("QTYINDEPDURATION");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Remsendformat).HasColumnName("REMSENDFORMAT");

                entity.Property(e => e.Rskagingcr).HasColumnName("RSKAGINGCR");

                entity.Property(e => e.Rskagingday).HasColumnName("RSKAGINGDAY");

                entity.Property(e => e.Rskduedatecr).HasColumnName("RSKDUEDATECR");

                entity.Property(e => e.Rsklimcr).HasColumnName("RSKLIMCR");

                entity.Property(e => e.Salesbrws).HasColumnName("SALESBRWS");

                entity.Property(e => e.Sameitemcodeuse).HasColumnName("SAMEITEMCODEUSE");

                entity.Property(e => e.Sectormainref).HasColumnName("SECTORMAINREF");

                entity.Property(e => e.Sectorsubref).HasColumnName("SECTORSUBREF");

                entity.Property(e => e.Senderlabelcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("SENDERLABELCODE");

                entity.Property(e => e.Senderlabelcodedesp)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("SENDERLABELCODEDESP");

                entity.Property(e => e.Sendmod).HasColumnName("SENDMOD");

                entity.Property(e => e.Shipbegtime1).HasColumnName("SHIPBEGTIME1");

                entity.Property(e => e.Shipbegtime2).HasColumnName("SHIPBEGTIME2");

                entity.Property(e => e.Shipbegtime3).HasColumnName("SHIPBEGTIME3");

                entity.Property(e => e.Shipendtime1).HasColumnName("SHIPENDTIME1");

                entity.Property(e => e.Shipendtime2).HasColumnName("SHIPENDTIME2");

                entity.Property(e => e.Shipendtime3).HasColumnName("SHIPENDTIME3");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Skypeid)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("SKYPEID");

                entity.Property(e => e.Slsorderprice).HasColumnName("SLSORDERPRICE");

                entity.Property(e => e.Slsorderstatus).HasColumnName("SLSORDERSTATUS");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Specode3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE3");

                entity.Property(e => e.Specode4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE4");

                entity.Property(e => e.Specode5)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE5");

                entity.Property(e => e.Statecode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("STATECODE");

                entity.Property(e => e.Statename)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("STATENAME");

                entity.Property(e => e.Storecreditcardno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("STORECREDITCARDNO");

                entity.Property(e => e.Subcont).HasColumnName("SUBCONT");

                entity.Property(e => e.Subscriberext)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SUBSCRIBEREXT");

                entity.Property(e => e.Subscriberstat).HasColumnName("SUBSCRIBERSTAT");

                entity.Property(e => e.Surname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("SURNAME");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Taxoffcode)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFFCODE");

                entity.Property(e => e.Taxoffice)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFFICE");

                entity.Property(e => e.Tckno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TCKNO");

                entity.Property(e => e.Telcodes1)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELCODES1");

                entity.Property(e => e.Telcodes2)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELCODES2");

                entity.Property(e => e.Telextnums1)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELEXTNUMS1");

                entity.Property(e => e.Telextnums2)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELEXTNUMS2");

                entity.Property(e => e.Telnrs1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS1");

                entity.Property(e => e.Telnrs2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS2");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Textrefen).HasColumnName("TEXTREFEN");

                entity.Property(e => e.Textreftr).HasColumnName("TEXTREFTR");

                entity.Property(e => e.Town)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Towncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TOWNCODE");

                entity.Property(e => e.Townid)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("TOWNID");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Twitterurl)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("TWITTERURL");

                entity.Property(e => e.Usedinperiods).HasColumnName("USEDINPERIODS");

                entity.Property(e => e.Vatnr)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("VATNR");

                entity.Property(e => e.Warnemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WARNEMAILADDR");

                entity.Property(e => e.Warnfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("WARNFAXNR");

                entity.Property(e => e.Warnmethod).HasColumnName("WARNMETHOD");

                entity.Property(e => e.Webaddr)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("WEBADDR");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Clintel>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_CLINTEL_I1");

                entity.ToTable("LG_001_CLINTEL");

                entity.HasIndex(e => new { e.Clientref, e.Linenum }, "I001_CLINTEL_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Intelline)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INTELLINE");

                entity.Property(e => e.Linenum).HasColumnName("LINENUM");
            });

            modelBuilder.Entity<Lg001Cmpgnline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_CMPGNLINE_I1");

                entity.ToTable("LG_001_CMPGNLINE");

                entity.HasIndex(e => new { e.Campcardref, e.Linenr }, "I001_CMPGNLINE_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Applytype).HasColumnName("APPLYTYPE");

                entity.Property(e => e.Campcardref).HasColumnName("CAMPCARDREF");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Conditemcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CONDITEMCODE");

                entity.Property(e => e.Condition)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("CONDITION");

                entity.Property(e => e.Formula)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Paydefref).HasColumnName("PAYDEFREF");

                entity.Property(e => e.Promisclass).HasColumnName("PROMISCLASS");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Usref).HasColumnName("USREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg001Companseacc>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_COMPANSEACC_I1");

                entity.ToTable("LG_001_COMPANSEACC");

                entity.HasIndex(e => e.Cardref, "I001_COMPANSEACC_I2");

                entity.HasIndex(e => e.Accountref, "I001_COMPANSEACC_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Mirroracc).HasColumnName("MIRRORACC");

                entity.Property(e => e.Trntype).HasColumnName("TRNTYPE");
            });

            modelBuilder.Entity<Lg001Coprdbom>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_COPRDBOM_I1");

                entity.ToTable("LG_001_COPRDBOM");

                entity.HasIndex(e => new { e.Bommasterref, e.Bomrevref, e.Coprodref, e.Coprodvrntref }, "I001_COPRDBOM_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Coprodref, e.Coprodvrntref, e.Bommasterref, e.Bomrevref }, "I001_COPRDBOM_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bommasterref).HasColumnName("BOMMASTERREF");

                entity.Property(e => e.Bomrevref).HasColumnName("BOMREVREF");

                entity.Property(e => e.Coprodref).HasColumnName("COPRODREF");

                entity.Property(e => e.Coprodvrntref).HasColumnName("COPRODVRNTREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Crdacref>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_CRDACREF_I1");

                entity.ToTable("LG_001_CRDACREF");

                entity.HasIndex(e => new { e.Trcode, e.Cardref, e.Typ }, "I001_CRDACREF_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<Lg001Creditletter>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_CREDITLETTERS_I1");

                entity.ToTable("LG_001_CREDITLETTERS");

                entity.HasIndex(e => new { e.Typ, e.Letternr }, "I001_CREDITLETTERS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Backtoback).HasColumnName("BACKTOBACK");

                entity.Property(e => e.Bankref).HasColumnName("BANKREF");

                entity.Property(e => e.Bnaccref).HasColumnName("BNACCREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Cominfobank).HasColumnName("COMINFOBANK");

                entity.Property(e => e.Commastbank).HasColumnName("COMMASTBANK");

                entity.Property(e => e.Confbankaddr1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CONFBANKADDR1");

                entity.Property(e => e.Confbankaddr2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CONFBANKADDR2");

                entity.Property(e => e.Confbankname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CONFBANKNAME");

                entity.Property(e => e.Confirmflag).HasColumnName("CONFIRMFLAG");

                entity.Property(e => e.Creditcrate).HasColumnName("CREDITCRATE");

                entity.Property(e => e.Creditref).HasColumnName("CREDITREF");

                entity.Property(e => e.Credittotal).HasColumnName("CREDITTOTAL");

                entity.Property(e => e.Currencyrate).HasColumnName("CURRENCYRATE");

                entity.Property(e => e.Currencytype).HasColumnName("CURRENCYTYPE");

                entity.Property(e => e.Currtotal).HasColumnName("CURRTOTAL");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Deliveryaddr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DELIVERYADDR");

                entity.Property(e => e.Deliverydate)
                    .HasColumnType("datetime")
                    .HasColumnName("DELIVERYDATE");

                entity.Property(e => e.Deliveryplace)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DELIVERYPLACE");

                entity.Property(e => e.Docdeliverydate)
                    .HasColumnType("datetime")
                    .HasColumnName("DOCDELIVERYDATE");

                entity.Property(e => e.Duedate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUEDATE");

                entity.Property(e => e.Eximficheref).HasColumnName("EXIMFICHEREF");

                entity.Property(e => e.Expinflag).HasColumnName("EXPINFLAG");

                entity.Property(e => e.Explain)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EXPLAIN");

                entity.Property(e => e.Expoutflag).HasColumnName("EXPOUTFLAG");

                entity.Property(e => e.Frgtypcod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FRGTYPCOD");

                entity.Property(e => e.Greenclause).HasColumnName("GREENCLAUSE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Infobankaddr1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INFOBANKADDR1");

                entity.Property(e => e.Infobankaddr2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INFOBANKADDR2");

                entity.Property(e => e.Infobankcommflag).HasColumnName("INFOBANKCOMMFLAG");

                entity.Property(e => e.Infobankname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INFOBANKNAME");

                entity.Property(e => e.Installdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INSTALLDATE");

                entity.Property(e => e.Insurancerange).HasColumnName("INSURANCERANGE");

                entity.Property(e => e.Issuedate)
                    .HasColumnType("datetime")
                    .HasColumnName("ISSUEDATE");

                entity.Property(e => e.Lastinstalldate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTINSTALLDATE");

                entity.Property(e => e.Letternr)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("LETTERNR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Paymenttype).HasColumnName("PAYMENTTYPE");

                entity.Property(e => e.Policydue)
                    .HasColumnType("datetime")
                    .HasColumnName("POLICYDUE");

                entity.Property(e => e.Ramsbankaddr1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("RAMSBANKADDR1");

                entity.Property(e => e.Ramsbankaddr2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("RAMSBANKADDR2");

                entity.Property(e => e.Ramsbankname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("RAMSBANKNAME");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Redclause).HasColumnName("REDCLAUSE");

                entity.Property(e => e.Referencenr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("REFERENCENR");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Returnflag).HasColumnName("RETURNFLAG");

                entity.Property(e => e.Revolving).HasColumnName("REVOLVING");

                entity.Property(e => e.Sendltdflag).HasColumnName("SENDLTDFLAG");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Standby).HasColumnName("STANDBY");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Transferflag).HasColumnName("TRANSFERFLAG");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Usagetype).HasColumnName("USAGETYPE");
            });

            modelBuilder.Entity<Lg001Decard>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_DECARDS_I1");

                entity.ToTable("LG_001_DECARDS");

                entity.HasIndex(e => new { e.Cardtype, e.Code }, "I001_DECARDS_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Definition }, "I001_DECARDS_I3");

                entity.HasIndex(e => new { e.Cardtype, e.Active, e.Code }, "I001_DECARDS_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Active, e.Definition }, "I001_DECARDS_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Counter).HasColumnName("COUNTER");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Extaccessflags).HasColumnName("EXTACCESSFLAGS");

                entity.Property(e => e.Formula)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA");

                entity.Property(e => e.Globalcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALCODE");

                entity.Property(e => e.Lprodstat).HasColumnName("LPRODSTAT");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Rndval).HasColumnName("RNDVAL");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Stoppagedisc).HasColumnName("STOPPAGEDISC");

                entity.Property(e => e.Unitstr)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UNITSTR");

                entity.Property(e => e.Vat).HasColumnName("VAT");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Deductlimit>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_DEDUCTLIMITS_I1");

                entity.ToTable("LG_001_DEDUCTLIMITS");

                entity.HasIndex(e => e.Code, "I001_DEDUCTLIMITS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Deductlimit).HasColumnName("DEDUCTLIMIT");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<Lg001Defnfldscardv>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_DEFNFLDSCARDV_I1");

                entity.ToTable("LG_001_DEFNFLDSCARDV");

                entity.HasIndex(e => new { e.Modulenr, e.Level, e.Parentref, e.Ownerref }, "I001_DEFNFLDSCARDV_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Level).HasColumnName("LEVEL_");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Numflds1).HasColumnName("NUMFLDS1");

                entity.Property(e => e.Numflds10).HasColumnName("NUMFLDS10");

                entity.Property(e => e.Numflds11).HasColumnName("NUMFLDS11");

                entity.Property(e => e.Numflds12).HasColumnName("NUMFLDS12");

                entity.Property(e => e.Numflds13).HasColumnName("NUMFLDS13");

                entity.Property(e => e.Numflds14).HasColumnName("NUMFLDS14");

                entity.Property(e => e.Numflds15).HasColumnName("NUMFLDS15");

                entity.Property(e => e.Numflds16).HasColumnName("NUMFLDS16");

                entity.Property(e => e.Numflds17).HasColumnName("NUMFLDS17");

                entity.Property(e => e.Numflds18).HasColumnName("NUMFLDS18");

                entity.Property(e => e.Numflds19).HasColumnName("NUMFLDS19");

                entity.Property(e => e.Numflds2).HasColumnName("NUMFLDS2");

                entity.Property(e => e.Numflds20).HasColumnName("NUMFLDS20");

                entity.Property(e => e.Numflds21).HasColumnName("NUMFLDS21");

                entity.Property(e => e.Numflds22).HasColumnName("NUMFLDS22");

                entity.Property(e => e.Numflds23).HasColumnName("NUMFLDS23");

                entity.Property(e => e.Numflds24).HasColumnName("NUMFLDS24");

                entity.Property(e => e.Numflds25).HasColumnName("NUMFLDS25");

                entity.Property(e => e.Numflds26).HasColumnName("NUMFLDS26");

                entity.Property(e => e.Numflds27).HasColumnName("NUMFLDS27");

                entity.Property(e => e.Numflds28).HasColumnName("NUMFLDS28");

                entity.Property(e => e.Numflds29).HasColumnName("NUMFLDS29");

                entity.Property(e => e.Numflds3).HasColumnName("NUMFLDS3");

                entity.Property(e => e.Numflds30).HasColumnName("NUMFLDS30");

                entity.Property(e => e.Numflds31).HasColumnName("NUMFLDS31");

                entity.Property(e => e.Numflds32).HasColumnName("NUMFLDS32");

                entity.Property(e => e.Numflds33).HasColumnName("NUMFLDS33");

                entity.Property(e => e.Numflds34).HasColumnName("NUMFLDS34");

                entity.Property(e => e.Numflds35).HasColumnName("NUMFLDS35");

                entity.Property(e => e.Numflds36).HasColumnName("NUMFLDS36");

                entity.Property(e => e.Numflds37).HasColumnName("NUMFLDS37");

                entity.Property(e => e.Numflds38).HasColumnName("NUMFLDS38");

                entity.Property(e => e.Numflds39).HasColumnName("NUMFLDS39");

                entity.Property(e => e.Numflds4).HasColumnName("NUMFLDS4");

                entity.Property(e => e.Numflds40).HasColumnName("NUMFLDS40");

                entity.Property(e => e.Numflds41).HasColumnName("NUMFLDS41");

                entity.Property(e => e.Numflds42).HasColumnName("NUMFLDS42");

                entity.Property(e => e.Numflds43).HasColumnName("NUMFLDS43");

                entity.Property(e => e.Numflds44).HasColumnName("NUMFLDS44");

                entity.Property(e => e.Numflds45).HasColumnName("NUMFLDS45");

                entity.Property(e => e.Numflds46).HasColumnName("NUMFLDS46");

                entity.Property(e => e.Numflds47).HasColumnName("NUMFLDS47");

                entity.Property(e => e.Numflds48).HasColumnName("NUMFLDS48");

                entity.Property(e => e.Numflds49).HasColumnName("NUMFLDS49");

                entity.Property(e => e.Numflds5).HasColumnName("NUMFLDS5");

                entity.Property(e => e.Numflds50).HasColumnName("NUMFLDS50");

                entity.Property(e => e.Numflds6).HasColumnName("NUMFLDS6");

                entity.Property(e => e.Numflds7).HasColumnName("NUMFLDS7");

                entity.Property(e => e.Numflds8).HasColumnName("NUMFLDS8");

                entity.Property(e => e.Numflds9).HasColumnName("NUMFLDS9");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Ownerref).HasColumnName("OWNERREF");

                entity.Property(e => e.Parentref).HasColumnName("PARENTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Textflds1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS1");

                entity.Property(e => e.Textflds10)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS10");

                entity.Property(e => e.Textflds11)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS11");

                entity.Property(e => e.Textflds12)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS12");

                entity.Property(e => e.Textflds13)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS13");

                entity.Property(e => e.Textflds14)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS14");

                entity.Property(e => e.Textflds15)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS15");

                entity.Property(e => e.Textflds16)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS16");

                entity.Property(e => e.Textflds17)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS17");

                entity.Property(e => e.Textflds18)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS18");

                entity.Property(e => e.Textflds19)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS19");

                entity.Property(e => e.Textflds2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS2");

                entity.Property(e => e.Textflds20)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS20");

                entity.Property(e => e.Textflds21)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS21");

                entity.Property(e => e.Textflds22)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS22");

                entity.Property(e => e.Textflds23)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS23");

                entity.Property(e => e.Textflds24)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS24");

                entity.Property(e => e.Textflds25)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS25");

                entity.Property(e => e.Textflds26)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS26");

                entity.Property(e => e.Textflds27)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS27");

                entity.Property(e => e.Textflds28)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS28");

                entity.Property(e => e.Textflds29)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS29");

                entity.Property(e => e.Textflds3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS3");

                entity.Property(e => e.Textflds30)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS30");

                entity.Property(e => e.Textflds31)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS31");

                entity.Property(e => e.Textflds32)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS32");

                entity.Property(e => e.Textflds33)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS33");

                entity.Property(e => e.Textflds34)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS34");

                entity.Property(e => e.Textflds35)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS35");

                entity.Property(e => e.Textflds36)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS36");

                entity.Property(e => e.Textflds37)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS37");

                entity.Property(e => e.Textflds38)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS38");

                entity.Property(e => e.Textflds39)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS39");

                entity.Property(e => e.Textflds4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS4");

                entity.Property(e => e.Textflds40)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS40");

                entity.Property(e => e.Textflds41)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS41");

                entity.Property(e => e.Textflds42)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS42");

                entity.Property(e => e.Textflds43)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS43");

                entity.Property(e => e.Textflds44)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS44");

                entity.Property(e => e.Textflds45)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS45");

                entity.Property(e => e.Textflds46)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS46");

                entity.Property(e => e.Textflds47)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS47");

                entity.Property(e => e.Textflds48)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS48");

                entity.Property(e => e.Textflds49)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS49");

                entity.Property(e => e.Textflds5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS5");

                entity.Property(e => e.Textflds50)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS50");

                entity.Property(e => e.Textflds6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS6");

                entity.Property(e => e.Textflds7)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS7");

                entity.Property(e => e.Textflds8)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS8");

                entity.Property(e => e.Textflds9)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEXTFLDS9");
            });

            modelBuilder.Entity<Lg001Discpayline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_DISCPAYLINES_I1");

                entity.ToTable("LG_001_DISCPAYLINES");

                entity.HasIndex(e => new { e.Paylineref, e.Day }, "I001_DISCPAYLINES_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Day)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DAY_");

                entity.Property(e => e.Discrate).HasColumnName("DISCRATE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Paylineref).HasColumnName("PAYLINEREF");

                entity.Property(e => e.Payplanref).HasColumnName("PAYPLANREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Displine>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_DISPLINE_I1");

                entity.ToTable("LG_001_DISPLINE");

                entity.HasIndex(e => new { e.Prodordref, e.Lineno }, "I001_DISPLINE_I2");

                entity.HasIndex(e => e.Wsref, "I001_DISPLINE_I3");

                entity.HasIndex(e => new { e.Prodordref, e.Routlineref }, "I001_DISPLINE_I4");

                entity.HasIndex(e => new { e.Prodordref, e.Opbegdate, e.Opbegtime, e.Lineno }, "I001_DISPLINE_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Actbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTBEGDATE");

                entity.Property(e => e.Actbegtime).HasColumnName("ACTBEGTIME");

                entity.Property(e => e.Actduedate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTDUEDATE");

                entity.Property(e => e.Actduetime).HasColumnName("ACTDUETIME");

                entity.Property(e => e.Actduration).HasColumnName("ACTDURATION");

                entity.Property(e => e.Actequiptcost).HasColumnName("ACTEQUIPTCOST");

                entity.Property(e => e.Actequiptrpcost).HasColumnName("ACTEQUIPTRPCOST");

                entity.Property(e => e.Actlaborcost).HasColumnName("ACTLABORCOST");

                entity.Property(e => e.Actlaborrpcost).HasColumnName("ACTLABORRPCOST");

                entity.Property(e => e.Actmaterialcost).HasColumnName("ACTMATERIALCOST");

                entity.Property(e => e.Actmaterialrpcost).HasColumnName("ACTMATERIALRPCOST");

                entity.Property(e => e.Actoverhcost).HasColumnName("ACTOVERHCOST");

                entity.Property(e => e.Actoverhcostg1).HasColumnName("ACTOVERHCOSTG1");

                entity.Property(e => e.Actoverhcostg10).HasColumnName("ACTOVERHCOSTG10");

                entity.Property(e => e.Actoverhcostg2).HasColumnName("ACTOVERHCOSTG2");

                entity.Property(e => e.Actoverhcostg3).HasColumnName("ACTOVERHCOSTG3");

                entity.Property(e => e.Actoverhcostg4).HasColumnName("ACTOVERHCOSTG4");

                entity.Property(e => e.Actoverhcostg5).HasColumnName("ACTOVERHCOSTG5");

                entity.Property(e => e.Actoverhcostg6).HasColumnName("ACTOVERHCOSTG6");

                entity.Property(e => e.Actoverhcostg7).HasColumnName("ACTOVERHCOSTG7");

                entity.Property(e => e.Actoverhcostg8).HasColumnName("ACTOVERHCOSTG8");

                entity.Property(e => e.Actoverhcostg9).HasColumnName("ACTOVERHCOSTG9");

                entity.Property(e => e.Actoverhrpcost).HasColumnName("ACTOVERHRPCOST");

                entity.Property(e => e.Actoverhrpcostg1).HasColumnName("ACTOVERHRPCOSTG1");

                entity.Property(e => e.Actoverhrpcostg10).HasColumnName("ACTOVERHRPCOSTG10");

                entity.Property(e => e.Actoverhrpcostg2).HasColumnName("ACTOVERHRPCOSTG2");

                entity.Property(e => e.Actoverhrpcostg3).HasColumnName("ACTOVERHRPCOSTG3");

                entity.Property(e => e.Actoverhrpcostg4).HasColumnName("ACTOVERHRPCOSTG4");

                entity.Property(e => e.Actoverhrpcostg5).HasColumnName("ACTOVERHRPCOSTG5");

                entity.Property(e => e.Actoverhrpcostg6).HasColumnName("ACTOVERHRPCOSTG6");

                entity.Property(e => e.Actoverhrpcostg7).HasColumnName("ACTOVERHRPCOSTG7");

                entity.Property(e => e.Actoverhrpcostg8).HasColumnName("ACTOVERHRPCOSTG8");

                entity.Property(e => e.Actoverhrpcostg9).HasColumnName("ACTOVERHRPCOSTG9");

                entity.Property(e => e.Actovhdformula)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("ACTOVHDFORMULA");

                entity.Property(e => e.Actovhdrpformula)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("ACTOVHDRPFORMULA");

                entity.Property(e => e.Acttotalcost).HasColumnName("ACTTOTALCOST");

                entity.Property(e => e.Acttotalrpcost).HasColumnName("ACTTOTALRPCOST");

                entity.Property(e => e.Actwscost).HasColumnName("ACTWSCOST");

                entity.Property(e => e.Actwsrpcost).HasColumnName("ACTWSRPCOST");

                entity.Property(e => e.Bomlevel).HasColumnName("BOMLEVEL");

                entity.Property(e => e.Bommasterref).HasColumnName("BOMMASTERREF");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Docounting).HasColumnName("DOCOUNTING");

                entity.Property(e => e.Entrytype).HasColumnName("ENTRYTYPE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Headtime).HasColumnName("HEADTIME");

                entity.Property(e => e.Insptime).HasColumnName("INSPTIME");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("LINENO_");

                entity.Property(e => e.Linestatus).HasColumnName("LINESTATUS");

                entity.Property(e => e.Manueledit).HasColumnName("MANUELEDIT");

                entity.Property(e => e.Movebatch).HasColumnName("MOVEBATCH");

                entity.Property(e => e.Movetime).HasColumnName("MOVETIME");

                entity.Property(e => e.Opbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPBEGDATE");

                entity.Property(e => e.Opbegtime).HasColumnName("OPBEGTIME");

                entity.Property(e => e.Opduedate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPDUEDATE");

                entity.Property(e => e.Opduetime).HasColumnName("OPDUETIME");

                entity.Property(e => e.Operationref).HasColumnName("OPERATIONREF");

                entity.Property(e => e.Opreqref).HasColumnName("OPREQREF");

                entity.Property(e => e.Opwsbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("OPWSBEGDATE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Parting).HasColumnName("PARTING");

                entity.Property(e => e.Plnduration).HasColumnName("PLNDURATION");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Prodordref).HasColumnName("PRODORDREF");

                entity.Property(e => e.Prodordtyp).HasColumnName("PRODORDTYP");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Qcopok).HasColumnName("QCOPOK");

                entity.Property(e => e.Queuetime).HasColumnName("QUEUETIME");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Released).HasColumnName("RELEASED");

                entity.Property(e => e.Revref).HasColumnName("REVREF");

                entity.Property(e => e.Rework).HasColumnName("REWORK");

                entity.Property(e => e.Rollupequiptcost).HasColumnName("ROLLUPEQUIPTCOST");

                entity.Property(e => e.Rollupequiptrpcost).HasColumnName("ROLLUPEQUIPTRPCOST");

                entity.Property(e => e.Rolluplaborcost).HasColumnName("ROLLUPLABORCOST");

                entity.Property(e => e.Rolluplaborrpcost).HasColumnName("ROLLUPLABORRPCOST");

                entity.Property(e => e.Rollupmaterialcost).HasColumnName("ROLLUPMATERIALCOST");

                entity.Property(e => e.Rollupmaterialrpcost).HasColumnName("ROLLUPMATERIALRPCOST");

                entity.Property(e => e.Rollupoverhcost).HasColumnName("ROLLUPOVERHCOST");

                entity.Property(e => e.Rollupoverhcostg1).HasColumnName("ROLLUPOVERHCOSTG1");

                entity.Property(e => e.Rollupoverhcostg10).HasColumnName("ROLLUPOVERHCOSTG10");

                entity.Property(e => e.Rollupoverhcostg2).HasColumnName("ROLLUPOVERHCOSTG2");

                entity.Property(e => e.Rollupoverhcostg3).HasColumnName("ROLLUPOVERHCOSTG3");

                entity.Property(e => e.Rollupoverhcostg4).HasColumnName("ROLLUPOVERHCOSTG4");

                entity.Property(e => e.Rollupoverhcostg5).HasColumnName("ROLLUPOVERHCOSTG5");

                entity.Property(e => e.Rollupoverhcostg6).HasColumnName("ROLLUPOVERHCOSTG6");

                entity.Property(e => e.Rollupoverhcostg7).HasColumnName("ROLLUPOVERHCOSTG7");

                entity.Property(e => e.Rollupoverhcostg8).HasColumnName("ROLLUPOVERHCOSTG8");

                entity.Property(e => e.Rollupoverhcostg9).HasColumnName("ROLLUPOVERHCOSTG9");

                entity.Property(e => e.Rollupoverhrpcost).HasColumnName("ROLLUPOVERHRPCOST");

                entity.Property(e => e.Rollupoverhrpcostg1).HasColumnName("ROLLUPOVERHRPCOSTG1");

                entity.Property(e => e.Rollupoverhrpcostg10).HasColumnName("ROLLUPOVERHRPCOSTG10");

                entity.Property(e => e.Rollupoverhrpcostg2).HasColumnName("ROLLUPOVERHRPCOSTG2");

                entity.Property(e => e.Rollupoverhrpcostg3).HasColumnName("ROLLUPOVERHRPCOSTG3");

                entity.Property(e => e.Rollupoverhrpcostg4).HasColumnName("ROLLUPOVERHRPCOSTG4");

                entity.Property(e => e.Rollupoverhrpcostg5).HasColumnName("ROLLUPOVERHRPCOSTG5");

                entity.Property(e => e.Rollupoverhrpcostg6).HasColumnName("ROLLUPOVERHRPCOSTG6");

                entity.Property(e => e.Rollupoverhrpcostg7).HasColumnName("ROLLUPOVERHRPCOSTG7");

                entity.Property(e => e.Rollupoverhrpcostg8).HasColumnName("ROLLUPOVERHRPCOSTG8");

                entity.Property(e => e.Rollupoverhrpcostg9).HasColumnName("ROLLUPOVERHRPCOSTG9");

                entity.Property(e => e.Rolluptotalcost).HasColumnName("ROLLUPTOTALCOST");

                entity.Property(e => e.Rolluptotalrpcost).HasColumnName("ROLLUPTOTALRPCOST");

                entity.Property(e => e.Rollupwscost).HasColumnName("ROLLUPWSCOST");

                entity.Property(e => e.Rollupwsrpcost).HasColumnName("ROLLUPWSRPCOST");

                entity.Property(e => e.Routlineref).HasColumnName("ROUTLINEREF");

                entity.Property(e => e.Runbatch).HasColumnName("RUNBATCH");

                entity.Property(e => e.Runtime).HasColumnName("RUNTIME");

                entity.Property(e => e.Scheduled).HasColumnName("SCHEDULED");

                entity.Property(e => e.Setuptime).HasColumnName("SETUPTIME");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Stdequiptcost).HasColumnName("STDEQUIPTCOST");

                entity.Property(e => e.Stdequiptrpcost).HasColumnName("STDEQUIPTRPCOST");

                entity.Property(e => e.Stdlaborcost).HasColumnName("STDLABORCOST");

                entity.Property(e => e.Stdlaborrpcost).HasColumnName("STDLABORRPCOST");

                entity.Property(e => e.Stdmaterialcost).HasColumnName("STDMATERIALCOST");

                entity.Property(e => e.Stdmaterialrpcost).HasColumnName("STDMATERIALRPCOST");

                entity.Property(e => e.Stdoverhcost).HasColumnName("STDOVERHCOST");

                entity.Property(e => e.Stdoverhcostg1).HasColumnName("STDOVERHCOSTG1");

                entity.Property(e => e.Stdoverhcostg10).HasColumnName("STDOVERHCOSTG10");

                entity.Property(e => e.Stdoverhcostg2).HasColumnName("STDOVERHCOSTG2");

                entity.Property(e => e.Stdoverhcostg3).HasColumnName("STDOVERHCOSTG3");

                entity.Property(e => e.Stdoverhcostg4).HasColumnName("STDOVERHCOSTG4");

                entity.Property(e => e.Stdoverhcostg5).HasColumnName("STDOVERHCOSTG5");

                entity.Property(e => e.Stdoverhcostg6).HasColumnName("STDOVERHCOSTG6");

                entity.Property(e => e.Stdoverhcostg7).HasColumnName("STDOVERHCOSTG7");

                entity.Property(e => e.Stdoverhcostg8).HasColumnName("STDOVERHCOSTG8");

                entity.Property(e => e.Stdoverhcostg9).HasColumnName("STDOVERHCOSTG9");

                entity.Property(e => e.Stdoverhrpcost).HasColumnName("STDOVERHRPCOST");

                entity.Property(e => e.Stdoverhrpcostg1).HasColumnName("STDOVERHRPCOSTG1");

                entity.Property(e => e.Stdoverhrpcostg10).HasColumnName("STDOVERHRPCOSTG10");

                entity.Property(e => e.Stdoverhrpcostg2).HasColumnName("STDOVERHRPCOSTG2");

                entity.Property(e => e.Stdoverhrpcostg3).HasColumnName("STDOVERHRPCOSTG3");

                entity.Property(e => e.Stdoverhrpcostg4).HasColumnName("STDOVERHRPCOSTG4");

                entity.Property(e => e.Stdoverhrpcostg5).HasColumnName("STDOVERHRPCOSTG5");

                entity.Property(e => e.Stdoverhrpcostg6).HasColumnName("STDOVERHRPCOSTG6");

                entity.Property(e => e.Stdoverhrpcostg7).HasColumnName("STDOVERHRPCOSTG7");

                entity.Property(e => e.Stdoverhrpcostg8).HasColumnName("STDOVERHRPCOSTG8");

                entity.Property(e => e.Stdoverhrpcostg9).HasColumnName("STDOVERHRPCOSTG9");

                entity.Property(e => e.Stdovhdformula)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDFORMULA");

                entity.Property(e => e.Stdovhdrpformula)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("STDOVHDRPFORMULA");

                entity.Property(e => e.Stdtotalcost).HasColumnName("STDTOTALCOST");

                entity.Property(e => e.Stdtotalrpcost).HasColumnName("STDTOTALRPCOST");

                entity.Property(e => e.Stdwscost).HasColumnName("STDWSCOST");

                entity.Property(e => e.Stdwsrpcost).HasColumnName("STDWSRPCOST");

                entity.Property(e => e.Stpcostduration).HasColumnName("STPCOSTDURATION");

                entity.Property(e => e.Stpduration).HasColumnName("STPDURATION");

                entity.Property(e => e.Tailtime).HasColumnName("TAILTIME");

                entity.Property(e => e.Ufrsequiptcost).HasColumnName("UFRSEQUIPTCOST");

                entity.Property(e => e.Ufrsequiptrpcost).HasColumnName("UFRSEQUIPTRPCOST");

                entity.Property(e => e.Ufrslaborcost).HasColumnName("UFRSLABORCOST");

                entity.Property(e => e.Ufrslaborrpcost).HasColumnName("UFRSLABORRPCOST");

                entity.Property(e => e.Ufrsmaterialcost).HasColumnName("UFRSMATERIALCOST");

                entity.Property(e => e.Ufrsmaterialrpcost).HasColumnName("UFRSMATERIALRPCOST");

                entity.Property(e => e.Ufrsoverhcost).HasColumnName("UFRSOVERHCOST");

                entity.Property(e => e.Ufrsoverhcostg1).HasColumnName("UFRSOVERHCOSTG1");

                entity.Property(e => e.Ufrsoverhcostg10).HasColumnName("UFRSOVERHCOSTG10");

                entity.Property(e => e.Ufrsoverhcostg2).HasColumnName("UFRSOVERHCOSTG2");

                entity.Property(e => e.Ufrsoverhcostg3).HasColumnName("UFRSOVERHCOSTG3");

                entity.Property(e => e.Ufrsoverhcostg4).HasColumnName("UFRSOVERHCOSTG4");

                entity.Property(e => e.Ufrsoverhcostg5).HasColumnName("UFRSOVERHCOSTG5");

                entity.Property(e => e.Ufrsoverhcostg6).HasColumnName("UFRSOVERHCOSTG6");

                entity.Property(e => e.Ufrsoverhcostg7).HasColumnName("UFRSOVERHCOSTG7");

                entity.Property(e => e.Ufrsoverhcostg8).HasColumnName("UFRSOVERHCOSTG8");

                entity.Property(e => e.Ufrsoverhcostg9).HasColumnName("UFRSOVERHCOSTG9");

                entity.Property(e => e.Ufrsoverhrpcost).HasColumnName("UFRSOVERHRPCOST");

                entity.Property(e => e.Ufrsoverhrpcostg1).HasColumnName("UFRSOVERHRPCOSTG1");

                entity.Property(e => e.Ufrsoverhrpcostg10).HasColumnName("UFRSOVERHRPCOSTG10");

                entity.Property(e => e.Ufrsoverhrpcostg2).HasColumnName("UFRSOVERHRPCOSTG2");

                entity.Property(e => e.Ufrsoverhrpcostg3).HasColumnName("UFRSOVERHRPCOSTG3");

                entity.Property(e => e.Ufrsoverhrpcostg4).HasColumnName("UFRSOVERHRPCOSTG4");

                entity.Property(e => e.Ufrsoverhrpcostg5).HasColumnName("UFRSOVERHRPCOSTG5");

                entity.Property(e => e.Ufrsoverhrpcostg6).HasColumnName("UFRSOVERHRPCOSTG6");

                entity.Property(e => e.Ufrsoverhrpcostg7).HasColumnName("UFRSOVERHRPCOSTG7");

                entity.Property(e => e.Ufrsoverhrpcostg8).HasColumnName("UFRSOVERHRPCOSTG8");

                entity.Property(e => e.Ufrsoverhrpcostg9).HasColumnName("UFRSOVERHRPCOSTG9");

                entity.Property(e => e.Ufrstotalcost).HasColumnName("UFRSTOTALCOST");

                entity.Property(e => e.Ufrstotalrpcost).HasColumnName("UFRSTOTALRPCOST");

                entity.Property(e => e.Ufrswscost).HasColumnName("UFRSWSCOST");

                entity.Property(e => e.Ufrswsrpcost).HasColumnName("UFRSWSRPCOST");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Waitbatch).HasColumnName("WAITBATCH");

                entity.Property(e => e.Waittime).HasColumnName("WAITTIME");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Wsdailyoptime).HasColumnName("WSDAILYOPTIME");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");

                entity.Property(e => e.Wsworkingdays).HasColumnName("WSWORKINGDAYS");
            });

            modelBuilder.Entity<Lg001Displinecost>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_DISPLINECOST_I1");

                entity.ToTable("LG_001_DISPLINECOST");

                entity.HasIndex(e => new { e.Displineref, e.Prdref }, "I001_DISPLINECOST_I2");

                entity.HasIndex(e => new { e.Displineref, e.Prdref, e.Costtype }, "I001_DISPLINECOST_I3");

                entity.HasIndex(e => new { e.Displineref, e.Costtype }, "I001_DISPLINECOST_I4");

                entity.HasIndex(e => new { e.Prodordref, e.Displineref, e.Prdref, e.Costtype }, "I001_DISPLINECOST_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Costtype).HasColumnName("COSTTYPE");

                entity.Property(e => e.Displineref).HasColumnName("DISPLINEREF");

                entity.Property(e => e.Equiptcost).HasColumnName("EQUIPTCOST");

                entity.Property(e => e.Equiptrpcost).HasColumnName("EQUIPTRPCOST");

                entity.Property(e => e.Laborcost).HasColumnName("LABORCOST");

                entity.Property(e => e.Laborrpcost).HasColumnName("LABORRPCOST");

                entity.Property(e => e.Materialcost).HasColumnName("MATERIALCOST");

                entity.Property(e => e.Materialrpcost).HasColumnName("MATERIALRPCOST");

                entity.Property(e => e.Overhcost).HasColumnName("OVERHCOST");

                entity.Property(e => e.Overhcostg1).HasColumnName("OVERHCOSTG1");

                entity.Property(e => e.Overhcostg10).HasColumnName("OVERHCOSTG10");

                entity.Property(e => e.Overhcostg2).HasColumnName("OVERHCOSTG2");

                entity.Property(e => e.Overhcostg3).HasColumnName("OVERHCOSTG3");

                entity.Property(e => e.Overhcostg4).HasColumnName("OVERHCOSTG4");

                entity.Property(e => e.Overhcostg5).HasColumnName("OVERHCOSTG5");

                entity.Property(e => e.Overhcostg6).HasColumnName("OVERHCOSTG6");

                entity.Property(e => e.Overhcostg7).HasColumnName("OVERHCOSTG7");

                entity.Property(e => e.Overhcostg8).HasColumnName("OVERHCOSTG8");

                entity.Property(e => e.Overhcostg9).HasColumnName("OVERHCOSTG9");

                entity.Property(e => e.Overhrpcost).HasColumnName("OVERHRPCOST");

                entity.Property(e => e.Overhrpcostg1).HasColumnName("OVERHRPCOSTG1");

                entity.Property(e => e.Overhrpcostg10).HasColumnName("OVERHRPCOSTG10");

                entity.Property(e => e.Overhrpcostg2).HasColumnName("OVERHRPCOSTG2");

                entity.Property(e => e.Overhrpcostg3).HasColumnName("OVERHRPCOSTG3");

                entity.Property(e => e.Overhrpcostg4).HasColumnName("OVERHRPCOSTG4");

                entity.Property(e => e.Overhrpcostg5).HasColumnName("OVERHRPCOSTG5");

                entity.Property(e => e.Overhrpcostg6).HasColumnName("OVERHRPCOSTG6");

                entity.Property(e => e.Overhrpcostg7).HasColumnName("OVERHRPCOSTG7");

                entity.Property(e => e.Overhrpcostg8).HasColumnName("OVERHRPCOSTG8");

                entity.Property(e => e.Overhrpcostg9).HasColumnName("OVERHRPCOSTG9");

                entity.Property(e => e.Prdref).HasColumnName("PRDREF");

                entity.Property(e => e.Prodordref).HasColumnName("PRODORDREF");

                entity.Property(e => e.Totalcost).HasColumnName("TOTALCOST");

                entity.Property(e => e.Totalrpcost).HasColumnName("TOTALRPCOST");

                entity.Property(e => e.Wscost).HasColumnName("WSCOST");

                entity.Property(e => e.Wsrpcost).HasColumnName("WSRPCOST");
            });

            modelBuilder.Entity<Lg001Distline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_DISTLINE_I1");

                entity.ToTable("LG_001_DISTLINE");

                entity.HasIndex(e => new { e.Disttempref, e.Lineno }, "I001_DISTLINE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Itemref, "I001_DISTLINE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Distfact).HasColumnName("DISTFACT");

                entity.Property(e => e.Disttempref).HasColumnName("DISTTEMPREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg001Distlist>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_DISTLIST_I1");

                entity.ToTable("LG_001_DISTLIST");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Tslogoadr)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TSLOGOADR");

                entity.Property(e => e.Tsmailadr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TSMAILADR");

                entity.Property(e => e.Tsname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TSNAME");

                entity.Property(e => e.Tsusernr).HasColumnName("TSUSERNR");
            });

            modelBuilder.Entity<Lg001Distrouting>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_DISTROUTING_I1");

                entity.ToTable("LG_001_DISTROUTING");

                entity.HasIndex(e => e.Code, "I001_DISTROUTING_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_DISTROUTING_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_DISTROUTING_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Name }, "I001_DISTROUTING_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Distroutline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_DISTROUTLINE_I1");

                entity.ToTable("LG_001_DISTROUTLINE");

                entity.HasIndex(e => e.Distroutref, "I001_DISTROUTLINE_I2");

                entity.HasIndex(e => new { e.Distroutref, e.Linenr }, "I001_DISTROUTLINE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bcitycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("BCITYCODE");

                entity.Property(e => e.Bcountrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("BCOUNTRYCODE");

                entity.Property(e => e.Bdistrictcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("BDISTRICTCODE");

                entity.Property(e => e.Btowncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("BTOWNCODE");

                entity.Property(e => e.Distroutref).HasColumnName("DISTROUTREF");

                entity.Property(e => e.Ecitycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ECITYCODE");

                entity.Property(e => e.Ecountrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ECOUNTRYCODE");

                entity.Property(e => e.Edistrictcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("EDISTRICTCODE");

                entity.Property(e => e.Etowncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("ETOWNCODE");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");
            });

            modelBuilder.Entity<Lg001Disttemp>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_DISTTEMP_I1");

                entity.ToTable("LG_001_DISTTEMP");

                entity.HasIndex(e => new { e.Itemref, e.Code, e.Uomref }, "I001_DISTTEMP_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Itemref, e.Name, e.Uomref }, "I001_DISTTEMP_I3");

                entity.HasIndex(e => new { e.Itemref, e.Uomref, e.Begdate, e.Enddate }, "I001_DISTTEMP_I4");

                entity.HasIndex(e => e.Uomref, "I001_DISTTEMP_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");
            });

            modelBuilder.Entity<Lg001Distvehicle>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_DISTVEHICLE_I1");

                entity.ToTable("LG_001_DISTVEHICLE");

                entity.HasIndex(e => e.Code, "I001_DISTVEHICLE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Definition, "I001_DISTVEHICLE_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_DISTVEHICLE_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Definition }, "I001_DISTVEHICLE_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Area).HasColumnName("AREA");

                entity.Property(e => e.Arearef).HasColumnName("AREAREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION");

                entity.Property(e => e.Fixedprice).HasColumnName("FIXEDPRICE");

                entity.Property(e => e.Height).HasColumnName("HEIGHT");

                entity.Property(e => e.Heightref).HasColumnName("HEIGHTREF");

                entity.Property(e => e.Itmspecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ITMSPECODE");

                entity.Property(e => e.Itmspecode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ITMSPECODE2");

                entity.Property(e => e.Itmspecode3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ITMSPECODE3");

                entity.Property(e => e.Itmspecode4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ITMSPECODE4");

                entity.Property(e => e.Itmspecode5)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ITMSPECODE5");

                entity.Property(e => e.Length).HasColumnName("LENGTH");

                entity.Property(e => e.Lengthref).HasColumnName("LENGTHREF");

                entity.Property(e => e.Minimalprice).HasColumnName("MINIMALPRICE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Plaque)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PLAQUE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Score).HasColumnName("SCORE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Unitcost).HasColumnName("UNITCOST");

                entity.Property(e => e.Unitcostcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITCOSTCODE");

                entity.Property(e => e.User1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("USER1");

                entity.Property(e => e.User2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("USER2");

                entity.Property(e => e.Volume).HasColumnName("VOLUME_");

                entity.Property(e => e.Volumeref).HasColumnName("VOLUMEREF");

                entity.Property(e => e.Waitingprice).HasColumnName("WAITINGPRICE");

                entity.Property(e => e.Weight).HasColumnName("WEIGHT");

                entity.Property(e => e.Weightref).HasColumnName("WEIGHTREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Width).HasColumnName("WIDTH");

                entity.Property(e => e.Widthref).HasColumnName("WIDTHREF");
            });

            modelBuilder.Entity<Lg001Divamain>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_DIVAMAIN_I1");

                entity.ToTable("LG_001_DIVAMAIN");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Entitytpye).HasColumnName("ENTITYTPYE");

                entity.Property(e => e.Exportdatetime)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("EXPORTDATETIME");

                entity.Property(e => e.Importdatetime)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("IMPORTDATETIME");
            });

            modelBuilder.Entity<Lg001Dsplnopcmppg>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_DSPLNOPCMPPG_I1");

                entity.ToTable("LG_001_DSPLNOPCMPPG");

                entity.HasIndex(e => e.Prodordref, "I001_DSPLNOPCMPPG_I2");

                entity.HasIndex(e => e.Displineref, "I001_DSPLNOPCMPPG_I3");

                entity.HasIndex(e => new { e.Parentitemref, e.Lineno }, "I001_DSPLNOPCMPPG_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Consumpamnt).HasColumnName("CONSUMPAMNT");

                entity.Property(e => e.Detline).HasColumnName("DETLINE");

                entity.Property(e => e.Displineref).HasColumnName("DISPLINEREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Parentitemref).HasColumnName("PARENTITEMREF");

                entity.Property(e => e.Prodordref).HasColumnName("PRODORDREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Wasteamnt).HasColumnName("WASTEAMNT");
            });

            modelBuilder.Entity<Lg001Ebookinfo>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_EBOOKINFO_I1");

                entity.ToTable("LG_001_EBOOKINFO");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accvalues1).HasColumnName("ACCVALUES1");

                entity.Property(e => e.Accvalues10).HasColumnName("ACCVALUES10");

                entity.Property(e => e.Accvalues2).HasColumnName("ACCVALUES2");

                entity.Property(e => e.Accvalues3).HasColumnName("ACCVALUES3");

                entity.Property(e => e.Accvalues4).HasColumnName("ACCVALUES4");

                entity.Property(e => e.Accvalues5).HasColumnName("ACCVALUES5");

                entity.Property(e => e.Accvalues6).HasColumnName("ACCVALUES6");

                entity.Property(e => e.Accvalues7).HasColumnName("ACCVALUES7");

                entity.Property(e => e.Accvalues8).HasColumnName("ACCVALUES8");

                entity.Property(e => e.Accvalues9).HasColumnName("ACCVALUES9");

                entity.Property(e => e.Backupstatus).HasColumnName("BACKUPSTATUS");

                entity.Property(e => e.Bgloblineno).HasColumnName("BGLOBLINENO");

                entity.Property(e => e.Bjournalno).HasColumnName("BJOURNALNO");

                entity.Property(e => e.Bookstatus).HasColumnName("BOOKSTATUS");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Controlno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CONTROLNO");

                entity.Property(e => e.Controlnobeg)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CONTROLNOBEG");

                entity.Property(e => e.Currtype).HasColumnName("CURRTYPE");

                entity.Property(e => e.Dateofcreate)
                    .HasColumnType("datetime")
                    .HasColumnName("DATEOFCREATE");

                entity.Property(e => e.Egloblineno).HasColumnName("EGLOBLINENO");

                entity.Property(e => e.Ejournalno).HasColumnName("EJOURNALNO");

                entity.Property(e => e.Filecount).HasColumnName("FILECOUNT");

                entity.Property(e => e.Filesize).HasColumnName("FILESIZE");

                entity.Property(e => e.Ftelcode)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("FTELCODE");

                entity.Property(e => e.Ftelnr)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("FTELNR");

                entity.Property(e => e.Ftelnrtype).HasColumnName("FTELNRTYPE");

                entity.Property(e => e.Genexp1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP1");

                entity.Property(e => e.Genexp2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP2");

                entity.Property(e => e.Genexp3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP3");

                entity.Property(e => e.Genexp4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP4");

                entity.Property(e => e.Genexp5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP5");

                entity.Property(e => e.Genexp6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP6");

                entity.Property(e => e.Groupno).HasColumnName("GROUPNO");

                entity.Property(e => e.Journalcount).HasColumnName("JOURNALCOUNT");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orjrepstartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("ORJREPSTARTDATE");

                entity.Property(e => e.Partlysent).HasColumnName("PARTLYSENT");

                entity.Property(e => e.Permonth).HasColumnName("PERMONTH");

                entity.Property(e => e.Peryear).HasColumnName("PERYEAR");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("REPORTENDDATE");

                entity.Property(e => e.Reportstartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("REPORTSTARTDATE");

                entity.Property(e => e.Sendingcnt).HasColumnName("SENDINGCNT");

                entity.Property(e => e.Sendstatusstr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("SENDSTATUSSTR");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Smmtelcode)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SMMTELCODE");

                entity.Property(e => e.Smmtelnr)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("SMMTELNR");

                entity.Property(e => e.Smmtelnrtype).HasColumnName("SMMTELNRTYPE");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Timestampdate)
                    .HasColumnType("datetime")
                    .HasColumnName("TIMESTAMPDATE");

                entity.Property(e => e.Timestamptime).HasColumnName("TIMESTAMPTIME");

                entity.Property(e => e.Totalcredit).HasColumnName("TOTALCREDIT");

                entity.Property(e => e.Totaldebit).HasColumnName("TOTALDEBIT");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Withgroup).HasColumnName("WITHGROUP");

                entity.Property(e => e.Withtimestamp).HasColumnName("WITHTIMESTAMP");
            });

            modelBuilder.Entity<Lg001Ebookparam>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_EBOOKPARAMS_I1");

                entity.ToTable("LG_001_EBOOKPARAMS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Docdateforebook).HasColumnName("DOCDATEFOREBOOK");

                entity.Property(e => e.Docexp)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DOCEXP");

                entity.Property(e => e.Docnoforebook).HasColumnName("DOCNOFOREBOOK");

                entity.Property(e => e.Einvtype1).HasColumnName("EINVTYPE1");

                entity.Property(e => e.Einvtype2).HasColumnName("EINVTYPE2");

                entity.Property(e => e.Einvtype3).HasColumnName("EINVTYPE3");

                entity.Property(e => e.Einvtype4).HasColumnName("EINVTYPE4");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Paymthd)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("PAYMTHD");

                entity.Property(e => e.Transtype1).HasColumnName("TRANSTYPE1");

                entity.Property(e => e.Transtype10).HasColumnName("TRANSTYPE10");

                entity.Property(e => e.Transtype11).HasColumnName("TRANSTYPE11");

                entity.Property(e => e.Transtype12).HasColumnName("TRANSTYPE12");

                entity.Property(e => e.Transtype13).HasColumnName("TRANSTYPE13");

                entity.Property(e => e.Transtype14).HasColumnName("TRANSTYPE14");

                entity.Property(e => e.Transtype15).HasColumnName("TRANSTYPE15");

                entity.Property(e => e.Transtype16).HasColumnName("TRANSTYPE16");

                entity.Property(e => e.Transtype17).HasColumnName("TRANSTYPE17");

                entity.Property(e => e.Transtype18).HasColumnName("TRANSTYPE18");

                entity.Property(e => e.Transtype19).HasColumnName("TRANSTYPE19");

                entity.Property(e => e.Transtype2).HasColumnName("TRANSTYPE2");

                entity.Property(e => e.Transtype20).HasColumnName("TRANSTYPE20");

                entity.Property(e => e.Transtype21).HasColumnName("TRANSTYPE21");

                entity.Property(e => e.Transtype22).HasColumnName("TRANSTYPE22");

                entity.Property(e => e.Transtype23).HasColumnName("TRANSTYPE23");

                entity.Property(e => e.Transtype24).HasColumnName("TRANSTYPE24");

                entity.Property(e => e.Transtype25).HasColumnName("TRANSTYPE25");

                entity.Property(e => e.Transtype26).HasColumnName("TRANSTYPE26");

                entity.Property(e => e.Transtype27).HasColumnName("TRANSTYPE27");

                entity.Property(e => e.Transtype28).HasColumnName("TRANSTYPE28");

                entity.Property(e => e.Transtype29).HasColumnName("TRANSTYPE29");

                entity.Property(e => e.Transtype3).HasColumnName("TRANSTYPE3");

                entity.Property(e => e.Transtype30).HasColumnName("TRANSTYPE30");

                entity.Property(e => e.Transtype31).HasColumnName("TRANSTYPE31");

                entity.Property(e => e.Transtype32).HasColumnName("TRANSTYPE32");

                entity.Property(e => e.Transtype33).HasColumnName("TRANSTYPE33");

                entity.Property(e => e.Transtype34).HasColumnName("TRANSTYPE34");

                entity.Property(e => e.Transtype35).HasColumnName("TRANSTYPE35");

                entity.Property(e => e.Transtype36).HasColumnName("TRANSTYPE36");

                entity.Property(e => e.Transtype37).HasColumnName("TRANSTYPE37");

                entity.Property(e => e.Transtype38).HasColumnName("TRANSTYPE38");

                entity.Property(e => e.Transtype39).HasColumnName("TRANSTYPE39");

                entity.Property(e => e.Transtype4).HasColumnName("TRANSTYPE4");

                entity.Property(e => e.Transtype40).HasColumnName("TRANSTYPE40");

                entity.Property(e => e.Transtype5).HasColumnName("TRANSTYPE5");

                entity.Property(e => e.Transtype6).HasColumnName("TRANSTYPE6");

                entity.Property(e => e.Transtype7).HasColumnName("TRANSTYPE7");

                entity.Property(e => e.Transtype8).HasColumnName("TRANSTYPE8");

                entity.Property(e => e.Transtype9).HasColumnName("TRANSTYPE9");
            });

            modelBuilder.Entity<Lg001Emcenter>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_EMCENTER_I1");

                entity.ToTable("LG_001_EMCENTER");

                entity.HasIndex(e => e.Code, "I001_EMCENTER_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Definition, "I001_EMCENTER_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_EMCENTER_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Definition }, "I001_EMCENTER_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Addinforef).HasColumnName("ADDINFOREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Orglogicalref).HasColumnName("ORGLOGICALREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Specode3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE3");

                entity.Property(e => e.Specode4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE4");

                entity.Property(e => e.Specode5)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE5");

                entity.Property(e => e.Units)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UNITS");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Emgrpass>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_EMGRPASS_I1");

                entity.ToTable("LG_001_EMGRPASS");

                entity.HasIndex(e => new { e.Empgrpref, e.Priority, e.Empref }, "I001_EMGRPASS_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Empref, e.Empgrpref }, "I001_EMGRPASS_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Dominshftgrp).HasColumnName("DOMINSHFTGRP");

                entity.Property(e => e.Empgrpref).HasColumnName("EMPGRPREF");

                entity.Property(e => e.Empref).HasColumnName("EMPREF");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            });

            modelBuilder.Entity<Lg001Empgroup>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_EMPGROUP_I1");

                entity.ToTable("LG_001_EMPGROUP");

                entity.HasIndex(e => e.Code, "I001_EMPGROUP_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_EMPGROUP_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_EMPGROUP_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Name }, "I001_EMPGROUP_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Hourlystdcost).HasColumnName("HOURLYSTDCOST");

                entity.Property(e => e.Hourlystdrpcost).HasColumnName("HOURLYSTDRPCOST");

                entity.Property(e => e.Imageinc).HasColumnName("IMAGEINC");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Operationtime).HasColumnName("OPERATIONTIME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Employee>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_EMPLOYEE_I1");

                entity.ToTable("LG_001_EMPLOYEE");

                entity.HasIndex(e => e.Code, "I001_EMPLOYEE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_EMPLOYEE_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_EMPLOYEE_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Name }, "I001_EMPLOYEE_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.Birthdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BIRTHDATE");

                entity.Property(e => e.Bloodgrp)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("BLOODGRP");

                entity.Property(e => e.Calendarref).HasColumnName("CALENDARREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Citycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CITYCODE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.District)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Districtcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICTCODE");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Empname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EMPNAME");

                entity.Property(e => e.Empsurname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EMPSURNAME");

                entity.Property(e => e.Factorydivnr).HasColumnName("FACTORYDIVNR");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Hourlystdcost).HasColumnName("HOURLYSTDCOST");

                entity.Property(e => e.Hourlystdrpcost).HasColumnName("HOURLYSTDRPCOST");

                entity.Property(e => e.Imageinc).HasColumnName("IMAGEINC");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Operationtime).HasColumnName("OPERATIONTIME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Perscardref).HasColumnName("PERSCARDREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Registercode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("REGISTERCODE");

                entity.Property(e => e.Shftgrpref).HasColumnName("SHFTGRPREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Socialsecno)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("SOCIALSECNO");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Tckno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TCKNO");

                entity.Property(e => e.Telnrs1)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS1");

                entity.Property(e => e.Telnrs2)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS2");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Town)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Towncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TOWNCODE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Emuhacc>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_EMUHACC_I1");

                entity.ToTable("LG_001_EMUHACC");

                entity.HasIndex(e => e.Code, "I001_EMUHACC_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Definition, "I001_EMUHACC_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_EMUHACC_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Definition }, "I001_EMUHACC_I5");

                entity.HasIndex(e => e.Extname, "I001_EMUHACC_I6");

                entity.HasIndex(e => e.Active, "I001_EMUHACC_I7");

                entity.HasIndex(e => e.Subaccounts, "I001_EMUHACC_I8");

                entity.HasIndex(e => new { e.Logicalref, e.Code }, "I001_EMUHACC_I99");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Acctype).HasColumnName("ACCTYPE");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Addinfoptr).HasColumnName("ADDINFOPTR");

                entity.Property(e => e.Bdgtaccref).HasColumnName("BDGTACCREF");

                entity.Property(e => e.Bdgtpayaref).HasColumnName("BDGTPAYAREF");

                entity.Property(e => e.Bdpayreflaref).HasColumnName("BDPAYREFLAREF");

                entity.Property(e => e.Bdreflaccref).HasColumnName("BDREFLACCREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Category).HasColumnName("CATEGORY");

                entity.Property(e => e.Ccurrency).HasColumnName("CCURRENCY");

                entity.Property(e => e.Centerctrl).HasColumnName("CENTERCTRL");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Cldef)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("CLDEF");

                entity.Property(e => e.Code)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Corpcode1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CORPCODE1");

                entity.Property(e => e.Corpcode2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CORPCODE2");

                entity.Property(e => e.Corpcode3)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CORPCODE3");

                entity.Property(e => e.Corpcode4)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("CORPCODE4");

                entity.Property(e => e.Crbdgtaccln).HasColumnName("CRBDGTACCLN");

                entity.Property(e => e.Crbdgtpayaln).HasColumnName("CRBDGTPAYALN");

                entity.Property(e => e.Curratetype).HasColumnName("CURRATETYPE");

                entity.Property(e => e.Currdiffdebtref).HasColumnName("CURRDIFFDEBTREF");

                entity.Property(e => e.Currdifref).HasColumnName("CURRDIFREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Ecocode1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ECOCODE1");

                entity.Property(e => e.Ecocode2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ECOCODE2");

                entity.Property(e => e.Ecocode3)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ECOCODE3");

                entity.Property(e => e.Ecocode4)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("ECOCODE4");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Extname)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("EXTNAME");

                entity.Property(e => e.Fincode)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FINCODE");

                entity.Property(e => e.Fixedcurrtype).HasColumnName("FIXEDCURRTYPE");

                entity.Property(e => e.Fortaxdecl).HasColumnName("FORTAXDECL");

                entity.Property(e => e.Ftflags)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("FTFLAGS");

                entity.Property(e => e.Funccode1)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FUNCCODE1");

                entity.Property(e => e.Funccode2)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FUNCCODE2");

                entity.Property(e => e.Funccode3)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FUNCCODE3");

                entity.Property(e => e.Funccode4)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("FUNCCODE4");

                entity.Property(e => e.Groupcode).HasColumnName("GROUPCODE");

                entity.Property(e => e.Grptransaccref).HasColumnName("GRPTRANSACCREF");

                entity.Property(e => e.Infdiffaccref).HasColumnName("INFDIFFACCREF");

                entity.Property(e => e.Isanbdgtline).HasColumnName("ISANBDGTLINE");

                entity.Property(e => e.Iscash).HasColumnName("ISCASH");

                entity.Property(e => e.Isperscomp).HasColumnName("ISPERSCOMP");

                entity.Property(e => e.Level).HasColumnName("LEVEL_");

                entity.Property(e => e.Monetary).HasColumnName("MONETARY");

                entity.Property(e => e.Notinflated).HasColumnName("NOTINFLATED");

                entity.Property(e => e.Orglogicalref).HasColumnName("ORGLOGICALREF");

                entity.Property(e => e.Postingonly).HasColumnName("POSTINGONLY");

                entity.Property(e => e.Projectctrl).HasColumnName("PROJECTCTRL");

                entity.Property(e => e.Quanctrl).HasColumnName("QUANCTRL");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Specode3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE3");

                entity.Property(e => e.Specode4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE4");

                entity.Property(e => e.Specode5)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE5");

                entity.Property(e => e.Subaccounts).HasColumnName("SUBACCOUNTS");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Tckno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TCKNO");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Textinceng).HasColumnName("TEXTINCENG");

                entity.Property(e => e.Units)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UNITS");

                entity.Property(e => e.Vatacc).HasColumnName("VATACC");

                entity.Property(e => e.Vatreflaref).HasColumnName("VATREFLAREF");

                entity.Property(e => e.Vatreflotharef).HasColumnName("VATREFLOTHAREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Emuhaccsubaccasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_EMUHACCSUBACCASGN_I1");

                entity.ToTable("LG_001_EMUHACCSUBACCASGN");

                entity.HasIndex(e => e.Accountref, "I001_EMUHACCSUBACCASGN_I2");

                entity.HasIndex(e => new { e.Accountref, e.Subaccountref }, "I001_EMUHACCSUBACCASGN_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Subaccountref).HasColumnName("SUBACCOUNTREF");
            });

            modelBuilder.Entity<Lg001Engcline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ENGCLINE_I1");

                entity.ToTable("LG_001_ENGCLINE");

                entity.HasIndex(e => e.Ficheno, "I001_ENGCLINE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Ficheno }, "I001_ENGCLINE_I3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Validdate, e.Ficheno, e.Date }, "I001_ENGCLINE_I4")
                    .IsUnique();

                entity.HasIndex(e => e.Oldrevref, "I001_ENGCLINE_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.Appstatus).HasColumnName("APPSTATUS");

                entity.Property(e => e.Bomlineref).HasColumnName("BOMLINEREF");

                entity.Property(e => e.Bommasterref).HasColumnName("BOMMASTERREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Datefrom)
                    .HasColumnType("datetime")
                    .HasColumnName("DATEFROM");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Method).HasColumnName("METHOD");

                entity.Property(e => e.Newrevref).HasColumnName("NEWREVREF");

                entity.Property(e => e.Oldrevref).HasColumnName("OLDREVREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Reason)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("REASON");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Serilotfrom)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("SERILOTFROM");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Validdate)
                    .HasColumnType("datetime")
                    .HasColumnName("VALIDDATE");

                entity.Property(e => e.Validstatus).HasColumnName("VALIDSTATUS");
            });

            modelBuilder.Entity<Lg001Except>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_EXCEPT_I1");

                entity.ToTable("LG_001_EXCEPT");

                entity.HasIndex(e => new { e.Begdate, e.Enddate }, "I001_EXCEPT_I2");

                entity.HasIndex(e => new { e.Siteid, e.Orglogicref }, "I001_EXCEPT_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Begtime).HasColumnName("BEGTIME");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Costfactor).HasColumnName("COSTFACTOR");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Endtime).HasColumnName("ENDTIME");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceref).HasColumnName("SOURCEREF");

                entity.Property(e => e.Sourcetype).HasColumnName("SOURCETYPE");

                entity.Property(e => e.Workingday).HasColumnName("WORKINGDAY");
            });

            modelBuilder.Entity<Lg001Eximbustyp>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_EXIMBUSTYP_I1");

                entity.ToTable("LG_001_EXIMBUSTYP");

                entity.HasIndex(e => e.Code, "I001_EXIMBUSTYP_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");
            });

            modelBuilder.Entity<Lg001Expcreditcrd>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_EXPCREDITCRD_I1");

                entity.ToTable("LG_001_EXPCREDITCRD");

                entity.HasIndex(e => new { e.Credittype, e.Code }, "I001_EXPCREDITCRD_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Credittype, e.Name }, "I001_EXPCREDITCRD_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bankaccref).HasColumnName("BANKACCREF");

                entity.Property(e => e.Bankref).HasColumnName("BANKREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Credittype).HasColumnName("CREDITTYPE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Intrate).HasColumnName("INTRATE");

                entity.Property(e => e.Inttotal).HasColumnName("INTTOTAL");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Trtotal).HasColumnName("TRTOTAL");
            });

            modelBuilder.Entity<Lg001Expcreditln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_EXPCREDITLN_I1");

                entity.ToTable("LG_001_EXPCREDITLN");

                entity.HasIndex(e => new { e.Excreditref, e.Lineno }, "I001_EXPCREDITLN_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Excreditref).HasColumnName("EXCREDITREF");

                entity.Property(e => e.Gtipcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("GTIPCODE");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Trtotal).HasColumnName("TRTOTAL");

                entity.Property(e => e.Unitsetref).HasColumnName("UNITSETREF");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");
            });

            modelBuilder.Entity<Lg001Faanncost>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_FAANNCOST_I1");

                entity.ToTable("LG_001_FAANNCOST");

                entity.HasIndex(e => new { e.Fregref, e.Dt }, "I001_FAANNCOST_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Annval).HasColumnName("ANNVAL");

                entity.Property(e => e.Dt)
                    .HasColumnType("datetime")
                    .HasColumnName("DT");

                entity.Property(e => e.Fregref).HasColumnName("FREGREF");

                entity.Property(e => e.Rofmval).HasColumnName("ROFMVAL");

                entity.Property(e => e.Tablety).HasColumnName("TABLETY");
            });

            modelBuilder.Entity<Lg001Faexpense>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_FAEXPENSE_I1");

                entity.ToTable("LG_001_FAEXPENSE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Devir).HasColumnName("DEVIR");

                entity.Property(e => e.Faexpbinddate)
                    .HasColumnType("datetime")
                    .HasColumnName("FAEXPBINDDATE");

                entity.Property(e => e.Faexpfaregref).HasColumnName("FAEXPFAREGREF");

                entity.Property(e => e.Faexpitemref).HasColumnName("FAEXPITEMREF");

                entity.Property(e => e.Faexptyp).HasColumnName("FAEXPTYP");

                entity.Property(e => e.Faexstfcref).HasColumnName("FAEXSTFCREF");

                entity.Property(e => e.Faexstlineref).HasColumnName("FAEXSTLINEREF");

                entity.Property(e => e.Faregistref).HasColumnName("FAREGISTREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<Lg001Faprodnum>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_FAPRODNUMS_I1");

                entity.ToTable("LG_001_FAPRODNUMS");

                entity.HasIndex(e => new { e.Faregref, e.Year, e.Month }, "I001_FAPRODNUMS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Faregref).HasColumnName("FAREGREF");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg001Faregist>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_FAREGIST_I1");

                entity.ToTable("LG_001_FAREGIST");

                entity.HasIndex(e => new { e.Crdref, e.Datein }, "I001_FAREGIST_I2");

                entity.HasIndex(e => e.Regcode, "I001_FAREGIST_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accumdepr).HasColumnName("ACCUMDEPR");

                entity.Property(e => e.Accumdeprx).HasColumnName("ACCUMDEPRX");

                entity.Property(e => e.Accumreval).HasColumnName("ACCUMREVAL");

                entity.Property(e => e.Accumrevalx).HasColumnName("ACCUMREVALX");

                entity.Property(e => e.Annualdistval).HasColumnName("ANNUALDISTVAL");

                entity.Property(e => e.Annualdistval2).HasColumnName("ANNUALDISTVAL2");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Begdepr).HasColumnName("BEGDEPR");

                entity.Property(e => e.Begdeprx).HasColumnName("BEGDEPRX");

                entity.Property(e => e.Begreval).HasColumnName("BEGREVAL");

                entity.Property(e => e.Begrevalx).HasColumnName("BEGREVALX");

                entity.Property(e => e.Begrevdepr).HasColumnName("BEGREVDEPR");

                entity.Property(e => e.Begrevdeprx).HasColumnName("BEGREVDEPRX");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Capacityunit)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CAPACITYUNIT");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Crdref).HasColumnName("CRDREF");

                entity.Property(e => e.Currtype).HasColumnName("CURRTYPE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Dateactive)
                    .HasColumnType("datetime")
                    .HasColumnName("DATEACTIVE");

                entity.Property(e => e.Datein)
                    .HasColumnType("datetime")
                    .HasColumnName("DATEIN");

                entity.Property(e => e.Dateofdepr)
                    .HasColumnType("datetime")
                    .HasColumnName("DATEOFDEPR");

                entity.Property(e => e.Dateofdepr2).HasColumnName("DATEOFDEPR2");

                entity.Property(e => e.Dateofdepr3)
                    .HasColumnType("datetime")
                    .HasColumnName("DATEOFDEPR3");

                entity.Property(e => e.Dateofdepr4)
                    .HasColumnType("datetime")
                    .HasColumnName("DATEOFDEPR4");

                entity.Property(e => e.Dateofdepr5).HasColumnName("DATEOFDEPR5");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Deprdur).HasColumnName("DEPRDUR");

                entity.Property(e => e.Deprdur2).HasColumnName("DEPRDUR2");

                entity.Property(e => e.Deprdur3).HasColumnName("DEPRDUR3");

                entity.Property(e => e.Deprdur4).HasColumnName("DEPRDUR4");

                entity.Property(e => e.Deprdur5).HasColumnName("DEPRDUR5");

                entity.Property(e => e.Deprdurtype2).HasColumnName("DEPRDURTYPE2");

                entity.Property(e => e.Deprdurtype5).HasColumnName("DEPRDURTYPE5");

                entity.Property(e => e.Deprrate).HasColumnName("DEPRRATE");

                entity.Property(e => e.Deprrate2).HasColumnName("DEPRRATE2");

                entity.Property(e => e.Deprrate3).HasColumnName("DEPRRATE3");

                entity.Property(e => e.Deprrate4).HasColumnName("DEPRRATE4");

                entity.Property(e => e.Deprrate5).HasColumnName("DEPRRATE5");

                entity.Property(e => e.Deprstpdate)
                    .HasColumnType("datetime")
                    .HasColumnName("DEPRSTPDATE");

                entity.Property(e => e.Deprstpreasn).HasColumnName("DEPRSTPREASN");

                entity.Property(e => e.Deprtype).HasColumnName("DEPRTYPE");

                entity.Property(e => e.Deprtype2).HasColumnName("DEPRTYPE2");

                entity.Property(e => e.Deprtype3).HasColumnName("DEPRTYPE3");

                entity.Property(e => e.Deprtype4).HasColumnName("DEPRTYPE4");

                entity.Property(e => e.Deprtype5).HasColumnName("DEPRTYPE5");

                entity.Property(e => e.Diffprice).HasColumnName("DIFFPRICE");

                entity.Property(e => e.Diffrepprice).HasColumnName("DIFFREPPRICE");

                entity.Property(e => e.Exptotal).HasColumnName("EXPTOTAL");

                entity.Property(e => e.Exptotalx).HasColumnName("EXPTOTALX");

                entity.Property(e => e.Fausefullifecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("FAUSEFULLIFECODE");

                entity.Property(e => e.Fausefullifecode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("FAUSEFULLIFECODE2");

                entity.Property(e => e.Fausefullifecode3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("FAUSEFULLIFECODE3");

                entity.Property(e => e.Fausefullifecode4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("FAUSEFULLIFECODE4");

                entity.Property(e => e.Fausefullifecode5)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("FAUSEFULLIFECODE5");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Figscostop).HasColumnName("FIGSCOSTOP");

                entity.Property(e => e.Figscostopx).HasColumnName("FIGSCOSTOPX");

                entity.Property(e => e.Figstotcost).HasColumnName("FIGSTOTCOST");

                entity.Property(e => e.Figstotcostx).HasColumnName("FIGSTOTCOSTX");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Infidx).HasColumnName("INFIDX");

                entity.Property(e => e.Infidx2).HasColumnName("INFIDX2");

                entity.Property(e => e.Inflbasedvalue).HasColumnName("INFLBASEDVALUE");

                entity.Property(e => e.Inflbasedvalue2).HasColumnName("INFLBASEDVALUE2");

                entity.Property(e => e.Invalue).HasColumnName("INVALUE");

                entity.Property(e => e.Invaluex).HasColumnName("INVALUEX");

                entity.Property(e => e.Invdiscincl).HasColumnName("INVDISCINCL");

                entity.Property(e => e.Invdiscrate).HasColumnName("INVDISCRATE");

                entity.Property(e => e.Maintbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("MAINTBEGDATE");

                entity.Property(e => e.Maintfactor).HasColumnName("MAINTFACTOR");

                entity.Property(e => e.Maintlife).HasColumnName("MAINTLIFE");

                entity.Property(e => e.Maintlifeasratio).HasColumnName("MAINTLIFEASRATIO");

                entity.Property(e => e.Maintlifetracktype).HasColumnName("MAINTLIFETRACKTYPE");

                entity.Property(e => e.Maintlifetype).HasColumnName("MAINTLIFETYPE");

                entity.Property(e => e.Maintnumber).HasColumnName("MAINTNUMBER");

                entity.Property(e => e.Maintperiod).HasColumnName("MAINTPERIOD");

                entity.Property(e => e.Maintperunit).HasColumnName("MAINTPERUNIT");

                entity.Property(e => e.Mainttype).HasColumnName("MAINTTYPE");

                entity.Property(e => e.Maintusagelife).HasColumnName("MAINTUSAGELIFE");

                entity.Property(e => e.OpvalsBegdepr).HasColumnName("OPVALS_BEGDEPR");

                entity.Property(e => e.OpvalsBegreval).HasColumnName("OPVALS_BEGREVAL");

                entity.Property(e => e.OpvalsBegrevdepr).HasColumnName("OPVALS_BEGREVDEPR");

                entity.Property(e => e.Opvalsinf2Begdepr).HasColumnName("OPVALSINF2_BEGDEPR");

                entity.Property(e => e.Opvalsinf2Begreval).HasColumnName("OPVALSINF2_BEGREVAL");

                entity.Property(e => e.Opvalsinf2Begrevdepr).HasColumnName("OPVALSINF2_BEGREVDEPR");

                entity.Property(e => e.Opvalsinf3Begdepr).HasColumnName("OPVALSINF3_BEGDEPR");

                entity.Property(e => e.Opvalsinf3Begreval).HasColumnName("OPVALSINF3_BEGREVAL");

                entity.Property(e => e.Opvalsinf3Begrevdepr).HasColumnName("OPVALSINF3_BEGREVDEPR");

                entity.Property(e => e.OpvalsinfBegdepr).HasColumnName("OPVALSINF_BEGDEPR");

                entity.Property(e => e.OpvalsinfBegreval).HasColumnName("OPVALSINF_BEGREVAL");

                entity.Property(e => e.OpvalsinfBegrevdepr).HasColumnName("OPVALSINF_BEGREVDEPR");

                entity.Property(e => e.Opvalsinfx2Begdepr).HasColumnName("OPVALSINFX2_BEGDEPR");

                entity.Property(e => e.Opvalsinfx2Begreval).HasColumnName("OPVALSINFX2_BEGREVAL");

                entity.Property(e => e.Opvalsinfx2Begrevdepr).HasColumnName("OPVALSINFX2_BEGREVDEPR");

                entity.Property(e => e.Opvalsinfx3Begdepr).HasColumnName("OPVALSINFX3_BEGDEPR");

                entity.Property(e => e.Opvalsinfx3Begreval).HasColumnName("OPVALSINFX3_BEGREVAL");

                entity.Property(e => e.Opvalsinfx3Begrevdepr).HasColumnName("OPVALSINFX3_BEGREVDEPR");

                entity.Property(e => e.OpvalsinfxBegdepr).HasColumnName("OPVALSINFX_BEGDEPR");

                entity.Property(e => e.OpvalsinfxBegreval).HasColumnName("OPVALSINFX_BEGREVAL");

                entity.Property(e => e.OpvalsinfxBegrevdepr).HasColumnName("OPVALSINFX_BEGREVDEPR");

                entity.Property(e => e.OpvalsxBegdepr).HasColumnName("OPVALSX_BEGDEPR");

                entity.Property(e => e.OpvalsxBegreval).HasColumnName("OPVALSX_BEGREVAL");

                entity.Property(e => e.OpvalsxBegrevdepr).HasColumnName("OPVALSX_BEGREVDEPR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Otvamount).HasColumnName("OTVAMOUNT");

                entity.Property(e => e.Partdep).HasColumnName("PARTDEP");

                entity.Property(e => e.Partdep2).HasColumnName("PARTDEP2");

                entity.Property(e => e.Partdep3).HasColumnName("PARTDEP3");

                entity.Property(e => e.Partdep4).HasColumnName("PARTDEP4");

                entity.Property(e => e.Partdep5).HasColumnName("PARTDEP5");

                entity.Property(e => e.Prodcapacity).HasColumnName("PRODCAPACITY");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Quantity).HasColumnName("QUANTITY");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Regcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("REGCODE");

                entity.Property(e => e.Regdefinition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("REGDEFINITION");

                entity.Property(e => e.Regexpenscod)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("REGEXPENSCOD");

                entity.Property(e => e.Regexpensdef)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("REGEXPENSDEF");

                entity.Property(e => e.Regtypcod)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("REGTYPCOD");

                entity.Property(e => e.Regtypdef)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("REGTYPDEF");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Revalflag2).HasColumnName("REVALFLAG2");

                entity.Property(e => e.Revalflag5).HasColumnName("REVALFLAG5");

                entity.Property(e => e.Revdepflag).HasColumnName("REVDEPFLAG");

                entity.Property(e => e.Revdeprflag2).HasColumnName("REVDEPRFLAG2");

                entity.Property(e => e.Revdeprflag5).HasColumnName("REVDEPRFLAG5");

                entity.Property(e => e.Revflag).HasColumnName("REVFLAG");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Taxaccflag).HasColumnName("TAXACCFLAG");

                entity.Property(e => e.Taxexprate2).HasColumnName("TAXEXPRATE2");

                entity.Property(e => e.Taxexptyp2).HasColumnName("TAXEXPTYP2");

                entity.Property(e => e.Tfrsvalue).HasColumnName("TFRSVALUE");

                entity.Property(e => e.Totout).HasColumnName("TOTOUT");

                entity.Property(e => e.Totrevamount).HasColumnName("TOTREVAMOUNT");

                entity.Property(e => e.Totrevamountx).HasColumnName("TOTREVAMOUNTX");

                entity.Property(e => e.Transfer).HasColumnName("TRANSFER");

                entity.Property(e => e.Vatamount).HasColumnName("VATAMOUNT");

                entity.Property(e => e.Vatdur).HasColumnName("VATDUR");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg001Faregnewvalue>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_FAREGNEWVALUE_I1");

                entity.ToTable("LG_001_FAREGNEWVALUE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accflg).HasColumnName("ACCFLG");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Deptabtyp).HasColumnName("DEPTABTYP");

                entity.Property(e => e.Faregref).HasColumnName("FAREGREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Newreportnet).HasColumnName("NEWREPORTNET");

                entity.Property(e => e.Newvalue).HasColumnName("NEWVALUE");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");
            });

            modelBuilder.Entity<Lg001Fatran>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_FATRANS_I1");

                entity.ToTable("LG_001_FATRANS");

                entity.HasIndex(e => e.Faref, "I001_FATRANS_I2");

                entity.HasIndex(e => e.Perref, "I001_FATRANS_I3");

                entity.HasIndex(e => e.Ficheno, "I001_FATRANS_I4")
                    .IsUnique();

                entity.HasIndex(e => e.Date, "I001_FATRANS_I5");

                entity.HasIndex(e => e.Fatransref, "I001_FATRANS_I6");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Duedate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUEDATE");

                entity.Property(e => e.Empgrpref).HasColumnName("EMPGRPREF");

                entity.Property(e => e.Exp)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("EXP");

                entity.Property(e => e.Factory).HasColumnName("FACTORY");

                entity.Property(e => e.Fadepartment)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FADEPARTMENT");

                entity.Property(e => e.Faref).HasColumnName("FAREF");

                entity.Property(e => e.Fastatus).HasColumnName("FASTATUS");

                entity.Property(e => e.Fatransref).HasColumnName("FATRANSREF");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Groupnr).HasColumnName("GROUPNR");

                entity.Property(e => e.Havedate)
                    .HasColumnType("datetime")
                    .HasColumnName("HAVEDATE");

                entity.Property(e => e.Isempgrp).HasColumnName("ISEMPGRP");

                entity.Property(e => e.Lasttrandate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTTRANDATE");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Oldamnt).HasColumnName("OLDAMNT");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Perref).HasColumnName("PERREF");

                entity.Property(e => e.Plnduedate)
                    .HasColumnType("datetime")
                    .HasColumnName("PLNDUEDATE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Warehouse).HasColumnName("WAREHOUSE");
            });

            modelBuilder.Entity<Lg001Fayear>(entity =>
            {
                entity.HasKey(e => e.Lref)
                    .HasName("I001_FAYEAR_I1");

                entity.ToTable("LG_001_FAYEAR");

                entity.HasIndex(e => new { e.Tablety, e.Fregref, e.Year }, "I001_FAYEAR_I2");

                entity.Property(e => e.Lref).HasColumnName("LREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Allocateall).HasColumnName("ALLOCATEALL");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Calcmon).HasColumnName("CALCMON");

                entity.Property(e => e.Closed).HasColumnName("CLOSED");

                entity.Property(e => e.Curfigs2Perdaccdeprrv).HasColumnName("CURFIGS2_PERDACCDEPRRV");

                entity.Property(e => e.Curfigs2Perddepr).HasColumnName("CURFIGS2_PERDDEPR");

                entity.Property(e => e.Curfigs2Perddeprkkeg).HasColumnName("CURFIGS2_PERDDEPRKKEG");

                entity.Property(e => e.Curfigs2Perdreval).HasColumnName("CURFIGS2_PERDREVAL");

                entity.Property(e => e.Curfigs2Revfund).HasColumnName("CURFIGS2_REVFUND");

                entity.Property(e => e.CurfigsAccdeprcst).HasColumnName("CURFIGS_ACCDEPRCST");

                entity.Property(e => e.CurfigsAccdepreoy).HasColumnName("CURFIGS_ACCDEPREOY");

                entity.Property(e => e.CurfigsAccdeprop).HasColumnName("CURFIGS_ACCDEPROP");

                entity.Property(e => e.CurfigsAccdeprrv).HasColumnName("CURFIGS_ACCDEPRRV");

                entity.Property(e => e.CurfigsAccdpout).HasColumnName("CURFIGS_ACCDPOUT");

                entity.Property(e => e.CurfigsAmountout).HasColumnName("CURFIGS_AMOUNTOUT");

                entity.Property(e => e.CurfigsAmountoutr).HasColumnName("CURFIGS_AMOUNTOUTR");

                entity.Property(e => e.CurfigsBookvalop).HasColumnName("CURFIGS_BOOKVALOP");

                entity.Property(e => e.CurfigsBookvalrv).HasColumnName("CURFIGS_BOOKVALRV");

                entity.Property(e => e.CurfigsCostop).HasColumnName("CURFIGS_COSTOP");

                entity.Property(e => e.CurfigsCumexpor).HasColumnName("CURFIGS_CUMEXPOR");

                entity.Property(e => e.CurfigsDeprann).HasColumnName("CURFIGS_DEPRANN");

                entity.Property(e => e.CurfigsExpoutrev).HasColumnName("CURFIGS_EXPOUTREV");

                entity.Property(e => e.CurfigsExpusual).HasColumnName("CURFIGS_EXPUSUAL");

                entity.Property(e => e.CurfigsNetvalrv).HasColumnName("CURFIGS_NETVALRV");

                entity.Property(e => e.CurfigsRevamounin).HasColumnName("CURFIGS_REVAMOUNIN");

                entity.Property(e => e.CurfigsRevamounout).HasColumnName("CURFIGS_REVAMOUNOUT");

                entity.Property(e => e.CurfigsTotcost).HasColumnName("CURFIGS_TOTCOST");

                entity.Property(e => e.Cutdepramnt).HasColumnName("CUTDEPRAMNT");

                entity.Property(e => e.Daccflag).HasColumnName("DACCFLAG");

                entity.Property(e => e.Drate).HasColumnName("DRATE");

                entity.Property(e => e.Dtype).HasColumnName("DTYPE");

                entity.Property(e => e.Faexpitemref).HasColumnName("FAEXPITEMREF");

                entity.Property(e => e.Faexptype).HasColumnName("FAEXPTYPE");

                entity.Property(e => e.Fregref).HasColumnName("FREGREF");

                entity.Property(e => e.Infidx).HasColumnName("INFIDX");

                entity.Property(e => e.Locfigs2Perdaccdeprrv).HasColumnName("LOCFIGS2_PERDACCDEPRRV");

                entity.Property(e => e.Locfigs2Perddepr).HasColumnName("LOCFIGS2_PERDDEPR");

                entity.Property(e => e.Locfigs2Perddeprkkeg).HasColumnName("LOCFIGS2_PERDDEPRKKEG");

                entity.Property(e => e.Locfigs2Perdreval).HasColumnName("LOCFIGS2_PERDREVAL");

                entity.Property(e => e.Locfigs2Revfund).HasColumnName("LOCFIGS2_REVFUND");

                entity.Property(e => e.LocfigsAccdeprcst).HasColumnName("LOCFIGS_ACCDEPRCST");

                entity.Property(e => e.LocfigsAccdepreoy).HasColumnName("LOCFIGS_ACCDEPREOY");

                entity.Property(e => e.LocfigsAccdeprop).HasColumnName("LOCFIGS_ACCDEPROP");

                entity.Property(e => e.LocfigsAccdeprrv).HasColumnName("LOCFIGS_ACCDEPRRV");

                entity.Property(e => e.LocfigsAccdpout).HasColumnName("LOCFIGS_ACCDPOUT");

                entity.Property(e => e.LocfigsAmountout).HasColumnName("LOCFIGS_AMOUNTOUT");

                entity.Property(e => e.LocfigsAmountoutr).HasColumnName("LOCFIGS_AMOUNTOUTR");

                entity.Property(e => e.LocfigsBookvalop).HasColumnName("LOCFIGS_BOOKVALOP");

                entity.Property(e => e.LocfigsBookvalrv).HasColumnName("LOCFIGS_BOOKVALRV");

                entity.Property(e => e.LocfigsCostop).HasColumnName("LOCFIGS_COSTOP");

                entity.Property(e => e.LocfigsCumexpor).HasColumnName("LOCFIGS_CUMEXPOR");

                entity.Property(e => e.LocfigsDeprann).HasColumnName("LOCFIGS_DEPRANN");

                entity.Property(e => e.LocfigsExpoutrev).HasColumnName("LOCFIGS_EXPOUTREV");

                entity.Property(e => e.LocfigsExpusual).HasColumnName("LOCFIGS_EXPUSUAL");

                entity.Property(e => e.LocfigsNetvalrv).HasColumnName("LOCFIGS_NETVALRV");

                entity.Property(e => e.LocfigsRevamounin).HasColumnName("LOCFIGS_REVAMOUNIN");

                entity.Property(e => e.LocfigsRevamounout).HasColumnName("LOCFIGS_REVAMOUNOUT");

                entity.Property(e => e.LocfigsTotcost).HasColumnName("LOCFIGS_TOTCOST");

                entity.Property(e => e.Prodamount).HasColumnName("PRODAMOUNT");

                entity.Property(e => e.Quanout).HasColumnName("QUANOUT");

                entity.Property(e => e.Raccflag).HasColumnName("RACCFLAG");

                entity.Property(e => e.Revaccficheref).HasColumnName("REVACCFICHEREF");

                entity.Property(e => e.Revpriceidxdate)
                    .HasColumnType("datetime")
                    .HasColumnName("REVPRICEIDXDATE");

                entity.Property(e => e.Revrate).HasColumnName("REVRATE");

                entity.Property(e => e.Skipdepr).HasColumnName("SKIPDEPR");

                entity.Property(e => e.Stopped).HasColumnName("STOPPED");

                entity.Property(e => e.Tablety).HasColumnName("TABLETY");

                entity.Property(e => e.Vaccflag).HasColumnName("VACCFLAG");

                entity.Property(e => e.Vatposted).HasColumnName("VATPOSTED");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg001Fayearstop>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_FAYEARSTOP_I1");

                entity.ToTable("LG_001_FAYEARSTOP");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Explanation)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("EXPLANATION");

                entity.Property(e => e.Faregref).HasColumnName("FAREGREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Startdate)
                    .HasColumnType("datetime")
                    .HasColumnName("STARTDATE");

                entity.Property(e => e.Stopforacc).HasColumnName("STOPFORACC");

                entity.Property(e => e.Stopfortax).HasColumnName("STOPFORTAX");
            });

            modelBuilder.Entity<Lg001Fichestatus>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_FICHESTATUS_I1");

                entity.ToTable("LG_001_FICHESTATUS");

                entity.HasIndex(e => new { e.Typ, e.Name }, "I001_FICHESTATUS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Name)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<Lg001Fintableitem>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_FINTABLEITEM_I1");

                entity.ToTable("LG_001_FINTABLEITEM");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Acctype).HasColumnName("ACCTYPE");

                entity.Property(e => e.Begcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("BEGCODE");

                entity.Property(e => e.Calctype).HasColumnName("CALCTYPE");

                entity.Property(e => e.Currtype).HasColumnName("CURRTYPE");

                entity.Property(e => e.Endcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ENDCODE");

                entity.Property(e => e.Fieldnr).HasColumnName("FIELDNR");

                entity.Property(e => e.Formula)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA");

                entity.Property(e => e.Itemcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ITEMCODE");

                entity.Property(e => e.Itemlevel).HasColumnName("ITEMLEVEL");

                entity.Property(e => e.Itemname)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ITEMNAME");

                entity.Property(e => e.Itemtype).HasColumnName("ITEMTYPE");

                entity.Property(e => e.Kdv1txt)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("KDV1TXT");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Printinreport).HasColumnName("PRINTINREPORT");

                entity.Property(e => e.Rates1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("RATES1");

                entity.Property(e => e.Rates2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("RATES2");

                entity.Property(e => e.Rates3)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("RATES3");

                entity.Property(e => e.Rates4)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("RATES4");

                entity.Property(e => e.Remtype).HasColumnName("REMTYPE");

                entity.Property(e => e.Side).HasColumnName("SIDE");

                entity.Property(e => e.Tableref).HasColumnName("TABLEREF");

                entity.Property(e => e.Taxdecllnref).HasColumnName("TAXDECLLNREF");

                entity.Property(e => e.Taxdecltyp).HasColumnName("TAXDECLTYP");

                entity.Property(e => e.Totalcurr).HasColumnName("TOTALCURR");

                entity.Property(e => e.Totaltl).HasColumnName("TOTALTL");

                entity.Property(e => e.Tottype).HasColumnName("TOTTYPE");
            });

            modelBuilder.Entity<Lg001Fintblheader>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_FINTBLHEADER_I1");

                entity.ToTable("LG_001_FINTBLHEADER");

                entity.HasIndex(e => new { e.Tabtype, e.Tabname }, "I001_FINTBLHEADER_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Currtyp).HasColumnName("CURRTYP");

                entity.Property(e => e.Itemsz).HasColumnName("ITEMSZ");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Replevel).HasColumnName("REPLEVEL");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Tableexp)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("TABLEEXP");

                entity.Property(e => e.Tablegenexp)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TABLEGENEXP");

                entity.Property(e => e.Tablemult).HasColumnName("TABLEMULT");

                entity.Property(e => e.Tabname)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("TABNAME");

                entity.Property(e => e.Tabtype).HasColumnName("TABTYPE");

                entity.Property(e => e.Totaltyp).HasColumnName("TOTALTYP");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Fintbllineacc>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_FINTBLLINEACC_I1");

                entity.ToTable("LG_001_FINTBLLINEACC");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Lnref).HasColumnName("LNREF");

                entity.Property(e => e.Tblref).HasColumnName("TBLREF");

                entity.Property(e => e.Tbltyp).HasColumnName("TBLTYP");
            });

            modelBuilder.Entity<Lg001Firmdoc>(entity =>
            {
                entity.HasKey(e => e.Lref)
                    .HasName("I001_FIRMDOC_I2");

                entity.ToTable("LG_001_FIRMDOC");

                entity.HasIndex(e => new { e.Infotyp, e.Inforef, e.Doctyp, e.Docnr }, "I001_FIRMDOC_I1");

                entity.Property(e => e.Lref).HasColumnName("LREF");

                entity.Property(e => e.Docnr).HasColumnName("DOCNR");

                entity.Property(e => e.Doctyp).HasColumnName("DOCTYP");

                entity.Property(e => e.Inforef).HasColumnName("INFOREF");

                entity.Property(e => e.Infotyp).HasColumnName("INFOTYP");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");
            });

            modelBuilder.Entity<Lg001Forecasthead>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_FORECASTHEAD_I1");

                entity.ToTable("LG_001_FORECASTHEAD");

                entity.HasIndex(e => e.Code, "I001_FORECASTHEAD_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Amounttype).HasColumnName("AMOUNTTYPE");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Correction).HasColumnName("CORRECTION");

                entity.Property(e => e.Cyclecount).HasColumnName("CYCLECOUNT");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Extcount).HasColumnName("EXTCOUNT");

                entity.Property(e => e.Grouptype).HasColumnName("GROUPTYPE");

                entity.Property(e => e.Grpvariant).HasColumnName("GRPVARIANT");

                entity.Property(e => e.Periodtype).HasColumnName("PERIODTYPE");

                entity.Property(e => e.Rundate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUNDATE");

                entity.Property(e => e.Sourcetype).HasColumnName("SOURCETYPE");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Userno).HasColumnName("USERNO");
            });

            modelBuilder.Entity<Lg001Forecastline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_FORECASTLINE_I1");

                entity.ToTable("LG_001_FORECASTLINE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Castamount).HasColumnName("CASTAMOUNT");

                entity.Property(e => e.Errval).HasColumnName("ERRVAL");

                entity.Property(e => e.Groupcode1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("GROUPCODE1");

                entity.Property(e => e.Groupcode2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GROUPCODE2");

                entity.Property(e => e.Headref).HasColumnName("HEADREF");

                entity.Property(e => e.Methodno).HasColumnName("METHODNO");

                entity.Property(e => e.Periodcount).HasColumnName("PERIODCOUNT");

                entity.Property(e => e.Periodno).HasColumnName("PERIODNO");

                entity.Property(e => e.Prevamount).HasColumnName("PREVAMOUNT");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Uomstr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("UOMSTR");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg001Frmprdparam>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_FRMPRDPARAM_I1");

                entity.ToTable("LG_001_FRMPRDPARAM");

                entity.HasIndex(e => new { e.Firmnr, e.Setcode, e.Paramcode }, "I001_FRMPRDPARAM_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Firmnr, e.Setcode, e.Paramname }, "I001_FRMPRDPARAM_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Paramcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PARAMCODE");

                entity.Property(e => e.Paramdefault).HasColumnName("PARAMDEFAULT");

                entity.Property(e => e.Paramname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("PARAMNAME");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Setcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SETCODE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Gaugparam>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_GAUGPARAM_I1");

                entity.ToTable("LG_001_GAUGPARAM");

                entity.HasIndex(e => new { e.Usernr, e.Gaugtype }, "I001_GAUGPARAM_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Angle).HasColumnName("ANGLE");

                entity.Property(e => e.Antials).HasColumnName("ANTIALS");

                entity.Property(e => e.Arrowc).HasColumnName("ARROWC");

                entity.Property(e => e.Awidth).HasColumnName("AWIDTH");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Capt)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("CAPT");

                entity.Property(e => e.Captionc).HasColumnName("CAPTIONC");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Centerc).HasColumnName("CENTERC");

                entity.Property(e => e.Centradius).HasColumnName("CENTRADIUS");

                entity.Property(e => e.Circlec).HasColumnName("CIRCLEC");

                entity.Property(e => e.Circradius).HasColumnName("CIRCRADIUS");

                entity.Property(e => e.Currtype).HasColumnName("CURRTYPE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Enlargerate).HasColumnName("ENLARGERATE");

                entity.Property(e => e.Facec).HasColumnName("FACEC");

                entity.Property(e => e.Gaugtype).HasColumnName("GAUGTYPE");

                entity.Property(e => e.Horzrotate).HasColumnName("HORZROTATE");

                entity.Property(e => e.Indmax).HasColumnName("INDMAX");

                entity.Property(e => e.Indmin).HasColumnName("INDMIN");

                entity.Property(e => e.Lmaint).HasColumnName("LMAINT");

                entity.Property(e => e.Lsubt).HasColumnName("LSUBT");

                entity.Property(e => e.Marginc).HasColumnName("MARGINC");

                entity.Property(e => e.Maxc).HasColumnName("MAXC");

                entity.Property(e => e.Midc).HasColumnName("MIDC");

                entity.Property(e => e.Minc).HasColumnName("MINC");

                entity.Property(e => e.Nmaint).HasColumnName("NMAINT");

                entity.Property(e => e.Rate3b).HasColumnName("RATE3B");

                entity.Property(e => e.Scale).HasColumnName("SCALE");

                entity.Property(e => e.Scalest).HasColumnName("SCALEST");

                entity.Property(e => e.Show3d).HasColumnName("SHOW3D");

                entity.Property(e => e.Showcaption).HasColumnName("SHOWCAPTION");

                entity.Property(e => e.Showcenter).HasColumnName("SHOWCENTER");

                entity.Property(e => e.Showcircles).HasColumnName("SHOWCIRCLES");

                entity.Property(e => e.Showframe).HasColumnName("SHOWFRAME");

                entity.Property(e => e.Showindicatormax).HasColumnName("SHOWINDICATORMAX");

                entity.Property(e => e.Showindicatormid).HasColumnName("SHOWINDICATORMID");

                entity.Property(e => e.Showindicatormin).HasColumnName("SHOWINDICATORMIN");

                entity.Property(e => e.Showmainticks).HasColumnName("SHOWMAINTICKS");

                entity.Property(e => e.Showmargin).HasColumnName("SHOWMARGIN");

                entity.Property(e => e.Showsubticks).HasColumnName("SHOWSUBTICKS");

                entity.Property(e => e.Showvalues).HasColumnName("SHOWVALUES");

                entity.Property(e => e.Ticksc).HasColumnName("TICKSC");

                entity.Property(e => e.Timeinterval).HasColumnName("TIMEINTERVAL");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");

                entity.Property(e => e.Valuec).HasColumnName("VALUEC");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Vertrotate).HasColumnName("VERTROTATE");
            });

            modelBuilder.Entity<Lg001Genmodp>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_GENMODP_I1");

                entity.ToTable("LG_001_GENMODP");

                entity.HasIndex(e => new { e.Modulenr, e.Level, e.Parentref, e.Ownerref, e.Index }, "I001_GENMODP_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Index).HasColumnName("INDEX_");

                entity.Property(e => e.Ivalue).HasColumnName("IVALUE");

                entity.Property(e => e.Level).HasColumnName("LEVEL_");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Ownerref).HasColumnName("OWNERREF");

                entity.Property(e => e.Parentref).HasColumnName("PARENTREF");
            });

            modelBuilder.Entity<Lg001Germanydef>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_GERMANYDEF_I1");

                entity.ToTable("LG_001_GERMANYDEF");

                entity.HasIndex(e => new { e.Deftype, e.Defcode }, "I001_GERMANYDEF_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Defcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("DEFCODE");

                entity.Property(e => e.Defexp1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFEXP1");

                entity.Property(e => e.Defexp2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFEXP2");

                entity.Property(e => e.Defexp3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFEXP3");

                entity.Property(e => e.Defexp4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFEXP4");

                entity.Property(e => e.Defexp5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFEXP5");

                entity.Property(e => e.Defexp6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFEXP6");

                entity.Property(e => e.Deftype).HasColumnName("DEFTYPE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<Lg001Glassgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_GLASSGN_I1");

                entity.ToTable("LG_001_GLASSGN");

                entity.HasIndex(e => new { e.Modulenr, e.Trantype, e.Tranref }, "I001_GLASSGN_I2");

                entity.HasIndex(e => new { e.Modulenr, e.Tranref, e.Trantype }, "I001_GLASSGN_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accdisttempref).HasColumnName("ACCDISTTEMPREF");

                entity.Property(e => e.Accref).HasColumnName("ACCREF");

                entity.Property(e => e.Ccenterref).HasColumnName("CCENTERREF");

                entity.Property(e => e.Explain)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EXPLAIN");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Tranref).HasColumnName("TRANREF");

                entity.Property(e => e.Trantype).HasColumnName("TRANTYPE");
            });

            modelBuilder.Entity<Lg001Glconnfilt>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_GLCONNFILT_I1");

                entity.ToTable("LG_001_GLCONNFILT");

                entity.HasIndex(e => new { e.Logicalref, e.Connectionref }, "I001_GLCONNFILT_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begvalue)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BEGVALUE");

                entity.Property(e => e.Connectionref).HasColumnName("CONNECTIONREF");

                entity.Property(e => e.Endvalue)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ENDVALUE");

                entity.Property(e => e.Grpvalue)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("GRPVALUE");

                entity.Property(e => e.Selnr).HasColumnName("SELNR");

                entity.Property(e => e.Seltype).HasColumnName("SELTYPE");
            });

            modelBuilder.Entity<Lg001Guaranteeline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_GUARANTEELINE_I1");

                entity.ToTable("LG_001_GUARANTEELINE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Exp)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("EXP");

                entity.Property(e => e.Faref).HasColumnName("FAREF");

                entity.Property(e => e.Grntdocno)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GRNTDOCNO");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<Lg001History>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_HISTORY_I1");

                entity.ToTable("LG_001_HISTORY");

                entity.HasIndex(e => new { e.Tableid, e.Dataref, e.Logicalref }, "I001_HISTORY_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Modifieddate, e.Modifiedhour, e.Modifiedmin, e.Modifiedsec }, "I001_HISTORY_I3");

                entity.HasIndex(e => e.Dataguid, "I001_HISTORY_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Dataguid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("DATAGUID");

                entity.Property(e => e.Dataref).HasColumnName("DATAREF");

                entity.Property(e => e.Modifiedby).HasColumnName("MODIFIEDBY");

                entity.Property(e => e.Modifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFIEDDATE");

                entity.Property(e => e.Modifiedhour).HasColumnName("MODIFIEDHOUR");

                entity.Property(e => e.Modifiedmin).HasColumnName("MODIFIEDMIN");

                entity.Property(e => e.Modifiedsec).HasColumnName("MODIFIEDSEC");

                entity.Property(e => e.Modiftxt)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("MODIFTXT");

                entity.Property(e => e.Tableid).HasColumnName("TABLEID");

                entity.Property(e => e.Username)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("USERNAME");
            });

            modelBuilder.Entity<Lg001Invdef>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_INVDEF_I1");

                entity.ToTable("LG_001_INVDEF");

                entity.HasIndex(e => new { e.Itemref, e.Variantref, e.Invenno }, "I001_INVDEF_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Itemref, e.Perclosedate }, "I001_INVDEF_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Abccode).HasColumnName("ABCCODE");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Ioctrl).HasColumnName("IOCTRL");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Locationref).HasColumnName("LOCATIONREF");

                entity.Property(e => e.Maxlevel).HasColumnName("MAXLEVEL");

                entity.Property(e => e.Maxlevelctrl).HasColumnName("MAXLEVELCTRL");

                entity.Property(e => e.Minlevel).HasColumnName("MINLEVEL");

                entity.Property(e => e.Minlevelctrl).HasColumnName("MINLEVELCTRL");

                entity.Property(e => e.Neglevelctrl).HasColumnName("NEGLEVELCTRL");

                entity.Property(e => e.Outctrl).HasColumnName("OUTCTRL");

                entity.Property(e => e.Perclosedate)
                    .HasColumnType("datetime")
                    .HasColumnName("PERCLOSEDATE");

                entity.Property(e => e.Safelevel).HasColumnName("SAFELEVEL");

                entity.Property(e => e.Safelevelctrl).HasColumnName("SAFELEVELCTRL");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg001Item>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ITEMS_I1");

                entity.ToTable("LG_001_ITEMS");

                entity.HasIndex(e => new { e.Mtrlbrws, e.Classtype, e.Active, e.Code }, "I001_ITEMS_I10");

                entity.HasIndex(e => e.Unitsetref, "I001_ITEMS_I11");

                entity.HasIndex(e => new { e.Purchbrws, e.Classtype, e.Active, e.Name }, "I001_ITEMS_I12");

                entity.HasIndex(e => new { e.Salesbrws, e.Classtype, e.Active, e.Name }, "I001_ITEMS_I13");

                entity.HasIndex(e => new { e.Mtrlbrws, e.Classtype, e.Active, e.Name }, "I001_ITEMS_I14");

                entity.HasIndex(e => e.Logoid, "I001_ITEMS_I15");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_ITEMS_I16");

                entity.HasIndex(e => new { e.Active, e.Name }, "I001_ITEMS_I17");

                entity.HasIndex(e => e.Dominantrefs5, "I001_ITEMS_I18");

                entity.HasIndex(e => new { e.Cardtype, e.Dominantrefs5 }, "I001_ITEMS_I19");

                entity.HasIndex(e => e.Code, "I001_ITEMS_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Cardtype }, "I001_ITEMS_I20");

                entity.HasIndex(e => new { e.Classtype, e.Dominantrefs5, e.Logicalref }, "I001_ITEMS_I21")
                    .IsUnique();

                entity.HasIndex(e => new { e.Lowlevelcodes1, e.Lowlevelcodes2, e.Lowlevelcodes3, e.Lowlevelcodes4, e.Lowlevelcodes5, e.Lowlevelcodes6, e.Lowlevelcodes7, e.Logicalref }, "I001_ITEMS_I22")
                    .IsUnique();

                entity.HasIndex(e => e.Globalid, "I001_ITEMS_I23");

                entity.HasIndex(e => e.Guid, "I001_ITEMS_I24");

                entity.HasIndex(e => new { e.Code, e.Markref }, "I001_ITEMS_I25");

                entity.HasIndex(e => e.Name, "I001_ITEMS_I3");

                entity.HasIndex(e => e.Producercode, "I001_ITEMS_I4");

                entity.HasIndex(e => e.Stgrpcode, "I001_ITEMS_I5");

                entity.HasIndex(e => new { e.Classtype, e.Active, e.Code }, "I001_ITEMS_I6");

                entity.HasIndex(e => new { e.Classtype, e.Active, e.Name }, "I001_ITEMS_I7");

                entity.HasIndex(e => new { e.Purchbrws, e.Classtype, e.Active, e.Code }, "I001_ITEMS_I8");

                entity.HasIndex(e => new { e.Salesbrws, e.Classtype, e.Active, e.Code }, "I001_ITEMS_I9");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Addtaxref).HasColumnName("ADDTAXREF");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Appspevatmatrah).HasColumnName("APPSPEVATMATRAH");

                entity.Property(e => e.Autoincsl).HasColumnName("AUTOINCSL");

                entity.Property(e => e.Avrwhduration).HasColumnName("AVRWHDURATION");

                entity.Property(e => e.B2ccode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("B2CCODE");

                entity.Property(e => e.Camppoint).HasColumnName("CAMPPOINT");

                entity.Property(e => e.Canconfigure).HasColumnName("CANCONFIGURE");

                entity.Property(e => e.Candeduct).HasColumnName("CANDEDUCT");

                entity.Property(e => e.Canuseintrns).HasColumnName("CANUSEINTRNS");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Categoryid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORYID");

                entity.Property(e => e.Categoryname)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORYNAME");

                entity.Property(e => e.Charsetref).HasColumnName("CHARSETREF");

                entity.Property(e => e.Classtype).HasColumnName("CLASSTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Comblotunits).HasColumnName("COMBLOTUNITS");

                entity.Property(e => e.Compkdvuse).HasColumnName("COMPKDVUSE");

                entity.Property(e => e.Conscoderef).HasColumnName("CONSCODEREF");

                entity.Property(e => e.Cpacode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CPACODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Deductcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DEDUCTCODE");

                entity.Property(e => e.Demandmeetsortfld1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEMANDMEETSORTFLD1");

                entity.Property(e => e.Demandmeetsortfld2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEMANDMEETSORTFLD2");

                entity.Property(e => e.Demandmeetsortfld3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEMANDMEETSORTFLD3");

                entity.Property(e => e.Demandmeetsortfld4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEMANDMEETSORTFLD4");

                entity.Property(e => e.Demandmeetsortfld5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEMANDMEETSORTFLD5");

                entity.Property(e => e.Deprclasstype)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DEPRCLASSTYPE");

                entity.Property(e => e.Deprdur).HasColumnName("DEPRDUR");

                entity.Property(e => e.Deprdur2).HasColumnName("DEPRDUR2");

                entity.Property(e => e.Deprrate).HasColumnName("DEPRRATE");

                entity.Property(e => e.Deprrate2).HasColumnName("DEPRRATE2");

                entity.Property(e => e.Deprtype).HasColumnName("DEPRTYPE");

                entity.Property(e => e.Deprtype2).HasColumnName("DEPRTYPE2");

                entity.Property(e => e.Distamount).HasColumnName("DISTAMOUNT");

                entity.Property(e => e.Distlotunits).HasColumnName("DISTLOTUNITS");

                entity.Property(e => e.Distpoint).HasColumnName("DISTPOINT");

                entity.Property(e => e.Divlotsize).HasColumnName("DIVLOTSIZE");

                entity.Property(e => e.Dominantrefs1).HasColumnName("DOMINANTREFS1");

                entity.Property(e => e.Dominantrefs10).HasColumnName("DOMINANTREFS10");

                entity.Property(e => e.Dominantrefs11).HasColumnName("DOMINANTREFS11");

                entity.Property(e => e.Dominantrefs12).HasColumnName("DOMINANTREFS12");

                entity.Property(e => e.Dominantrefs2).HasColumnName("DOMINANTREFS2");

                entity.Property(e => e.Dominantrefs3).HasColumnName("DOMINANTREFS3");

                entity.Property(e => e.Dominantrefs4).HasColumnName("DOMINANTREFS4");

                entity.Property(e => e.Dominantrefs5).HasColumnName("DOMINANTREFS5");

                entity.Property(e => e.Dominantrefs6).HasColumnName("DOMINANTREFS6");

                entity.Property(e => e.Dominantrefs7).HasColumnName("DOMINANTREFS7");

                entity.Property(e => e.Dominantrefs8).HasColumnName("DOMINANTREFS8");

                entity.Property(e => e.Dominantrefs9).HasColumnName("DOMINANTREFS9");

                entity.Property(e => e.Eanbarcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EANBARCODE");

                entity.Property(e => e.Eximtax1).HasColumnName("EXIMTAX1");

                entity.Property(e => e.Eximtax2).HasColumnName("EXIMTAX2");

                entity.Property(e => e.Eximtax3).HasColumnName("EXIMTAX3");

                entity.Property(e => e.Eximtax4).HasColumnName("EXIMTAX4");

                entity.Property(e => e.Eximtax5).HasColumnName("EXIMTAX5");

                entity.Property(e => e.Expcategory)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EXPCATEGORY");

                entity.Property(e => e.Expctgno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EXPCTGNO");

                entity.Property(e => e.Expense).HasColumnName("EXPENSE");

                entity.Property(e => e.Extaccessflags).HasColumnName("EXTACCESSFLAGS");

                entity.Property(e => e.Extcardflags).HasColumnName("EXTCARDFLAGS");

                entity.Property(e => e.Facostkeys).HasColumnName("FACOSTKEYS");

                entity.Property(e => e.Fausefullifecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("FAUSEFULLIFECODE");

                entity.Property(e => e.Fausefullifecode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("FAUSEFULLIFECODE2");

                entity.Property(e => e.Forecastcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("FORECASTCODE");

                entity.Property(e => e.Freightplace)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTPLACE");

                entity.Property(e => e.Freighttypcode1)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE1");

                entity.Property(e => e.Freighttypcode10)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE10");

                entity.Property(e => e.Freighttypcode2)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE2");

                entity.Property(e => e.Freighttypcode3)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE3");

                entity.Property(e => e.Freighttypcode4)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE4");

                entity.Property(e => e.Freighttypcode5)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE5");

                entity.Property(e => e.Freighttypcode6)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE6");

                entity.Property(e => e.Freighttypcode7)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE7");

                entity.Property(e => e.Freighttypcode8)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE8");

                entity.Property(e => e.Freighttypcode9)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE9");

                entity.Property(e => e.Gaintype).HasColumnName("GAINTYPE");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Groupnr)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("GROUPNR");

                entity.Property(e => e.Gtipcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("GTIPCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Image2inc).HasColumnName("IMAGE2INC");

                entity.Property(e => e.Imageinc).HasColumnName("IMAGEINC");

                entity.Property(e => e.Isonr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ISONR");

                entity.Property(e => e.Keyword1)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("KEYWORD1");

                entity.Property(e => e.Keyword2)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("KEYWORD2");

                entity.Property(e => e.Keyword3)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("KEYWORD3");

                entity.Property(e => e.Keyword4)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("KEYWORD4");

                entity.Property(e => e.Keyword5)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("KEYWORD5");

                entity.Property(e => e.Kklinesdisable).HasColumnName("KKLINESDISABLE");

                entity.Property(e => e.Levelcontrol).HasColumnName("LEVELCONTROL");

                entity.Property(e => e.Lidconfirmed).HasColumnName("LIDCONFIRMED");

                entity.Property(e => e.Loctracking).HasColumnName("LOCTRACKING");

                entity.Property(e => e.Logoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("LOGOID");

                entity.Property(e => e.Lostfactor).HasColumnName("LOSTFACTOR");

                entity.Property(e => e.Lowlevelcodes1).HasColumnName("LOWLEVELCODES1");

                entity.Property(e => e.Lowlevelcodes10).HasColumnName("LOWLEVELCODES10");

                entity.Property(e => e.Lowlevelcodes2).HasColumnName("LOWLEVELCODES2");

                entity.Property(e => e.Lowlevelcodes3).HasColumnName("LOWLEVELCODES3");

                entity.Property(e => e.Lowlevelcodes4).HasColumnName("LOWLEVELCODES4");

                entity.Property(e => e.Lowlevelcodes5).HasColumnName("LOWLEVELCODES5");

                entity.Property(e => e.Lowlevelcodes6).HasColumnName("LOWLEVELCODES6");

                entity.Property(e => e.Lowlevelcodes7).HasColumnName("LOWLEVELCODES7");

                entity.Property(e => e.Lowlevelcodes8).HasColumnName("LOWLEVELCODES8");

                entity.Property(e => e.Lowlevelcodes9).HasColumnName("LOWLEVELCODES9");

                entity.Property(e => e.Markref).HasColumnName("MARKREF");

                entity.Property(e => e.Minordamount).HasColumnName("MINORDAMOUNT");

                entity.Property(e => e.Mold).HasColumnName("MOLD");

                entity.Property(e => e.Moldfactor).HasColumnName("MOLDFACTOR");

                entity.Property(e => e.Moldlifeasratio).HasColumnName("MOLDLIFEASRATIO");

                entity.Property(e => e.Moldlifetracktype).HasColumnName("MOLDLIFETRACKTYPE");

                entity.Property(e => e.Moldmaintbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("MOLDMAINTBEGDATE");

                entity.Property(e => e.Moldmaintlife).HasColumnName("MOLDMAINTLIFE");

                entity.Property(e => e.Moldmaintlifetype).HasColumnName("MOLDMAINTLIFETYPE");

                entity.Property(e => e.Moldmaintnumber).HasColumnName("MOLDMAINTNUMBER");

                entity.Property(e => e.Moldmaintperiod).HasColumnName("MOLDMAINTPERIOD");

                entity.Property(e => e.Moldmaintperunit).HasColumnName("MOLDMAINTPERUNIT");

                entity.Property(e => e.Moldmainttype).HasColumnName("MOLDMAINTTYPE");

                entity.Property(e => e.Moldusagelife).HasColumnName("MOLDUSAGELIFE");

                entity.Property(e => e.Mtrlbrws).HasColumnName("MTRLBRWS");

                entity.Property(e => e.Multiaddtax).HasColumnName("MULTIADDTAX");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Name2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("NAME3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("NAME4");

                entity.Property(e => e.Nodiscount).HasColumnName("NODISCOUNT");

                entity.Property(e => e.Notifycrdref).HasColumnName("NOTIFYCRDREF");

                entity.Property(e => e.Obtaintype).HasColumnName("OBTAINTYPE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Origin)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORIGIN");

                entity.Property(e => e.Packet).HasColumnName("PACKET");

                entity.Property(e => e.Partdep).HasColumnName("PARTDEP");

                entity.Property(e => e.Partdep2).HasColumnName("PARTDEP2");

                entity.Property(e => e.Paymentref).HasColumnName("PAYMENTREF");

                entity.Property(e => e.Pordamnttolerance).HasColumnName("PORDAMNTTOLERANCE");

                entity.Property(e => e.Prodcountry)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PRODCOUNTRY");

                entity.Property(e => e.Producercode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCERCODE");

                entity.Property(e => e.Productlevel).HasColumnName("PRODUCTLEVEL");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Publiccountryref).HasColumnName("PUBLICCOUNTRYREF");

                entity.Property(e => e.Purcdeductpart1).HasColumnName("PURCDEDUCTPART1");

                entity.Property(e => e.Purcdeductpart2).HasColumnName("PURCDEDUCTPART2");

                entity.Property(e => e.Purchbrws).HasColumnName("PURCHBRWS");

                entity.Property(e => e.Qccsetref).HasColumnName("QCCSETREF");

                entity.Property(e => e.Qprodamnt).HasColumnName("QPRODAMNT");

                entity.Property(e => e.Qproddepart).HasColumnName("QPRODDEPART");

                entity.Property(e => e.Qprodsrcindex).HasColumnName("QPRODSRCINDEX");

                entity.Property(e => e.Qprodsubamnt).HasColumnName("QPRODSUBAMNT");

                entity.Property(e => e.Qprodsubdepart).HasColumnName("QPRODSUBDEPART");

                entity.Property(e => e.Qprodsubsrcindex).HasColumnName("QPRODSUBSRCINDEX");

                entity.Property(e => e.Qprodsubuom).HasColumnName("QPRODSUBUOM");

                entity.Property(e => e.Qproduom).HasColumnName("QPRODUOM");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Returnprvat).HasColumnName("RETURNPRVAT");

                entity.Property(e => e.Returnvat).HasColumnName("RETURNVAT");

                entity.Property(e => e.Revalflag).HasColumnName("REVALFLAG");

                entity.Property(e => e.Revalflag2).HasColumnName("REVALFLAG2");

                entity.Property(e => e.Revdeprflag).HasColumnName("REVDEPRFLAG");

                entity.Property(e => e.Revdeprflag2).HasColumnName("REVDEPRFLAG2");

                entity.Property(e => e.Saledeductpart1).HasColumnName("SALEDEDUCTPART1");

                entity.Property(e => e.Saledeductpart2).HasColumnName("SALEDEDUCTPART2");

                entity.Property(e => e.Salesbrws).HasColumnName("SALESBRWS");

                entity.Property(e => e.Saleslimitquantity).HasColumnName("SALESLIMITQUANTITY");

                entity.Property(e => e.Salvageval).HasColumnName("SALVAGEVAL");

                entity.Property(e => e.Salvageval2).HasColumnName("SALVAGEVAL2");

                entity.Property(e => e.Sellprvat).HasColumnName("SELLPRVAT");

                entity.Property(e => e.Sellvat).HasColumnName("SELLVAT");

                entity.Property(e => e.Shelfdate).HasColumnName("SHELFDATE");

                entity.Property(e => e.Shelflife).HasColumnName("SHELFLIFE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sordamnttolerance).HasColumnName("SORDAMNTTOLERANCE");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Specode3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE3");

                entity.Property(e => e.Specode4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE4");

                entity.Property(e => e.Specode5)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE5");

                entity.Property(e => e.Statecode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("STATECODE");

                entity.Property(e => e.Statename)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("STATENAME");

                entity.Property(e => e.Stgrpcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("STGRPCODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Textinceng).HasColumnName("TEXTINCENG");

                entity.Property(e => e.Tool).HasColumnName("TOOL");

                entity.Property(e => e.Tracktype).HasColumnName("TRACKTYPE");

                entity.Property(e => e.Tsenr)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("TSENR");

                entity.Property(e => e.Uetdsloadtype)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UETDSLOADTYPE");

                entity.Property(e => e.Uetdsloadtypedef)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("UETDSLOADTYPEDEF");

                entity.Property(e => e.Uetdsloadunit)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UETDSLOADUNIT");

                entity.Property(e => e.Uetdstransportmode).HasColumnName("UETDSTRANSPORTMODE");

                entity.Property(e => e.Uetdstransporttype).HasColumnName("UETDSTRANSPORTTYPE");

                entity.Property(e => e.Uetdsuncode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("UETDSUNCODE");

                entity.Property(e => e.Uetdsundef)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("UETDSUNDEF");

                entity.Property(e => e.Unitsetref).HasColumnName("UNITSETREF");

                entity.Property(e => e.Univid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("UNIVID");

                entity.Property(e => e.Usedinperiods).HasColumnName("USEDINPERIODS");

                entity.Property(e => e.Vat).HasColumnName("VAT");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Itemcategory>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ITEMCATEGORY_I1");

                entity.ToTable("LG_001_ITEMCATEGORY");

                entity.HasIndex(e => e.Code, "I001_ITEMCATEGORY_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_ITEMCATEGORY_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Imageinc).HasColumnName("IMAGEINC");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Webusage).HasColumnName("WEBUSAGE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Itemcategoryline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ITEMCATEGORYLINE_I1");

                entity.ToTable("LG_001_ITEMCATEGORYLINE");

                entity.HasIndex(e => new { e.Itemcategoryref, e.Lineno }, "I001_ITEMCATEGORYLINE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Itemref, e.Itemcategoryref }, "I001_ITEMCATEGORYLINE_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Itemcategoryref).HasColumnName("ITEMCATEGORYREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");
            });

            modelBuilder.Entity<Lg001Itemobtainlimit>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ITEMOBTAINLIMIT_I1");

                entity.ToTable("LG_001_ITEMOBTAINLIMIT");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Obtainlimit).HasColumnName("OBTAINLIMIT");

                entity.Property(e => e.Obtaintype).HasColumnName("OBTAINTYPE");
            });

            modelBuilder.Entity<Lg001Itemsub>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ITEMSUBS_I1");

                entity.ToTable("LG_001_ITEMSUBS");

                entity.HasIndex(e => new { e.Mainitemref, e.Mainvrntref, e.Subitemref, e.Subvrntref, e.Priority }, "I001_ITEMSUBS_I2");

                entity.HasIndex(e => new { e.Subitemref, e.Subvrntref, e.Mainitemref, e.Mainvrntref }, "I001_ITEMSUBS_I3");

                entity.HasIndex(e => new { e.Mainitemref, e.Mainvrntref, e.Lineno }, "I001_ITEMSUBS_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Convfact1).HasColumnName("CONVFACT1");

                entity.Property(e => e.Convfact2).HasColumnName("CONVFACT2");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Mainitemref).HasColumnName("MAINITEMREF");

                entity.Property(e => e.Mainvrntref).HasColumnName("MAINVRNTREF");

                entity.Property(e => e.Maxquantity).HasColumnName("MAXQUANTITY");

                entity.Property(e => e.Minquantity).HasColumnName("MINQUANTITY");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Subitemref).HasColumnName("SUBITEMREF");

                entity.Property(e => e.Subvrntref).HasColumnName("SUBVRNTREF");
            });

            modelBuilder.Entity<Lg001Itmboma>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ITMBOMAS_I1");

                entity.ToTable("LG_001_ITMBOMAS");

                entity.HasIndex(e => new { e.Itemref, e.Bomref }, "I001_ITMBOMAS_I2");

                entity.HasIndex(e => e.Revref, "I001_ITMBOMAS_I3");

                entity.HasIndex(e => new { e.Bomref, e.Stdcostflag, e.Factorynr, e.Begdate, e.Enddate, e.Itemref }, "I001_ITMBOMAS_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Bomref).HasColumnName("BOMREF");

                entity.Property(e => e.Bomtype).HasColumnName("BOMTYPE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Formrp).HasColumnName("FORMRP");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Maxquantity).HasColumnName("MAXQUANTITY");

                entity.Property(e => e.Minquantity).HasColumnName("MINQUANTITY");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reltype).HasColumnName("RELTYPE");

                entity.Property(e => e.Revref).HasColumnName("REVREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Stdcostflag).HasColumnName("STDCOSTFLAG");
            });

            modelBuilder.Entity<Lg001Itmclsa>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ITMCLSAS_I1");

                entity.ToTable("LG_001_ITMCLSAS");

                entity.HasIndex(e => new { e.Uplevel, e.Parentref, e.Childref }, "I001_ITMCLSAS_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Childref, e.Uplevel, e.Parentref }, "I001_ITMCLSAS_I3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Parentref, e.Childref, e.Uplevel }, "I001_ITMCLSAS_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Parentref, e.Uplevel, e.Childref }, "I001_ITMCLSAS_I5")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Childref).HasColumnName("CHILDREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Parentref).HasColumnName("PARENTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Uplevel).HasColumnName("UPLEVEL");
            });

            modelBuilder.Entity<Lg001Itmfactp>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ITMFACTP_I1");

                entity.ToTable("LG_001_ITMFACTP");

                entity.HasIndex(e => new { e.Itemref, e.Variantref, e.Factorynr }, "I001_ITMFACTP_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Autolotoutmtd).HasColumnName("AUTOLOTOUTMTD");

                entity.Property(e => e.Automtrissue).HasColumnName("AUTOMTRISSUE");

                entity.Property(e => e.Buyerref)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BUYERREF");

                entity.Property(e => e.Checkallinvens).HasColumnName("CHECKALLINVENS");

                entity.Property(e => e.Countformps).HasColumnName("COUNTFORMPS");

                entity.Property(e => e.Cstanalystref)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CSTANALYSTREF");

                entity.Property(e => e.Defserilotno)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("DEFSERILOTNO");

                entity.Property(e => e.Divlotsize).HasColumnName("DIVLOTSIZE");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Fixedlotsize).HasColumnName("FIXEDLOTSIZE");

                entity.Property(e => e.Fixedlotsize2).HasColumnName("FIXEDLOTSIZE2");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lotparty).HasColumnName("LOTPARTY");

                entity.Property(e => e.Lotsizingmtd).HasColumnName("LOTSIZINGMTD");

                entity.Property(e => e.Lotsizingmtd2).HasColumnName("LOTSIZINGMTD2");

                entity.Property(e => e.Lowlevelcode).HasColumnName("LOWLEVELCODE");

                entity.Property(e => e.Maxorderday).HasColumnName("MAXORDERDAY");

                entity.Property(e => e.Maxorderqty).HasColumnName("MAXORDERQTY");

                entity.Property(e => e.Maxorderqty2).HasColumnName("MAXORDERQTY2");

                entity.Property(e => e.Minorderday).HasColumnName("MINORDERDAY");

                entity.Property(e => e.Minorderqty).HasColumnName("MINORDERQTY");

                entity.Property(e => e.Minorderqty2).HasColumnName("MINORDERQTY2");

                entity.Property(e => e.Mrpcntrl).HasColumnName("MRPCNTRL");

                entity.Property(e => e.Multorderqty).HasColumnName("MULTORDERQTY");

                entity.Property(e => e.Multorderqty2).HasColumnName("MULTORDERQTY2");

                entity.Property(e => e.Outlotsize).HasColumnName("OUTLOTSIZE");

                entity.Property(e => e.Plannerref)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("PLANNERREF");

                entity.Property(e => e.Planpolicy).HasColumnName("PLANPOLICY");

                entity.Property(e => e.Procureclass).HasColumnName("PROCURECLASS");

                entity.Property(e => e.Procureinven).HasColumnName("PROCUREINVEN");

                entity.Property(e => e.Productionfact).HasColumnName("PRODUCTIONFACT");

                entity.Property(e => e.Reorderpoint).HasColumnName("REORDERPOINT");

                entity.Property(e => e.Seladminref)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SELADMINREF");

                entity.Property(e => e.Specialized).HasColumnName("SPECIALIZED");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Yield).HasColumnName("YIELD");

                entity.Property(e => e.Yield2).HasColumnName("YIELD2");
            });

            modelBuilder.Entity<Lg001Itmlvltmp>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ITMLVLTMP_I1");

                entity.ToTable("LG_001_ITMLVLTMP");

                entity.HasIndex(e => e.Code, "I001_ITMLVLTMP_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Definition, "I001_ITMLVLTMP_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Factory).HasColumnName("FACTORY");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Warehouse).HasColumnName("WAREHOUSE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Itmlvltmpln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ITMLVLTMPLN_I1");

                entity.ToTable("LG_001_ITMLVLTMPLN");

                entity.HasIndex(e => new { e.Itmlvltmpref, e.Lineno, e.Logicalref }, "I001_ITMLVLTMPLN_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Exception).HasColumnName("EXCEPTION_");

                entity.Property(e => e.Itmlvltmpref).HasColumnName("ITMLVLTMPREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Maxdays).HasColumnName("MAXDAYS");

                entity.Property(e => e.Mindays).HasColumnName("MINDAYS");

                entity.Property(e => e.Name)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Ordercoef).HasColumnName("ORDERCOEF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Period).HasColumnName("PERIOD");

                entity.Property(e => e.Procuredays).HasColumnName("PROCUREDAYS");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Vcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("VCODE");

                entity.Property(e => e.Vname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VNAME");

                entity.Property(e => e.Warehouse).HasColumnName("WAREHOUSE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Itmunitum>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ITMUNITA_I1");

                entity.ToTable("LG_001_ITMUNITA");

                entity.HasIndex(e => new { e.Itemref, e.Variantref, e.Linenr }, "I001_ITMUNITA_I2");

                entity.HasIndex(e => e.Barcode, "I001_ITMUNITA_I3");

                entity.HasIndex(e => new { e.Itemref, e.Variantref, e.Unitlineref }, "I001_ITMUNITA_I4")
                    .IsUnique();

                entity.HasIndex(e => e.Unitlineref, "I001_ITMUNITA_I5");

                entity.HasIndex(e => e.Globalid, "I001_ITMUNITA_I6");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Area).HasColumnName("AREA");

                entity.Property(e => e.Arearef).HasColumnName("AREAREF");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.Barcode2)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE2");

                entity.Property(e => e.Barcode3)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE3");

                entity.Property(e => e.Convfact1).HasColumnName("CONVFACT1");

                entity.Property(e => e.Convfact2).HasColumnName("CONVFACT2");

                entity.Property(e => e.Extaccessflags).HasColumnName("EXTACCESSFLAGS");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Grossvolref).HasColumnName("GROSSVOLREF");

                entity.Property(e => e.Grossvolume).HasColumnName("GROSSVOLUME");

                entity.Property(e => e.Grossweight).HasColumnName("GROSSWEIGHT");

                entity.Property(e => e.Grosswghtref).HasColumnName("GROSSWGHTREF");

                entity.Property(e => e.Height).HasColumnName("HEIGHT");

                entity.Property(e => e.Heightref).HasColumnName("HEIGHTREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Length).HasColumnName("LENGTH");

                entity.Property(e => e.Lengthref).HasColumnName("LENGTHREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Mtrlclas).HasColumnName("MTRLCLAS");

                entity.Property(e => e.Mtrlpriority).HasColumnName("MTRLPRIORITY");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Purchclas).HasColumnName("PURCHCLAS");

                entity.Property(e => e.Purchpriorty).HasColumnName("PURCHPRIORTY");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Salesclas).HasColumnName("SALESCLAS");

                entity.Property(e => e.Salespriority).HasColumnName("SALESPRIORITY");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Unitlineref).HasColumnName("UNITLINEREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Volume).HasColumnName("VOLUME_");

                entity.Property(e => e.Volumeref).HasColumnName("VOLUMEREF");

                entity.Property(e => e.Wbarcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("WBARCODE");

                entity.Property(e => e.Wbarcodeshift).HasColumnName("WBARCODESHIFT");

                entity.Property(e => e.Weight).HasColumnName("WEIGHT");

                entity.Property(e => e.Weightref).HasColumnName("WEIGHTREF");

                entity.Property(e => e.Width).HasColumnName("WIDTH");

                entity.Property(e => e.Widthref).HasColumnName("WIDTHREF");
            });

            modelBuilder.Entity<Lg001Itmwsdef>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ITMWSDEF_I1");

                entity.ToTable("LG_001_ITMWSDEF");

                entity.HasIndex(e => new { e.Itemref, e.Wsref }, "I001_ITMWSDEF_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Maxlevel).HasColumnName("MAXLEVEL");

                entity.Property(e => e.Maxlevelctrl).HasColumnName("MAXLEVELCTRL");

                entity.Property(e => e.Minlevel).HasColumnName("MINLEVEL");

                entity.Property(e => e.Minlevelctrl).HasColumnName("MINLEVELCTRL");

                entity.Property(e => e.Safelevel).HasColumnName("SAFELEVEL");

                entity.Property(e => e.Safelevelctrl).HasColumnName("SAFELEVELCTRL");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg001Kscard>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_KSCARD_I1");

                entity.ToTable("LG_001_KSCARD");

                entity.HasIndex(e => e.Code, "I001_KSCARD_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_KSCARD_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_KSCARD_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Name }, "I001_KSCARD_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Ccurrency).HasColumnName("CCURRENCY");

                entity.Property(e => e.Code)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Curratetype).HasColumnName("CURRATETYPE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Explain)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EXPLAIN");

                entity.Property(e => e.Fixedcurrtype).HasColumnName("FIXEDCURRTYPE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Notifycrdref).HasColumnName("NOTIFYCRDREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Usedinperiods).HasColumnName("USEDINPERIODS");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Laborreq>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_LABORREQ_I1");

                entity.ToTable("LG_001_LABORREQ");

                entity.HasIndex(e => new { e.Opreqref, e.Lineno, e.Group, e.Empref }, "I001_LABORREQ_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Opreqref, e.Lineno }, "I001_LABORREQ_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Empref).HasColumnName("EMPREF");

                entity.Property(e => e.Group).HasColumnName("GROUP_");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Opreqref).HasColumnName("OPREQREF");
            });

            modelBuilder.Entity<Lg001Leasingpayment>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_LEASINGPAYMENTS_I1");

                entity.ToTable("LG_001_LEASINGPAYMENTS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cashamount).HasColumnName("CASHAMOUNT");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Interesttype).HasColumnName("INTERESTTYPE");

                entity.Property(e => e.Intrate).HasColumnName("INTRATE");

                entity.Property(e => e.Leasingref).HasColumnName("LEASINGREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Paymentcount).HasColumnName("PAYMENTCOUNT");

                entity.Property(e => e.Paymentenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("PAYMENTENDDATE");

                entity.Property(e => e.Paymentperiod).HasColumnName("PAYMENTPERIOD");

                entity.Property(e => e.Paymentstartdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PAYMENTSTARTDATE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Vatrate).HasColumnName("VATRATE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Leasingpaymentsln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_LEASINGPAYMENTSLNS_I1");

                entity.ToTable("LG_001_LEASINGPAYMENTSLNS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Actaccref).HasColumnName("ACTACCREF");

                entity.Property(e => e.Bnaccref).HasColumnName("BNACCREF");

                entity.Property(e => e.Bnfchref).HasColumnName("BNFCHREF");

                entity.Property(e => e.Bostatus).HasColumnName("BOSTATUS");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Depreciation).HasColumnName("DEPRECIATION");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Intrate).HasColumnName("INTRATE");

                entity.Property(e => e.Inttotal).HasColumnName("INTTOTAL");

                entity.Property(e => e.Leasingref).HasColumnName("LEASINGREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Mainremained).HasColumnName("MAINREMAINED");

                entity.Property(e => e.Maintotal).HasColumnName("MAINTOTAL");

                entity.Property(e => e.Npvtodayval).HasColumnName("NPVTODAYVAL");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Parentref).HasColumnName("PARENTREF");

                entity.Property(e => e.Paymentdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PAYMENTDATE");

                entity.Property(e => e.Paymenttotal).HasColumnName("PAYMENTTOTAL");

                entity.Property(e => e.Paymenttype).HasColumnName("PAYMENTTYPE");

                entity.Property(e => e.Profitloss).HasColumnName("PROFITLOSS");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Rentobl).HasColumnName("RENTOBL");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Tenancy).HasColumnName("TENANCY");

                entity.Property(e => e.Transtype).HasColumnName("TRANSTYPE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Vatinpaymenttotal).HasColumnName("VATINPAYMENTTOTAL");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Leasingreg>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_LEASINGREG_I1");

                entity.ToTable("LG_001_LEASINGREG");

                entity.HasIndex(e => e.Regnr, "I001_LEASINGREG_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accficheref).HasColumnName("ACCFICHEREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Depaccref).HasColumnName("DEPACCREF");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Depcntrref).HasColumnName("DEPCNTRREF");

                entity.Property(e => e.Description)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Intaccref).HasColumnName("INTACCREF");

                entity.Property(e => e.Intcntrref).HasColumnName("INTCNTRREF");

                entity.Property(e => e.Ldebtaccref).HasColumnName("LDEBTACCREF");

                entity.Property(e => e.Ldebtcntrref).HasColumnName("LDEBTCNTRREF");

                entity.Property(e => e.Ldebtcostaccref).HasColumnName("LDEBTCOSTACCREF");

                entity.Property(e => e.Ldebtcostcntrref).HasColumnName("LDEBTCOSTCNTRREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Regnr)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("REGNR");

                entity.Property(e => e.Renttype).HasColumnName("RENTTYPE");

                entity.Property(e => e.Rightsaccref).HasColumnName("RIGHTSACCREF");

                entity.Property(e => e.Rightscntrref).HasColumnName("RIGHTSCNTRREF");

                entity.Property(e => e.Sdebtaccref).HasColumnName("SDEBTACCREF");

                entity.Property(e => e.Sdebtcntrref).HasColumnName("SDEBTCNTRREF");

                entity.Property(e => e.Sdebtcostaccref).HasColumnName("SDEBTCOSTACCREF");

                entity.Property(e => e.Sdebtcostcntrref).HasColumnName("SDEBTCOSTCNTRREF");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");
            });

            modelBuilder.Entity<Lg001Leasingregln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_LEASINGREGLN_I1");

                entity.ToTable("LG_001_LEASINGREGLN");

                entity.HasIndex(e => e.Leasingregref, "I001_LEASINGREGLN_I2");

                entity.HasIndex(e => e.Fixassetref, "I001_LEASINGREGLN_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Description)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Fixassetref).HasColumnName("FIXASSETREF");

                entity.Property(e => e.Leasingregref).HasColumnName("LEASINGREGREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");
            });

            modelBuilder.Entity<Lg001Lngexcset>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_LNGEXCSETS_I1");

                entity.ToTable("LG_001_LNGEXCSETS");

                entity.HasIndex(e => new { e.Docid, e.Docref, e.Fieldid, e.Langid }, "I001_LNGEXCSETS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Docid).HasColumnName("DOCID");

                entity.Property(e => e.Docref).HasColumnName("DOCREF");

                entity.Property(e => e.Fieldcont)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("FIELDCONT");

                entity.Property(e => e.Fieldid).HasColumnName("FIELDID");

                entity.Property(e => e.Langid).HasColumnName("LANGID");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<Lg001Lnopasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_LNOPASGN_I1");

                entity.ToTable("LG_001_LNOPASGN");

                entity.HasIndex(e => new { e.Bomrevref, e.Bomlineref }, "I001_LNOPASGN_I2");

                entity.HasIndex(e => new { e.Routlineref, e.Bomlineref }, "I001_LNOPASGN_I3")
                    .IsUnique();

                entity.HasIndex(e => e.Bomrevref, "I001_LNOPASGN_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Bomlineref).HasColumnName("BOMLINEREF");

                entity.Property(e => e.Bomrevref).HasColumnName("BOMREVREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Routingref).HasColumnName("ROUTINGREF");

                entity.Property(e => e.Routlineref).HasColumnName("ROUTLINEREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Location>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_LOCATION_I1");

                entity.ToTable("LG_001_LOCATION");

                entity.HasIndex(e => new { e.Invennr, e.Code }, "I001_LOCATION_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Invennr, e.Name }, "I001_LOCATION_I3");

                entity.HasIndex(e => new { e.Invennr, e.Code, e.Name }, "I001_LOCATION_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Contenttype).HasColumnName("CONTENTTYPE");

                entity.Property(e => e.Height).HasColumnName("HEIGHT");

                entity.Property(e => e.Heightref).HasColumnName("HEIGHTREF");

                entity.Property(e => e.Invennr).HasColumnName("INVENNR");

                entity.Property(e => e.Iseuropalette).HasColumnName("ISEUROPALETTE");

                entity.Property(e => e.Length).HasColumnName("LENGTH");

                entity.Property(e => e.Lengthref).HasColumnName("LENGTHREF");

                entity.Property(e => e.Maxlevel).HasColumnName("MAXLEVEL");

                entity.Property(e => e.Minlevel).HasColumnName("MINLEVEL");

                entity.Property(e => e.Name)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Shelftype).HasColumnName("SHELFTYPE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Usetref).HasColumnName("USETREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Width).HasColumnName("WIDTH");

                entity.Property(e => e.Widthref).HasColumnName("WIDTHREF");
            });

            modelBuilder.Entity<Lg001Locationsfor>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_LOCATIONSFOR_I1");

                entity.ToTable("LG_001_LOCATIONSFOR");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Nr).HasColumnName("NR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Parentref).HasColumnName("PARENTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<Lg001Logrep>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_LOGREP_I1");

                entity.ToTable("LG_001_LOGREP");

                entity.HasIndex(e => new { e.Logtype, e.Sessioncode, e.Linenr }, "I001_LOGREP_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Lineexplain2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXPLAIN2");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Logtype).HasColumnName("LOGTYPE");

                entity.Property(e => e.Msgnum1).HasColumnName("MSGNUM1");

                entity.Property(e => e.Msgnum2).HasColumnName("MSGNUM2");

                entity.Property(e => e.Sessioncode)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("SESSIONCODE");
            });

            modelBuilder.Entity<Lg001Maintanenceline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MAINTANENCELINE_I1");

                entity.ToTable("LG_001_MAINTANENCELINE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Exp)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("EXP");

                entity.Property(e => e.Faref).HasColumnName("FAREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Mntloctype).HasColumnName("MNTLOCTYPE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Total).HasColumnName("TOTAL");
            });

            modelBuilder.Entity<Lg001Mark>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MARK_I1");

                entity.ToTable("LG_001_MARK");

                entity.HasIndex(e => e.Code, "I001_MARK_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Descr, "I001_MARK_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Descr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DESCR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");
            });

            modelBuilder.Entity<Lg001Market>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MARKET_I1");

                entity.ToTable("LG_001_MARKET");

                entity.HasIndex(e => e.Itemref, "I001_MARKET_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Kdvdepnr).HasColumnName("KDVDEPNR");

                entity.Property(e => e.Orglogicalref).HasColumnName("ORGLOGICALREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reyoncode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("REYONCODE");

                entity.Property(e => e.Scalenr).HasColumnName("SCALENR");

                entity.Property(e => e.Scales).HasColumnName("SCALES");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Subsgoodcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SUBSGOODCODE");
            });

            modelBuilder.Entity<Lg001Mblinfogroup>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MBLINFOGROUP_I1");

                entity.ToTable("LG_001_MBLINFOGROUP");

                entity.HasIndex(e => new { e.Code, e.Mbltype }, "I001_MBLINFOGROUP_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Groupid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GROUPID");

                entity.Property(e => e.Mbltype).HasColumnName("MBLTYPE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");
            });

            modelBuilder.Entity<Lg001Mblinfouser>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MBLINFOUSER_I1");

                entity.ToTable("LG_001_MBLINFOUSER");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Mbltype).HasColumnName("MBLTYPE");

                entity.Property(e => e.Name)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Phonenumber)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PHONENUMBER");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Surname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SURNAME");

                entity.Property(e => e.Tckno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TCKNO");

                entity.Property(e => e.Usertype).HasColumnName("USERTYPE");
            });

            modelBuilder.Entity<Lg001Mblinfusrgrpln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MBLINFUSRGRPLN_I1");

                entity.ToTable("LG_001_MBLINFUSRGRPLN");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Mblinfgroupref).HasColumnName("MBLINFGROUPREF");

                entity.Property(e => e.Mblinfuserref).HasColumnName("MBLINFUSERREF");

                entity.Property(e => e.Mbltype).HasColumnName("MBLTYPE");
            });

            modelBuilder.Entity<Lg001Mbscrmrelf>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MBSCRMRELF_I1");

                entity.ToTable("LG_001_MBSCRMRELF");

                entity.HasIndex(e => new { e.Logoref, e.Rectype }, "I001_MBSCRMRELF_I2");

                entity.HasIndex(e => new { e.Crmguid, e.Rectype }, "I001_MBSCRMRELF_I3");

                entity.HasIndex(e => e.Rectype, "I001_MBSCRMRELF_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Crmcreateddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CRMCREATEDDATE");

                entity.Property(e => e.Crmcreatedhour).HasColumnName("CRMCREATEDHOUR");

                entity.Property(e => e.Crmcreatedmin).HasColumnName("CRMCREATEDMIN");

                entity.Property(e => e.Crmcreatedsec).HasColumnName("CRMCREATEDSEC");

                entity.Property(e => e.Crmguid)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("CRMGUID");

                entity.Property(e => e.Crmmodifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CRMMODIFIEDDATE");

                entity.Property(e => e.Crmmodifiedhour).HasColumnName("CRMMODIFIEDHOUR");

                entity.Property(e => e.Crmmodifiedmin).HasColumnName("CRMMODIFIEDMIN");

                entity.Property(e => e.Crmmodifiedsec).HasColumnName("CRMMODIFIEDSEC");

                entity.Property(e => e.Logocreateddate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOGOCREATEDDATE");

                entity.Property(e => e.Logocreatedhour).HasColumnName("LOGOCREATEDHOUR");

                entity.Property(e => e.Logocreatedmin).HasColumnName("LOGOCREATEDMIN");

                entity.Property(e => e.Logocreatedsec).HasColumnName("LOGOCREATEDSEC");

                entity.Property(e => e.Logomodifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("LOGOMODIFIEDDATE");

                entity.Property(e => e.Logomodifiedhour).HasColumnName("LOGOMODIFIEDHOUR");

                entity.Property(e => e.Logomodifiedmin).HasColumnName("LOGOMODIFIEDMIN");

                entity.Property(e => e.Logomodifiedsec).HasColumnName("LOGOMODIFIEDSEC");

                entity.Property(e => e.Logoref).HasColumnName("LOGOREF");

                entity.Property(e => e.Rectype).HasColumnName("RECTYPE");
            });

            modelBuilder.Entity<Lg001Mntdemandfiche>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MNTDEMANDFICHE_I1");

                entity.ToTable("LG_001_MNTDEMANDFICHE");

                entity.HasIndex(e => e.Ficheno, "I001_MNTDEMANDFICHE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Time }, "I001_MNTDEMANDFICHE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Fromwhere).HasColumnName("FROMWHERE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Perref).HasColumnName("PERREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Userno).HasColumnName("USERNO");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Mntdemandline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MNTDEMANDLINE_I1");

                entity.ToTable("LG_001_MNTDEMANDLINE");

                entity.HasIndex(e => new { e.Demandficheref, e.Lineno }, "I001_MNTDEMANDLINE_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Demandficheref).HasColumnName("DEMANDFICHEREF");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Faregref).HasColumnName("FAREGREF");

                entity.Property(e => e.Fichedate)
                    .HasColumnType("datetime")
                    .HasColumnName("FICHEDATE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Mainttype).HasColumnName("MAINTTYPE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Perref).HasColumnName("PERREF");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg001Mntlifehist>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MNTLIFEHIST_I1");

                entity.ToTable("LG_001_MNTLIFEHIST");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Faregref).HasColumnName("FAREGREF");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lifetracktype).HasColumnName("LIFETRACKTYPE");

                entity.Property(e => e.Lifetype).HasColumnName("LIFETYPE");

                entity.Property(e => e.Lifevalue).HasColumnName("LIFEVALUE");

                entity.Property(e => e.Newusagelife).HasColumnName("NEWUSAGELIFE");

                entity.Property(e => e.Oldusagelife).HasColumnName("OLDUSAGELIFE");

                entity.Property(e => e.Orderficheref).HasColumnName("ORDERFICHEREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg001Mntorderfiche>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MNTORDERFICHE_I1");

                entity.ToTable("LG_001_MNTORDERFICHE");

                entity.HasIndex(e => e.Ficheno, "I001_MNTORDERFICHE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Time }, "I001_MNTORDERFICHE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Actbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTBEGDATE");

                entity.Property(e => e.Actbegtime).HasColumnName("ACTBEGTIME");

                entity.Property(e => e.Actempcost).HasColumnName("ACTEMPCOST");

                entity.Property(e => e.Actemprpcost).HasColumnName("ACTEMPRPCOST");

                entity.Property(e => e.Actenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTENDDATE");

                entity.Property(e => e.Actendtime).HasColumnName("ACTENDTIME");

                entity.Property(e => e.Actmtrlcost).HasColumnName("ACTMTRLCOST");

                entity.Property(e => e.Actmtrlrpcost).HasColumnName("ACTMTRLRPCOST");

                entity.Property(e => e.Actsrvcost).HasColumnName("ACTSRVCOST");

                entity.Property(e => e.Actsrvrpcost).HasColumnName("ACTSRVRPCOST");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Demandlref).HasColumnName("DEMANDLREF");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Genexp1)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP1");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Isexpense).HasColumnName("ISEXPENSE");

                entity.Property(e => e.Maintduration).HasColumnName("MAINTDURATION");

                entity.Property(e => e.Maintdurationtype).HasColumnName("MAINTDURATIONTYPE");

                entity.Property(e => e.Maintfaregref).HasColumnName("MAINTFAREGREF");

                entity.Property(e => e.Maintitemref).HasColumnName("MAINTITEMREF");

                entity.Property(e => e.Maintitemtype).HasColumnName("MAINTITEMTYPE");

                entity.Property(e => e.Mainttmplref).HasColumnName("MAINTTMPLREF");

                entity.Property(e => e.Mainttype).HasColumnName("MAINTTYPE");

                entity.Property(e => e.Maintwsref).HasColumnName("MAINTWSREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Perref).HasColumnName("PERREF");

                entity.Property(e => e.Plnbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PLNBEGDATE");

                entity.Property(e => e.Plnbegtime).HasColumnName("PLNBEGTIME");

                entity.Property(e => e.Plnenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("PLNENDDATE");

                entity.Property(e => e.Plnendtime).HasColumnName("PLNENDTIME");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Mntorderline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MNTORDERLINE_I1");

                entity.ToTable("LG_001_MNTORDERLINE");

                entity.HasIndex(e => new { e.Orderficheref, e.Lineno }, "I001_MNTORDERLINE_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Fichedate)
                    .HasColumnType("datetime")
                    .HasColumnName("FICHEDATE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orderficheref).HasColumnName("ORDERFICHEREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Overlapper).HasColumnName("OVERLAPPER");

                entity.Property(e => e.Perref).HasColumnName("PERREF");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Specode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Tmplcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TMPLCODE");

                entity.Property(e => e.Tmpldef)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TMPLDEF");

                entity.Property(e => e.Tmplduration).HasColumnName("TMPLDURATION");

                entity.Property(e => e.Tmpldurationtype).HasColumnName("TMPLDURATIONTYPE");

                entity.Property(e => e.Tmplgroupnr).HasColumnName("TMPLGROUPNR");

                entity.Property(e => e.Tmplname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TMPLNAME");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Usageslip).HasColumnName("USAGESLIP");

                entity.Property(e => e.Usref).HasColumnName("USREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Mnttemplate>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MNTTEMPLATE_I1");

                entity.ToTable("LG_001_MNTTEMPLATE");

                entity.HasIndex(e => e.Code, "I001_MNTTEMPLATE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_MNTTEMPLATE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");
            });

            modelBuilder.Entity<Lg001Mnttemplateasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MNTTEMPLATEASGN_I1");

                entity.ToTable("LG_001_MNTTEMPLATEASGN");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Faregref).HasColumnName("FAREGREF");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Mntincidental).HasColumnName("MNTINCIDENTAL");

                entity.Property(e => e.Mntperiodical).HasColumnName("MNTPERIODICAL");

                entity.Property(e => e.Mntpreventive).HasColumnName("MNTPREVENTIVE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Templateref).HasColumnName("TEMPLATEREF");
            });

            modelBuilder.Entity<Lg001Mnttemplateline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MNTTEMPLATELINE_I1");

                entity.ToTable("LG_001_MNTTEMPLATELINE");

                entity.HasIndex(e => new { e.Templateref, e.Lineno }, "I001_MNTTEMPLATELINE_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Templateref).HasColumnName("TEMPLATEREF");

                entity.Property(e => e.Tmplcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TMPLCODE");

                entity.Property(e => e.Tmpldef)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("TMPLDEF");

                entity.Property(e => e.Tmplduration).HasColumnName("TMPLDURATION");

                entity.Property(e => e.Tmpldurationtype).HasColumnName("TMPLDURATIONTYPE");

                entity.Property(e => e.Tmplgroupnr).HasColumnName("TMPLGROUPNR");

                entity.Property(e => e.Tmplname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TMPLNAME");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Usref).HasColumnName("USREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg001Mobileasset>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MOBILEASSET_I1");

                entity.ToTable("LG_001_MOBILEASSET");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Sourcetype).HasColumnName("SOURCETYPE");

                entity.Property(e => e.Specode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Telnumber)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TELNUMBER");
            });

            modelBuilder.Entity<Lg001Moldreq>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MOLDREQ_I1");

                entity.ToTable("LG_001_MOLDREQ");

                entity.HasIndex(e => new { e.Wsref, e.Moldref }, "I001_MOLDREQ_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Moldref).HasColumnName("MOLDREF");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg001Mrphead>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MRPHEAD_I1");

                entity.ToTable("LG_001_MRPHEAD");

                entity.HasIndex(e => new { e.Runtype, e.Code }, "I001_MRPHEAD_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Runtype, e.Definition }, "I001_MRPHEAD_I3");

                entity.HasIndex(e => new { e.Runtype, e.Factno, e.Rundate }, "I001_MRPHEAD_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Begtime).HasColumnName("BEGTIME");

                entity.Property(e => e.Changefroz).HasColumnName("CHANGEFROZ");

                entity.Property(e => e.Chkresocc).HasColumnName("CHKRESOCC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Daycnt).HasColumnName("DAYCNT");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Demfichepar).HasColumnName("DEMFICHEPAR");

                entity.Property(e => e.Depmps).HasColumnName("DEPMPS");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Factno).HasColumnName("FACTNO");

                entity.Property(e => e.Forecastfordem).HasColumnName("FORECASTFORDEM");

                entity.Property(e => e.Frozcnt).HasColumnName("FROZCNT");

                entity.Property(e => e.Meetplninpar).HasColumnName("MEETPLNINPAR");

                entity.Property(e => e.Modypar).HasColumnName("MODYPAR");

                entity.Property(e => e.Monthcnt).HasColumnName("MONTHCNT");

                entity.Property(e => e.Mpsfordem).HasColumnName("MPSFORDEM");

                entity.Property(e => e.Mpsforsord).HasColumnName("MPSFORSORD");

                entity.Property(e => e.Plninpar).HasColumnName("PLNINPAR");

                entity.Property(e => e.Plnoutpar).HasColumnName("PLNOUTPAR");

                entity.Property(e => e.Purordpar).HasColumnName("PURORDPAR");

                entity.Property(e => e.Rundate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUNDATE");

                entity.Property(e => e.Runtype).HasColumnName("RUNTYPE");

                entity.Property(e => e.Safetystocklevel).HasColumnName("SAFETYSTOCKLEVEL");

                entity.Property(e => e.Salordpar).HasColumnName("SALORDPAR");

                entity.Property(e => e.Salrezpar).HasColumnName("SALREZPAR");

                entity.Property(e => e.Tmpinpar).HasColumnName("TMPINPAR");

                entity.Property(e => e.Userno).HasColumnName("USERNO");

                entity.Property(e => e.Weekcnt).HasColumnName("WEEKCNT");

                entity.Property(e => e.Whlist1)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST1");

                entity.Property(e => e.Whlist10)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST10");

                entity.Property(e => e.Whlist11)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST11");

                entity.Property(e => e.Whlist12)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST12");

                entity.Property(e => e.Whlist13)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST13");

                entity.Property(e => e.Whlist14)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST14");

                entity.Property(e => e.Whlist15)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST15");

                entity.Property(e => e.Whlist16)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST16");

                entity.Property(e => e.Whlist17)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST17");

                entity.Property(e => e.Whlist18)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST18");

                entity.Property(e => e.Whlist19)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST19");

                entity.Property(e => e.Whlist2)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST2");

                entity.Property(e => e.Whlist20)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST20");

                entity.Property(e => e.Whlist21)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST21");

                entity.Property(e => e.Whlist22)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST22");

                entity.Property(e => e.Whlist23)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST23");

                entity.Property(e => e.Whlist24)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST24");

                entity.Property(e => e.Whlist25)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST25");

                entity.Property(e => e.Whlist26)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST26");

                entity.Property(e => e.Whlist27)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST27");

                entity.Property(e => e.Whlist28)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST28");

                entity.Property(e => e.Whlist29)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST29");

                entity.Property(e => e.Whlist3)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST3");

                entity.Property(e => e.Whlist30)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST30");

                entity.Property(e => e.Whlist31)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST31");

                entity.Property(e => e.Whlist32)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST32");

                entity.Property(e => e.Whlist33)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST33");

                entity.Property(e => e.Whlist34)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST34");

                entity.Property(e => e.Whlist35)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST35");

                entity.Property(e => e.Whlist36)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST36");

                entity.Property(e => e.Whlist37)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST37");

                entity.Property(e => e.Whlist38)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST38");

                entity.Property(e => e.Whlist39)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST39");

                entity.Property(e => e.Whlist4)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST4");

                entity.Property(e => e.Whlist40)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST40");

                entity.Property(e => e.Whlist5)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST5");

                entity.Property(e => e.Whlist6)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST6");

                entity.Property(e => e.Whlist7)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST7");

                entity.Property(e => e.Whlist8)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST8");

                entity.Property(e => e.Whlist9)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST9");

                entity.Property(e => e.Wkdypar).HasColumnName("WKDYPAR");
            });

            modelBuilder.Entity<Lg001Mrpitem>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MRPITEM_I1");

                entity.ToTable("LG_001_MRPITEM");

                entity.HasIndex(e => new { e.Headerref, e.Itemref, e.Variantref }, "I001_MRPITEM_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Changed).HasColumnName("CHANGED");

                entity.Property(e => e.Headerref).HasColumnName("HEADERREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg001Mrpitemchg>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MRPITEMCHG_I1");

                entity.ToTable("LG_001_MRPITEMCHG");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Paritemref).HasColumnName("PARITEMREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg001Mrpline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MRPLINE_I1");

                entity.ToTable("LG_001_MRPLINE");

                entity.HasIndex(e => new { e.Linetype, e.Headerref, e.Itemref, e.Variantref, e.Duedate, e.Parentlineref, e.Ordlineref }, "I001_MRPLINE_I2");

                entity.HasIndex(e => e.Bomrevref, "I001_MRPLINE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bomrevref).HasColumnName("BOMREVREF");

                entity.Property(e => e.Bomtype).HasColumnName("BOMTYPE");

                entity.Property(e => e.Custorders).HasColumnName("CUSTORDERS");

                entity.Property(e => e.Demandtotal).HasColumnName("DEMANDTOTAL");

                entity.Property(e => e.Duedate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUEDATE");

                entity.Property(e => e.Factno).HasColumnName("FACTNO");

                entity.Property(e => e.Frozen).HasColumnName("FROZEN");

                entity.Property(e => e.Headerref).HasColumnName("HEADERREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Operationref).HasColumnName("OPERATIONREF");

                entity.Property(e => e.Ordlineref).HasColumnName("ORDLINEREF");

                entity.Property(e => e.Parentlineref).HasColumnName("PARENTLINEREF");

                entity.Property(e => e.Paritemref).HasColumnName("PARITEMREF");

                entity.Property(e => e.Plninvenchg).HasColumnName("PLNINVENCHG");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Prodamount).HasColumnName("PRODAMOUNT");

                entity.Property(e => e.Reqamount).HasColumnName("REQAMOUNT");

                entity.Property(e => e.Rundate)
                    .HasColumnType("datetime")
                    .HasColumnName("RUNDATE");

                entity.Property(e => e.Supplierref).HasColumnName("SUPPLIERREF");

                entity.Property(e => e.Unitref).HasColumnName("UNITREF");

                entity.Property(e => e.Unsizedamount).HasColumnName("UNSIZEDAMOUNT");

                entity.Property(e => e.Userdemand).HasColumnName("USERDEMAND");

                entity.Property(e => e.Userinven).HasColumnName("USERINVEN");

                entity.Property(e => e.Userno).HasColumnName("USERNO");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg001Mrppegging>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MRPPEGGING_I1");

                entity.ToTable("LG_001_MRPPEGGING");

                entity.HasIndex(e => new { e.Parenttype, e.Headerref, e.Parentref }, "I001_MRPPEGGING_I2");

                entity.HasIndex(e => new { e.Childtype, e.Childref }, "I001_MRPPEGGING_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Childref).HasColumnName("CHILDREF");

                entity.Property(e => e.Childtype).HasColumnName("CHILDTYPE");

                entity.Property(e => e.Headerref).HasColumnName("HEADERREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Ordperiod).HasColumnName("ORDPERIOD");

                entity.Property(e => e.Parentref).HasColumnName("PARENTREF");

                entity.Property(e => e.Parenttype).HasColumnName("PARENTTYPE");

                entity.Property(e => e.Unitref).HasColumnName("UNITREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg001Mrpproposal>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MRPPROPOSAL_I1");

                entity.ToTable("LG_001_MRPPROPOSAL");

                entity.HasIndex(e => new { e.Itemref, e.Variantref, e.Proposaldate }, "I001_MRPPROPOSAL_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Bomref).HasColumnName("BOMREF");

                entity.Property(e => e.Clref).HasColumnName("CLREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Movedtodemand).HasColumnName("MOVEDTODEMAND");

                entity.Property(e => e.Parentpropref).HasColumnName("PARENTPROPREF");

                entity.Property(e => e.Peggedamount).HasColumnName("PEGGEDAMOUNT");

                entity.Property(e => e.Proposaldate)
                    .HasColumnType("datetime")
                    .HasColumnName("PROPOSALDATE");

                entity.Property(e => e.Proposaltype).HasColumnName("PROPOSALTYPE");

                entity.Property(e => e.Revref).HasColumnName("REVREF");

                entity.Property(e => e.Sourceref).HasColumnName("SOURCEREF");

                entity.Property(e => e.Sourcetype).HasColumnName("SOURCETYPE");

                entity.Property(e => e.Unitref).HasColumnName("UNITREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg001Msgtemplate>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MSGTEMPLATE_I1");

                entity.ToTable("LG_001_MSGTEMPLATE");

                entity.HasIndex(e => new { e.Msgtype, e.Code }, "I001_MSGTEMPLATE_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Msgtext)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("MSGTEXT");

                entity.Property(e => e.Msgtype).HasColumnName("MSGTYPE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");
            });

            modelBuilder.Entity<Lg001Multiaddtax>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_MULTIADDTAX_I1");

                entity.ToTable("LG_001_MULTIADDTAX");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addtaxref).HasColumnName("ADDTAXREF");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");
            });

            modelBuilder.Entity<Lg001Nmmsgtemplate>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_NMMSGTEMPLATE_I1");

                entity.ToTable("LG_001_NMMSGTEMPLATE");

                entity.HasIndex(e => e.Code, "I001_NMMSGTEMPLATE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Definition, "I001_NMMSGTEMPLATE_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_NMMSGTEMPLATE_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Definition }, "I001_NMMSGTEMPLATE_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Module).HasColumnName("MODULE_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Proctype).HasColumnName("PROCTYPE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Subject)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("SUBJECT");
            });

            modelBuilder.Entity<Lg001Occupation>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_OCCUPATION_I1");

                entity.ToTable("LG_001_OCCUPATION");

                entity.HasIndex(e => e.Prodordref, "I001_OCCUPATION_I2");

                entity.HasIndex(e => e.Displineref, "I001_OCCUPATION_I3");

                entity.HasIndex(e => e.Empref, "I001_OCCUPATION_I4");

                entity.HasIndex(e => new { e.Prodordref, e.Displineref }, "I001_OCCUPATION_I5");

                entity.HasIndex(e => new { e.Occtype, e.Empref, e.Occstatus, e.Wizentry, e.Prodordref, e.Displineref }, "I001_OCCUPATION_I6");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Begtime).HasColumnName("BEGTIME");

                entity.Property(e => e.Calctyp).HasColumnName("CALCTYP");

                entity.Property(e => e.Costfactor).HasColumnName("COSTFACTOR");

                entity.Property(e => e.Displineref).HasColumnName("DISPLINEREF");

                entity.Property(e => e.Duration).HasColumnName("DURATION");

                entity.Property(e => e.Empref).HasColumnName("EMPREF");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Endtime).HasColumnName("ENDTIME");

                entity.Property(e => e.Laborreqref).HasColumnName("LABORREQREF");

                entity.Property(e => e.Movebatch).HasColumnName("MOVEBATCH");

                entity.Property(e => e.Movetime).HasColumnName("MOVETIME");

                entity.Property(e => e.Occstatus).HasColumnName("OCCSTATUS");

                entity.Property(e => e.Occtype).HasColumnName("OCCTYPE");

                entity.Property(e => e.Opamount).HasColumnName("OPAMOUNT");

                entity.Property(e => e.Opduration).HasColumnName("OPDURATION");

                entity.Property(e => e.Prodordref).HasColumnName("PRODORDREF");

                entity.Property(e => e.Runbatch).HasColumnName("RUNBATCH");

                entity.Property(e => e.Runtime).HasColumnName("RUNTIME");

                entity.Property(e => e.Setuptime).HasColumnName("SETUPTIME");

                entity.Property(e => e.Toolref).HasColumnName("TOOLREF");

                entity.Property(e => e.Toolreqref).HasColumnName("TOOLREQREF");

                entity.Property(e => e.Waitbatch).HasColumnName("WAITBATCH");

                entity.Property(e => e.Waittime).HasColumnName("WAITTIME");

                entity.Property(e => e.Wizentry).HasColumnName("WIZENTRY");
            });

            modelBuilder.Entity<Lg001Offfcexch>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_OFFFCEXCH_I1");

                entity.ToTable("LG_001_OFFFCEXCH");

                entity.HasIndex(e => e.Ficheref, "I001_OFFFCEXCH_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Adddiscountsx).HasColumnName("ADDDISCOUNTSX");

                entity.Property(e => e.Addexpensesvatx).HasColumnName("ADDEXPENSESVATX");

                entity.Property(e => e.Addexpensesx).HasColumnName("ADDEXPENSESX");

                entity.Property(e => e.Bagkurx).HasColumnName("BAGKURX");

                entity.Property(e => e.Borsax).HasColumnName("BORSAX");

                entity.Property(e => e.Distexpensex).HasColumnName("DISTEXPENSEX");

                entity.Property(e => e.Ek1x).HasColumnName("EK1X");

                entity.Property(e => e.Ek2x).HasColumnName("EK2X");

                entity.Property(e => e.Ek3x).HasColumnName("EK3X");

                entity.Property(e => e.Ek4x).HasColumnName("EK4X");

                entity.Property(e => e.Ek5x).HasColumnName("EK5X");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Grosstotalx).HasColumnName("GROSSTOTALX");

                entity.Property(e => e.Komisyonx).HasColumnName("KOMISYONX");

                entity.Property(e => e.Komkdvx).HasColumnName("KOMKDVX");

                entity.Property(e => e.Ssdfx).HasColumnName("SSDFX");

                entity.Property(e => e.Stopajx).HasColumnName("STOPAJX");

                entity.Property(e => e.Totaladdtaxx).HasColumnName("TOTALADDTAXX");

                entity.Property(e => e.Totaldepozitox).HasColumnName("TOTALDEPOZITOX");

                entity.Property(e => e.Totaldiscountedx).HasColumnName("TOTALDISCOUNTEDX");

                entity.Property(e => e.Totaldiscountsx).HasColumnName("TOTALDISCOUNTSX");

                entity.Property(e => e.Totalexaddtaxx).HasColumnName("TOTALEXADDTAXX");

                entity.Property(e => e.Totalexpensesvatx).HasColumnName("TOTALEXPENSESVATX");

                entity.Property(e => e.Totalexpensesx).HasColumnName("TOTALEXPENSESX");

                entity.Property(e => e.Totalpromotionsx).HasColumnName("TOTALPROMOTIONSX");

                entity.Property(e => e.Totalservicesx).HasColumnName("TOTALSERVICESX");

                entity.Property(e => e.Totalvatx).HasColumnName("TOTALVATX");

                entity.Property(e => e.Vatincgrossx).HasColumnName("VATINCGROSSX");
            });

            modelBuilder.Entity<Lg001Offlineexch>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_OFFLINEEXCH_I1");

                entity.ToTable("LG_001_OFFLINEEXCH");

                entity.HasIndex(e => e.Transref, "I001_OFFLINEEXCH_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addtaxamountx).HasColumnName("ADDTAXAMOUNTX");

                entity.Property(e => e.Addtaxconvfactx).HasColumnName("ADDTAXCONVFACTX");

                entity.Property(e => e.Addtaxdiscamountx).HasColumnName("ADDTAXDISCAMOUNTX");

                entity.Property(e => e.Addtaxvatmatrahx).HasColumnName("ADDTAXVATMATRAHX");

                entity.Property(e => e.Distaddexpx).HasColumnName("DISTADDEXPX");

                entity.Property(e => e.Distcostx).HasColumnName("DISTCOSTX");

                entity.Property(e => e.Distdiscx).HasColumnName("DISTDISCX");

                entity.Property(e => e.Distexpvatx).HasColumnName("DISTEXPVATX");

                entity.Property(e => e.Distexpx).HasColumnName("DISTEXPX");

                entity.Property(e => e.Distpromx).HasColumnName("DISTPROMX");

                entity.Property(e => e.Euvatamountx).HasColumnName("EUVATAMOUNTX");

                entity.Property(e => e.Exaddtaxamntx).HasColumnName("EXADDTAXAMNTX");

                entity.Property(e => e.Exaddtaxconvfx).HasColumnName("EXADDTAXCONVFX");

                entity.Property(e => e.Linenetx).HasColumnName("LINENETX");

                entity.Property(e => e.Netdiscamntx).HasColumnName("NETDISCAMNTX");

                entity.Property(e => e.Pricex).HasColumnName("PRICEX");

                entity.Property(e => e.Totalx).HasColumnName("TOTALX");

                entity.Property(e => e.Transref).HasColumnName("TRANSREF");

                entity.Property(e => e.Vatamntx).HasColumnName("VATAMNTX");

                entity.Property(e => e.Vatcalcdiffx).HasColumnName("VATCALCDIFFX");

                entity.Property(e => e.Vatmatrahx).HasColumnName("VATMATRAHX");
            });

            modelBuilder.Entity<Lg001Opattasg>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_OPATTASG_I1");

                entity.ToTable("LG_001_OPATTASG");

                entity.HasIndex(e => new { e.Wsattasgref, e.Wsattvalref, e.Opreqref }, "I001_OPATTASG_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Opreqref).HasColumnName("OPREQREF");

                entity.Property(e => e.Wsattasgref).HasColumnName("WSATTASGREF");

                entity.Property(e => e.Wsattvalref).HasColumnName("WSATTVALREF");
            });

            modelBuilder.Entity<Lg001Opertion>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_OPERTION_I1");

                entity.ToTable("LG_001_OPERTION");

                entity.HasIndex(e => new { e.Cardtype, e.Code }, "I001_OPERTION_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Name }, "I001_OPERTION_I3");

                entity.HasIndex(e => new { e.Active, e.Cardtype, e.Code }, "I001_OPERTION_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Cardtype, e.Name }, "I001_OPERTION_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Disttype).HasColumnName("DISTTYPE");

                entity.Property(e => e.Docounting).HasColumnName("DOCOUNTING");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Qccsetref).HasColumnName("QCCSETREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Opreqactivity>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_OPREQACTIVITY_I1");

                entity.ToTable("LG_001_OPREQACTIVITY");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Formula)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA");

                entity.Property(e => e.Opreqref).HasColumnName("OPREQREF");

                entity.Property(e => e.Ovhdref).HasColumnName("OVHDREF");

                entity.Property(e => e.Whenhappen).HasColumnName("WHENHAPPEN");
            });

            modelBuilder.Entity<Lg001Oprtreq>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_OPRTREQ_I1");

                entity.ToTable("LG_001_OPRTREQ");

                entity.HasIndex(e => new { e.Operationref, e.Priority, e.Lineno }, "I001_OPRTREQ_I2");

                entity.HasIndex(e => new { e.Operationref, e.Group, e.Wsref, e.Logicalref }, "I001_OPRTREQ_I3")
                    .IsUnique();

                entity.HasIndex(e => e.Fixedsetuptime, "I001_OPRTREQ_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Batchquantity).HasColumnName("BATCHQUANTITY");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Condition)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("CONDITION");

                entity.Property(e => e.Delayunit).HasColumnName("DELAYUNIT");

                entity.Property(e => e.Efficiency).HasColumnName("EFFICIENCY");

                entity.Property(e => e.Fixedsetuptime).HasColumnName("FIXEDSETUPTIME");

                entity.Property(e => e.Group).HasColumnName("GROUP_");

                entity.Property(e => e.Headtime).HasColumnName("HEADTIME");

                entity.Property(e => e.Insptime).HasColumnName("INSPTIME");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Lineupdelay).HasColumnName("LINEUPDELAY");

                entity.Property(e => e.Maxamount).HasColumnName("MAXAMOUNT");

                entity.Property(e => e.Minamount).HasColumnName("MINAMOUNT");

                entity.Property(e => e.Occslicetime).HasColumnName("OCCSLICETIME");

                entity.Property(e => e.Occsliceusage).HasColumnName("OCCSLICEUSAGE");

                entity.Property(e => e.Operationref).HasColumnName("OPERATIONREF");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Quetime).HasColumnName("QUETIME");

                entity.Property(e => e.Runtime).HasColumnName("RUNTIME");

                entity.Property(e => e.Tailtime).HasColumnName("TAILTIME");

                entity.Property(e => e.Transbatchqty).HasColumnName("TRANSBATCHQTY");

                entity.Property(e => e.Transbatchtime).HasColumnName("TRANSBATCHTIME");

                entity.Property(e => e.Usageper).HasColumnName("USAGEPER");

                entity.Property(e => e.Waitbatchqty).HasColumnName("WAITBATCHQTY");

                entity.Property(e => e.Waitbatchtime).HasColumnName("WAITBATCHTIME");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg001Overhead>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_OVERHEADS_I1");

                entity.ToTable("LG_001_OVERHEADS");

                entity.HasIndex(e => e.Code, "I001_OVERHEADS_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Definition, "I001_OVERHEADS_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_OVERHEADS_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Definition }, "I001_OVERHEADS_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Activity).HasColumnName("ACTIVITY");

                entity.Property(e => e.Budgetcenter).HasColumnName("BUDGETCENTER");

                entity.Property(e => e.Budgetdifaccref).HasColumnName("BUDGETDIFACCREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cpctycenter).HasColumnName("CPCTYCENTER");

                entity.Property(e => e.Cpctydifaccref).HasColumnName("CPCTYDIFACCREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION");

                entity.Property(e => e.Grpcodenr).HasColumnName("GRPCODENR");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Prdctvcenter).HasColumnName("PRDCTVCENTER");

                entity.Property(e => e.Prdctvdifaccref).HasColumnName("PRDCTVDIFACCREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reflectaccref).HasColumnName("REFLECTACCREF");

                entity.Property(e => e.Reflectcenter).HasColumnName("REFLECTCENTER");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Unitcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITCODE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Ovhcdistrate>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_OVHCDISTRATE_I1");

                entity.ToTable("LG_001_OVHCDISTRATE");

                entity.HasIndex(e => new { e.Cardref, e.Costprdref }, "I001_OVHCDISTRATE_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Costprdref).HasColumnName("COSTPRDREF");

                entity.Property(e => e.Distrate).HasColumnName("DISTRATE");
            });

            modelBuilder.Entity<Lg001Ovhdtran>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_OVHDTRANS_I1");

                entity.ToTable("LG_001_OVHDTRANS");

                entity.HasIndex(e => e.Ovhdclnref, "I001_OVHDTRANS_I2");

                entity.HasIndex(e => new { e.Prodordref, e.Trantype }, "I001_OVHDTRANS_I3");

                entity.HasIndex(e => new { e.Workordref, e.Trantype }, "I001_OVHDTRANS_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accounted).HasColumnName("ACCOUNTED");

                entity.Property(e => e.Activity).HasColumnName("ACTIVITY");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Createdbyact).HasColumnName("CREATEDBYACT");

                entity.Property(e => e.Opactivityref).HasColumnName("OPACTIVITYREF");

                entity.Property(e => e.Ovhdclnref).HasColumnName("OVHDCLNREF");

                entity.Property(e => e.Prodordref).HasColumnName("PRODORDREF");

                entity.Property(e => e.Rdtotal).HasColumnName("RDTOTAL");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Tranbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("TRANBEGDATE");

                entity.Property(e => e.Tranenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("TRANENDDATE");

                entity.Property(e => e.Trantype).HasColumnName("TRANTYPE");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Unitcost).HasColumnName("UNITCOST");

                entity.Property(e => e.Workordref).HasColumnName("WORKORDREF");
            });

            modelBuilder.Entity<Lg001Ovrhdaccref>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_OVRHDACCREF_I1");

                entity.ToTable("LG_001_OVRHDACCREF");

                entity.HasIndex(e => e.Cardref, "I001_OVRHDACCREF_I2");

                entity.HasIndex(e => new { e.Accountref, e.Typ }, "I001_OVRHDACCREF_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<Lg001Ovrhdcenter>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_OVRHDCENTER_I1");

                entity.ToTable("LG_001_OVRHDCENTER");

                entity.HasIndex(e => e.Code, "I001_OVRHDCENTER_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Definition, "I001_OVRHDCENTER_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_OVRHDCENTER_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Definition }, "I001_OVRHDCENTER_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Centertype).HasColumnName("CENTERTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cpctydriver).HasColumnName("CPCTYDRIVER");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION");

                entity.Property(e => e.Distrate).HasColumnName("DISTRATE");

                entity.Property(e => e.Expbranch).HasColumnName("EXPBRANCH");

                entity.Property(e => e.Expcenterref).HasColumnName("EXPCENTERREF");

                entity.Property(e => e.Expcenterspecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("EXPCENTERSPECODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Ovrhdcenterln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_OVRHDCENTERLN_I1");

                entity.ToTable("LG_001_OVRHDCENTERLN");

                entity.HasIndex(e => new { e.Ovrhdcenterref, e.Costprdref, e.Overheadref }, "I001_OVRHDCENTERLN_I2");

                entity.HasIndex(e => new { e.Indirectref, e.Distrateref }, "I001_OVRHDCENTERLN_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Activityamount).HasColumnName("ACTIVITYAMOUNT");

                entity.Property(e => e.Capacity).HasColumnName("CAPACITY");

                entity.Property(e => e.Costprdref).HasColumnName("COSTPRDREF");

                entity.Property(e => e.Distrateref).HasColumnName("DISTRATEREF");

                entity.Property(e => e.Indirectref).HasColumnName("INDIRECTREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Overheadref).HasColumnName("OVERHEADREF");

                entity.Property(e => e.Ovhdstdunitcost).HasColumnName("OVHDSTDUNITCOST");

                entity.Property(e => e.Ovrhdcenterref).HasColumnName("OVRHDCENTERREF");

                entity.Property(e => e.Prdlinenr).HasColumnName("PRDLINENR");

                entity.Property(e => e.Rdtotal).HasColumnName("RDTOTAL");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Total).HasColumnName("TOTAL");
            });

            modelBuilder.Entity<Lg001Paramasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PARAMASGN_I1");

                entity.ToTable("LG_001_PARAMASGN");

                entity.HasIndex(e => new { e.Prodordref, e.Bomparamref }, "I001_PARAMASGN_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bomparamref).HasColumnName("BOMPARAMREF");

                entity.Property(e => e.Paramval).HasColumnName("PARAMVAL");

                entity.Property(e => e.Prodordref).HasColumnName("PRODORDREF");
            });

            modelBuilder.Entity<Lg001Payline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PAYLINES_I1");

                entity.ToTable("LG_001_PAYLINES");

                entity.HasIndex(e => new { e.Payplanref, e.Lineno }, "I001_PAYLINES_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Absdate)
                    .HasColumnType("datetime")
                    .HasColumnName("ABSDATE");

                entity.Property(e => e.Afterdays).HasColumnName("AFTERDAYS");

                entity.Property(e => e.Bankaccref).HasColumnName("BANKACCREF");

                entity.Property(e => e.Condition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CONDITION");

                entity.Property(e => e.Datetype).HasColumnName("DATETYPE");

                entity.Property(e => e.Day)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DAY_");

                entity.Property(e => e.Discrate).HasColumnName("DISCRATE");

                entity.Property(e => e.Formula)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA");

                entity.Property(e => e.Globalcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALCODE");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Mounth)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("MOUNTH");

                entity.Property(e => e.Paymenttype).HasColumnName("PAYMENTTYPE");

                entity.Property(e => e.Payplanref).HasColumnName("PAYPLANREF");

                entity.Property(e => e.Repaydefref).HasColumnName("REPAYDEFREF");

                entity.Property(e => e.Rndvalue).HasColumnName("RNDVALUE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Year)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lg001Payplan>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PAYPLANS_I1");

                entity.ToTable("LG_001_PAYPLANS");

                entity.HasIndex(e => e.Code, "I001_PAYPLANS_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_PAYPLANS_I3")
                    .IsUnique();

                entity.HasIndex(e => e.Bankaccref, "I001_PAYPLANS_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Bankaccref).HasColumnName("BANKACCREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Counter).HasColumnName("COUNTER");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Definition2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION2");

                entity.Property(e => e.Earlyinterest).HasColumnName("EARLYINTEREST");

                entity.Property(e => e.Globalcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALCODE");

                entity.Property(e => e.Lastdaymonth).HasColumnName("LASTDAYMONTH");

                entity.Property(e => e.Lateinterest).HasColumnName("LATEINTEREST");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Ppgroupcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("PPGROUPCODE");

                entity.Property(e => e.Ppgroupref).HasColumnName("PPGROUPREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Sepdays).HasColumnName("SEPDAYS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Wrkdays).HasColumnName("WRKDAYS");
            });

            modelBuilder.Entity<Lg001Pegging>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PEGGING_I1");

                entity.ToTable("LG_001_PEGGING");

                entity.HasIndex(e => new { e.Pegtype, e.Pegref }, "I001_PEGGING_I2");

                entity.HasIndex(e => new { e.Pegref, e.Pegtype, e.Reltype }, "I001_PEGGING_I3");

                entity.HasIndex(e => e.Pordficheref, "I001_PEGGING_I4");

                entity.HasIndex(e => e.Pordlineref, "I001_PEGGING_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Canchange).HasColumnName("CANCHANGE");

                entity.Property(e => e.Displineref).HasColumnName("DISPLINEREF");

                entity.Property(e => e.Fichetype).HasColumnName("FICHETYPE");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Mrppropref).HasColumnName("MRPPROPREF");

                entity.Property(e => e.Otherpegref).HasColumnName("OTHERPEGREF");

                entity.Property(e => e.Pdemficheref).HasColumnName("PDEMFICHEREF");

                entity.Property(e => e.Pdemlineref).HasColumnName("PDEMLINEREF");

                entity.Property(e => e.Pegref).HasColumnName("PEGREF");

                entity.Property(e => e.Pegtype).HasColumnName("PEGTYPE");

                entity.Property(e => e.Periodnr).HasColumnName("PERIODNR");

                entity.Property(e => e.Pordficheref).HasColumnName("PORDFICHEREF");

                entity.Property(e => e.Pordlineref).HasColumnName("PORDLINEREF");

                entity.Property(e => e.Prodlineref).HasColumnName("PRODLINEREF");

                entity.Property(e => e.Prodordref).HasColumnName("PRODORDREF");

                entity.Property(e => e.Prodordtyp).HasColumnName("PRODORDTYP");

                entity.Property(e => e.Reltype).HasColumnName("RELTYPE");

                entity.Property(e => e.Subcontref).HasColumnName("SUBCONTREF");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg001Perftest>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PERFTEST_I1");

                entity.ToTable("LG_001_PERFTEST");

                entity.HasIndex(e => new { e.Mtrlbrws, e.Classtype, e.Active, e.Code }, "I001_PERFTEST_I10");

                entity.HasIndex(e => e.Unitsetref, "I001_PERFTEST_I11");

                entity.HasIndex(e => new { e.Purchbrws, e.Classtype, e.Active, e.Name }, "I001_PERFTEST_I12");

                entity.HasIndex(e => new { e.Salesbrws, e.Classtype, e.Active, e.Name }, "I001_PERFTEST_I13");

                entity.HasIndex(e => new { e.Mtrlbrws, e.Classtype, e.Active, e.Name }, "I001_PERFTEST_I14");

                entity.HasIndex(e => e.Logoid, "I001_PERFTEST_I15");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_PERFTEST_I16");

                entity.HasIndex(e => new { e.Active, e.Name }, "I001_PERFTEST_I17");

                entity.HasIndex(e => e.Dominantrefs5, "I001_PERFTEST_I18");

                entity.HasIndex(e => new { e.Cardtype, e.Dominantrefs5 }, "I001_PERFTEST_I19");

                entity.HasIndex(e => e.Code, "I001_PERFTEST_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Cardtype }, "I001_PERFTEST_I20");

                entity.HasIndex(e => new { e.Classtype, e.Dominantrefs5, e.Logicalref }, "I001_PERFTEST_I21")
                    .IsUnique();

                entity.HasIndex(e => new { e.Lowlevelcodes1, e.Lowlevelcodes2, e.Lowlevelcodes3, e.Lowlevelcodes4, e.Lowlevelcodes5, e.Lowlevelcodes6, e.Lowlevelcodes7, e.Logicalref }, "I001_PERFTEST_I22")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_PERFTEST_I3");

                entity.HasIndex(e => e.Producercode, "I001_PERFTEST_I4");

                entity.HasIndex(e => e.Stgrpcode, "I001_PERFTEST_I5");

                entity.HasIndex(e => new { e.Classtype, e.Active, e.Code }, "I001_PERFTEST_I6");

                entity.HasIndex(e => new { e.Classtype, e.Active, e.Name }, "I001_PERFTEST_I7");

                entity.HasIndex(e => new { e.Purchbrws, e.Classtype, e.Active, e.Code }, "I001_PERFTEST_I8");

                entity.HasIndex(e => new { e.Salesbrws, e.Classtype, e.Active, e.Code }, "I001_PERFTEST_I9");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Addtaxref).HasColumnName("ADDTAXREF");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Appspevatmatrah).HasColumnName("APPSPEVATMATRAH");

                entity.Property(e => e.Autoincsl).HasColumnName("AUTOINCSL");

                entity.Property(e => e.Avrwhduration).HasColumnName("AVRWHDURATION");

                entity.Property(e => e.B2ccode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("B2CCODE");

                entity.Property(e => e.Camppoint).HasColumnName("CAMPPOINT");

                entity.Property(e => e.Canconfigure).HasColumnName("CANCONFIGURE");

                entity.Property(e => e.Candeduct).HasColumnName("CANDEDUCT");

                entity.Property(e => e.Canuseintrns).HasColumnName("CANUSEINTRNS");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Categoryid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORYID");

                entity.Property(e => e.Categoryname)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORYNAME");

                entity.Property(e => e.Charsetref).HasColumnName("CHARSETREF");

                entity.Property(e => e.Classtype).HasColumnName("CLASSTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Comblotunits).HasColumnName("COMBLOTUNITS");

                entity.Property(e => e.Compkdvuse).HasColumnName("COMPKDVUSE");

                entity.Property(e => e.Conscoderef).HasColumnName("CONSCODEREF");

                entity.Property(e => e.Cpacode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CPACODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Deductcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DEDUCTCODE");

                entity.Property(e => e.Demandmeetsortfld1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEMANDMEETSORTFLD1");

                entity.Property(e => e.Demandmeetsortfld2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEMANDMEETSORTFLD2");

                entity.Property(e => e.Demandmeetsortfld3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEMANDMEETSORTFLD3");

                entity.Property(e => e.Demandmeetsortfld4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEMANDMEETSORTFLD4");

                entity.Property(e => e.Demandmeetsortfld5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEMANDMEETSORTFLD5");

                entity.Property(e => e.Deprclasstype)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("DEPRCLASSTYPE");

                entity.Property(e => e.Deprdur).HasColumnName("DEPRDUR");

                entity.Property(e => e.Deprdur2).HasColumnName("DEPRDUR2");

                entity.Property(e => e.Deprrate).HasColumnName("DEPRRATE");

                entity.Property(e => e.Deprrate2).HasColumnName("DEPRRATE2");

                entity.Property(e => e.Deprtype).HasColumnName("DEPRTYPE");

                entity.Property(e => e.Deprtype2).HasColumnName("DEPRTYPE2");

                entity.Property(e => e.Distamount).HasColumnName("DISTAMOUNT");

                entity.Property(e => e.Distlotunits).HasColumnName("DISTLOTUNITS");

                entity.Property(e => e.Distpoint).HasColumnName("DISTPOINT");

                entity.Property(e => e.Divlotsize).HasColumnName("DIVLOTSIZE");

                entity.Property(e => e.Dominantrefs1).HasColumnName("DOMINANTREFS1");

                entity.Property(e => e.Dominantrefs10).HasColumnName("DOMINANTREFS10");

                entity.Property(e => e.Dominantrefs11).HasColumnName("DOMINANTREFS11");

                entity.Property(e => e.Dominantrefs12).HasColumnName("DOMINANTREFS12");

                entity.Property(e => e.Dominantrefs2).HasColumnName("DOMINANTREFS2");

                entity.Property(e => e.Dominantrefs3).HasColumnName("DOMINANTREFS3");

                entity.Property(e => e.Dominantrefs4).HasColumnName("DOMINANTREFS4");

                entity.Property(e => e.Dominantrefs5).HasColumnName("DOMINANTREFS5");

                entity.Property(e => e.Dominantrefs6).HasColumnName("DOMINANTREFS6");

                entity.Property(e => e.Dominantrefs7).HasColumnName("DOMINANTREFS7");

                entity.Property(e => e.Dominantrefs8).HasColumnName("DOMINANTREFS8");

                entity.Property(e => e.Dominantrefs9).HasColumnName("DOMINANTREFS9");

                entity.Property(e => e.Eanbarcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EANBARCODE");

                entity.Property(e => e.Eximtax1).HasColumnName("EXIMTAX1");

                entity.Property(e => e.Eximtax2).HasColumnName("EXIMTAX2");

                entity.Property(e => e.Eximtax3).HasColumnName("EXIMTAX3");

                entity.Property(e => e.Eximtax4).HasColumnName("EXIMTAX4");

                entity.Property(e => e.Eximtax5).HasColumnName("EXIMTAX5");

                entity.Property(e => e.Expcategory)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EXPCATEGORY");

                entity.Property(e => e.Expctgno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EXPCTGNO");

                entity.Property(e => e.Expense).HasColumnName("EXPENSE");

                entity.Property(e => e.Extaccessflags).HasColumnName("EXTACCESSFLAGS");

                entity.Property(e => e.Extcardflags).HasColumnName("EXTCARDFLAGS");

                entity.Property(e => e.Facostkeys).HasColumnName("FACOSTKEYS");

                entity.Property(e => e.Fausefullifecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("FAUSEFULLIFECODE");

                entity.Property(e => e.Fausefullifecode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("FAUSEFULLIFECODE2");

                entity.Property(e => e.Forecastcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("FORECASTCODE");

                entity.Property(e => e.Freightplace)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTPLACE");

                entity.Property(e => e.Freighttypcode1)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE1");

                entity.Property(e => e.Freighttypcode10)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE10");

                entity.Property(e => e.Freighttypcode2)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE2");

                entity.Property(e => e.Freighttypcode3)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE3");

                entity.Property(e => e.Freighttypcode4)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE4");

                entity.Property(e => e.Freighttypcode5)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE5");

                entity.Property(e => e.Freighttypcode6)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE6");

                entity.Property(e => e.Freighttypcode7)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE7");

                entity.Property(e => e.Freighttypcode8)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE8");

                entity.Property(e => e.Freighttypcode9)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("FREIGHTTYPCODE9");

                entity.Property(e => e.Gaintype).HasColumnName("GAINTYPE");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Groupnr)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("GROUPNR");

                entity.Property(e => e.Gtipcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("GTIPCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Image2inc).HasColumnName("IMAGE2INC");

                entity.Property(e => e.Imageinc).HasColumnName("IMAGEINC");

                entity.Property(e => e.Isonr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ISONR");

                entity.Property(e => e.Keyword1)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("KEYWORD1");

                entity.Property(e => e.Keyword2)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("KEYWORD2");

                entity.Property(e => e.Keyword3)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("KEYWORD3");

                entity.Property(e => e.Keyword4)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("KEYWORD4");

                entity.Property(e => e.Keyword5)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("KEYWORD5");

                entity.Property(e => e.Kklinesdisable).HasColumnName("KKLINESDISABLE");

                entity.Property(e => e.Levelcontrol).HasColumnName("LEVELCONTROL");

                entity.Property(e => e.Lidconfirmed).HasColumnName("LIDCONFIRMED");

                entity.Property(e => e.Loctracking).HasColumnName("LOCTRACKING");

                entity.Property(e => e.Logoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("LOGOID");

                entity.Property(e => e.Lostfactor).HasColumnName("LOSTFACTOR");

                entity.Property(e => e.Lowlevelcodes1).HasColumnName("LOWLEVELCODES1");

                entity.Property(e => e.Lowlevelcodes10).HasColumnName("LOWLEVELCODES10");

                entity.Property(e => e.Lowlevelcodes2).HasColumnName("LOWLEVELCODES2");

                entity.Property(e => e.Lowlevelcodes3).HasColumnName("LOWLEVELCODES3");

                entity.Property(e => e.Lowlevelcodes4).HasColumnName("LOWLEVELCODES4");

                entity.Property(e => e.Lowlevelcodes5).HasColumnName("LOWLEVELCODES5");

                entity.Property(e => e.Lowlevelcodes6).HasColumnName("LOWLEVELCODES6");

                entity.Property(e => e.Lowlevelcodes7).HasColumnName("LOWLEVELCODES7");

                entity.Property(e => e.Lowlevelcodes8).HasColumnName("LOWLEVELCODES8");

                entity.Property(e => e.Lowlevelcodes9).HasColumnName("LOWLEVELCODES9");

                entity.Property(e => e.Markref).HasColumnName("MARKREF");

                entity.Property(e => e.Minordamount).HasColumnName("MINORDAMOUNT");

                entity.Property(e => e.Mold).HasColumnName("MOLD");

                entity.Property(e => e.Moldfactor).HasColumnName("MOLDFACTOR");

                entity.Property(e => e.Moldlifeasratio).HasColumnName("MOLDLIFEASRATIO");

                entity.Property(e => e.Moldlifetracktype).HasColumnName("MOLDLIFETRACKTYPE");

                entity.Property(e => e.Moldmaintbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("MOLDMAINTBEGDATE");

                entity.Property(e => e.Moldmaintlife).HasColumnName("MOLDMAINTLIFE");

                entity.Property(e => e.Moldmaintlifetype).HasColumnName("MOLDMAINTLIFETYPE");

                entity.Property(e => e.Moldmaintnumber).HasColumnName("MOLDMAINTNUMBER");

                entity.Property(e => e.Moldmaintperiod).HasColumnName("MOLDMAINTPERIOD");

                entity.Property(e => e.Moldmaintperunit).HasColumnName("MOLDMAINTPERUNIT");

                entity.Property(e => e.Moldmainttype).HasColumnName("MOLDMAINTTYPE");

                entity.Property(e => e.Moldusagelife).HasColumnName("MOLDUSAGELIFE");

                entity.Property(e => e.Mtrlbrws).HasColumnName("MTRLBRWS");

                entity.Property(e => e.Multiaddtax).HasColumnName("MULTIADDTAX");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Name2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Name3)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("NAME3");

                entity.Property(e => e.Name4)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("NAME4");

                entity.Property(e => e.Nodiscount).HasColumnName("NODISCOUNT");

                entity.Property(e => e.Notifycrdref).HasColumnName("NOTIFYCRDREF");

                entity.Property(e => e.Obtaintype).HasColumnName("OBTAINTYPE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Origin)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORIGIN");

                entity.Property(e => e.Packet).HasColumnName("PACKET");

                entity.Property(e => e.Partdep).HasColumnName("PARTDEP");

                entity.Property(e => e.Partdep2).HasColumnName("PARTDEP2");

                entity.Property(e => e.Paymentref).HasColumnName("PAYMENTREF");

                entity.Property(e => e.Pordamnttolerance).HasColumnName("PORDAMNTTOLERANCE");

                entity.Property(e => e.Prodcountry)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("PRODCOUNTRY");

                entity.Property(e => e.Producercode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCERCODE");

                entity.Property(e => e.Productlevel).HasColumnName("PRODUCTLEVEL");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Publiccountryref).HasColumnName("PUBLICCOUNTRYREF");

                entity.Property(e => e.Purcdeductpart1).HasColumnName("PURCDEDUCTPART1");

                entity.Property(e => e.Purcdeductpart2).HasColumnName("PURCDEDUCTPART2");

                entity.Property(e => e.Purchbrws).HasColumnName("PURCHBRWS");

                entity.Property(e => e.Qccsetref).HasColumnName("QCCSETREF");

                entity.Property(e => e.Qprodamnt).HasColumnName("QPRODAMNT");

                entity.Property(e => e.Qproddepart).HasColumnName("QPRODDEPART");

                entity.Property(e => e.Qprodsrcindex).HasColumnName("QPRODSRCINDEX");

                entity.Property(e => e.Qprodsubamnt).HasColumnName("QPRODSUBAMNT");

                entity.Property(e => e.Qprodsubdepart).HasColumnName("QPRODSUBDEPART");

                entity.Property(e => e.Qprodsubsrcindex).HasColumnName("QPRODSUBSRCINDEX");

                entity.Property(e => e.Qprodsubuom).HasColumnName("QPRODSUBUOM");

                entity.Property(e => e.Qproduom).HasColumnName("QPRODUOM");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Returnprvat).HasColumnName("RETURNPRVAT");

                entity.Property(e => e.Returnvat).HasColumnName("RETURNVAT");

                entity.Property(e => e.Revalflag).HasColumnName("REVALFLAG");

                entity.Property(e => e.Revalflag2).HasColumnName("REVALFLAG2");

                entity.Property(e => e.Revdeprflag).HasColumnName("REVDEPRFLAG");

                entity.Property(e => e.Revdeprflag2).HasColumnName("REVDEPRFLAG2");

                entity.Property(e => e.Saledeductpart1).HasColumnName("SALEDEDUCTPART1");

                entity.Property(e => e.Saledeductpart2).HasColumnName("SALEDEDUCTPART2");

                entity.Property(e => e.Salesbrws).HasColumnName("SALESBRWS");

                entity.Property(e => e.Saleslimitquantity).HasColumnName("SALESLIMITQUANTITY");

                entity.Property(e => e.Salvageval).HasColumnName("SALVAGEVAL");

                entity.Property(e => e.Salvageval2).HasColumnName("SALVAGEVAL2");

                entity.Property(e => e.Sellprvat).HasColumnName("SELLPRVAT");

                entity.Property(e => e.Sellvat).HasColumnName("SELLVAT");

                entity.Property(e => e.Shelfdate).HasColumnName("SHELFDATE");

                entity.Property(e => e.Shelflife).HasColumnName("SHELFLIFE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sordamnttolerance).HasColumnName("SORDAMNTTOLERANCE");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Specode3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE3");

                entity.Property(e => e.Specode4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE4");

                entity.Property(e => e.Specode5)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE5");

                entity.Property(e => e.Statecode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("STATECODE");

                entity.Property(e => e.Statename)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("STATENAME");

                entity.Property(e => e.Stgrpcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("STGRPCODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Textinceng).HasColumnName("TEXTINCENG");

                entity.Property(e => e.Tool).HasColumnName("TOOL");

                entity.Property(e => e.Tracktype).HasColumnName("TRACKTYPE");

                entity.Property(e => e.Tsenr)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("TSENR");

                entity.Property(e => e.Uetdsloadtype)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UETDSLOADTYPE");

                entity.Property(e => e.Uetdsloadtypedef)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("UETDSLOADTYPEDEF");

                entity.Property(e => e.Uetdsloadunit)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasColumnName("UETDSLOADUNIT");

                entity.Property(e => e.Uetdstransportmode).HasColumnName("UETDSTRANSPORTMODE");

                entity.Property(e => e.Uetdstransporttype).HasColumnName("UETDSTRANSPORTTYPE");

                entity.Property(e => e.Uetdsuncode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("UETDSUNCODE");

                entity.Property(e => e.Uetdsundef)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("UETDSUNDEF");

                entity.Property(e => e.Unitsetref).HasColumnName("UNITSETREF");

                entity.Property(e => e.Univid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("UNIVID");

                entity.Property(e => e.Usedinperiods).HasColumnName("USEDINPERIODS");

                entity.Property(e => e.Vat).HasColumnName("VAT");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Poaccref>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_POACCREF_I1");

                entity.ToTable("LG_001_POACCREF");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Ovhdref).HasColumnName("OVHDREF");

                entity.Property(e => e.Ovhdtrantyp).HasColumnName("OVHDTRANTYP");

                entity.Property(e => e.Pordref).HasColumnName("PORDREF");

                entity.Property(e => e.Stref).HasColumnName("STREF");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg001Poline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_POLINE_I1");

                entity.ToTable("LG_001_POLINE");

                entity.HasIndex(e => new { e.Displineref, e.Lineno }, "I001_POLINE_I2");

                entity.HasIndex(e => e.Prodordref, "I001_POLINE_I3");

                entity.HasIndex(e => e.Nextlevrevref, "I001_POLINE_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Altitemuse).HasColumnName("ALTITEMUSE");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Bommasterref).HasColumnName("BOMMASTERREF");

                entity.Property(e => e.Bomrevref).HasColumnName("BOMREVREF");

                entity.Property(e => e.Bomtype).HasColumnName("BOMTYPE");

                entity.Property(e => e.Cost).HasColumnName("COST");

                entity.Property(e => e.Costrate).HasColumnName("COSTRATE");

                entity.Property(e => e.Currentid).HasColumnName("CURRENTID");

                entity.Property(e => e.Detline).HasColumnName("DETLINE");

                entity.Property(e => e.Displineref).HasColumnName("DISPLINEREF");

                entity.Property(e => e.Effectoptime).HasColumnName("EFFECTOPTIME");

                entity.Property(e => e.Engineering).HasColumnName("ENGINEERING");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Formula)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA");

                entity.Property(e => e.Formulaitemref).HasColumnName("FORMULAITEMREF");

                entity.Property(e => e.Formulavrntrefs1).HasColumnName("FORMULAVRNTREFS1");

                entity.Property(e => e.Formulavrntrefs10).HasColumnName("FORMULAVRNTREFS10");

                entity.Property(e => e.Formulavrntrefs2).HasColumnName("FORMULAVRNTREFS2");

                entity.Property(e => e.Formulavrntrefs3).HasColumnName("FORMULAVRNTREFS3");

                entity.Property(e => e.Formulavrntrefs4).HasColumnName("FORMULAVRNTREFS4");

                entity.Property(e => e.Formulavrntrefs5).HasColumnName("FORMULAVRNTREFS5");

                entity.Property(e => e.Formulavrntrefs6).HasColumnName("FORMULAVRNTREFS6");

                entity.Property(e => e.Formulavrntrefs7).HasColumnName("FORMULAVRNTREFS7");

                entity.Property(e => e.Formulavrntrefs8).HasColumnName("FORMULAVRNTREFS8");

                entity.Property(e => e.Formulavrntrefs9).HasColumnName("FORMULAVRNTREFS9");

                entity.Property(e => e.Grossuinfo1).HasColumnName("GROSSUINFO1");

                entity.Property(e => e.Grossuinfo2).HasColumnName("GROSSUINFO2");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Invuseparam).HasColumnName("INVUSEPARAM");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineclstype).HasColumnName("LINECLSTYPE");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Meettype).HasColumnName("MEETTYPE");

                entity.Property(e => e.Nextlevbomref).HasColumnName("NEXTLEVBOMREF");

                entity.Property(e => e.Nextlevbomtype).HasColumnName("NEXTLEVBOMTYPE");

                entity.Property(e => e.Nextlevrevref).HasColumnName("NEXTLEVREVREF");

                entity.Property(e => e.Operationref).HasColumnName("OPERATIONREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Outitemref).HasColumnName("OUTITEMREF");

                entity.Property(e => e.Parentid).HasColumnName("PARENTID");

                entity.Property(e => e.Prevlineref).HasColumnName("PREVLINEREF");

                entity.Property(e => e.Prodordref).HasColumnName("PRODORDREF");

                entity.Property(e => e.Prodordtyp).HasColumnName("PRODORDTYP");

                entity.Property(e => e.Production).HasColumnName("PRODUCTION");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Routlineref).HasColumnName("ROUTLINEREF");

                entity.Property(e => e.Scalable).HasColumnName("SCALABLE");

                entity.Property(e => e.Scrapcalc).HasColumnName("SCRAPCALC");

                entity.Property(e => e.Scrapfact).HasColumnName("SCRAPFACT");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Tempinuse).HasColumnName("TEMPINUSE");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Usestdcost).HasColumnName("USESTDCOST");

                entity.Property(e => e.Usref).HasColumnName("USREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Prcard>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PRCARDS_I1");

                entity.ToTable("LG_001_PRCARDS");

                entity.HasIndex(e => new { e.Cardtype, e.Code }, "I001_PRCARDS_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Definition }, "I001_PRCARDS_I3");

                entity.HasIndex(e => new { e.Stockref, e.Begdate }, "I001_PRCARDS_I4");

                entity.HasIndex(e => new { e.Cardtype, e.Promlines17Uomref, e.Code }, "I001_PRCARDS_I5")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Promlines17Uomref, e.Definition }, "I001_PRCARDS_I6");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Counter).HasColumnName("COUNTER");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Fichemodul).HasColumnName("FICHEMODUL");

                entity.Property(e => e.Fichetypes1).HasColumnName("FICHETYPES1");

                entity.Property(e => e.Fichetypes2).HasColumnName("FICHETYPES2");

                entity.Property(e => e.Fichetypes3).HasColumnName("FICHETYPES3");

                entity.Property(e => e.Mtrltype).HasColumnName("MTRLTYPE");

                entity.Property(e => e.Ordfcmodul).HasColumnName("ORDFCMODUL");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Price).HasColumnName("PRICE");

                entity.Property(e => e.Promlines10Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES10_FORMULA");

                entity.Property(e => e.Promlines10Orglogicref).HasColumnName("PROMLINES10_ORGLOGICREF");

                entity.Property(e => e.Promlines10Price).HasColumnName("PROMLINES10_PRICE");

                entity.Property(e => e.Promlines10Recstatus).HasColumnName("PROMLINES10_RECSTATUS");

                entity.Property(e => e.Promlines10Rndval).HasColumnName("PROMLINES10_RNDVAL");

                entity.Property(e => e.Promlines10Siteid).HasColumnName("PROMLINES10_SITEID");

                entity.Property(e => e.Promlines10Stockref).HasColumnName("PROMLINES10_STOCKREF");

                entity.Property(e => e.Promlines10Uomref).HasColumnName("PROMLINES10_UOMREF");

                entity.Property(e => e.Promlines10Variantref).HasColumnName("PROMLINES10_VARIANTREF");

                entity.Property(e => e.Promlines10Wfstatus).HasColumnName("PROMLINES10_WFSTATUS");

                entity.Property(e => e.Promlines11Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES11_FORMULA");

                entity.Property(e => e.Promlines11Orglogicref).HasColumnName("PROMLINES11_ORGLOGICREF");

                entity.Property(e => e.Promlines11Price).HasColumnName("PROMLINES11_PRICE");

                entity.Property(e => e.Promlines11Recstatus).HasColumnName("PROMLINES11_RECSTATUS");

                entity.Property(e => e.Promlines11Rndval).HasColumnName("PROMLINES11_RNDVAL");

                entity.Property(e => e.Promlines11Siteid).HasColumnName("PROMLINES11_SITEID");

                entity.Property(e => e.Promlines11Stockref).HasColumnName("PROMLINES11_STOCKREF");

                entity.Property(e => e.Promlines11Uomref).HasColumnName("PROMLINES11_UOMREF");

                entity.Property(e => e.Promlines11Variantref).HasColumnName("PROMLINES11_VARIANTREF");

                entity.Property(e => e.Promlines11Wfstatus).HasColumnName("PROMLINES11_WFSTATUS");

                entity.Property(e => e.Promlines12Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES12_FORMULA");

                entity.Property(e => e.Promlines12Orglogicref).HasColumnName("PROMLINES12_ORGLOGICREF");

                entity.Property(e => e.Promlines12Price).HasColumnName("PROMLINES12_PRICE");

                entity.Property(e => e.Promlines12Recstatus).HasColumnName("PROMLINES12_RECSTATUS");

                entity.Property(e => e.Promlines12Rndval).HasColumnName("PROMLINES12_RNDVAL");

                entity.Property(e => e.Promlines12Siteid).HasColumnName("PROMLINES12_SITEID");

                entity.Property(e => e.Promlines12Stockref).HasColumnName("PROMLINES12_STOCKREF");

                entity.Property(e => e.Promlines12Uomref).HasColumnName("PROMLINES12_UOMREF");

                entity.Property(e => e.Promlines12Variantref).HasColumnName("PROMLINES12_VARIANTREF");

                entity.Property(e => e.Promlines12Wfstatus).HasColumnName("PROMLINES12_WFSTATUS");

                entity.Property(e => e.Promlines13Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES13_FORMULA");

                entity.Property(e => e.Promlines13Orglogicref).HasColumnName("PROMLINES13_ORGLOGICREF");

                entity.Property(e => e.Promlines13Price).HasColumnName("PROMLINES13_PRICE");

                entity.Property(e => e.Promlines13Recstatus).HasColumnName("PROMLINES13_RECSTATUS");

                entity.Property(e => e.Promlines13Rndval).HasColumnName("PROMLINES13_RNDVAL");

                entity.Property(e => e.Promlines13Siteid).HasColumnName("PROMLINES13_SITEID");

                entity.Property(e => e.Promlines13Stockref).HasColumnName("PROMLINES13_STOCKREF");

                entity.Property(e => e.Promlines13Uomref).HasColumnName("PROMLINES13_UOMREF");

                entity.Property(e => e.Promlines13Variantref).HasColumnName("PROMLINES13_VARIANTREF");

                entity.Property(e => e.Promlines13Wfstatus).HasColumnName("PROMLINES13_WFSTATUS");

                entity.Property(e => e.Promlines14Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES14_FORMULA");

                entity.Property(e => e.Promlines14Orglogicref).HasColumnName("PROMLINES14_ORGLOGICREF");

                entity.Property(e => e.Promlines14Price).HasColumnName("PROMLINES14_PRICE");

                entity.Property(e => e.Promlines14Recstatus).HasColumnName("PROMLINES14_RECSTATUS");

                entity.Property(e => e.Promlines14Rndval).HasColumnName("PROMLINES14_RNDVAL");

                entity.Property(e => e.Promlines14Siteid).HasColumnName("PROMLINES14_SITEID");

                entity.Property(e => e.Promlines14Stockref).HasColumnName("PROMLINES14_STOCKREF");

                entity.Property(e => e.Promlines14Uomref).HasColumnName("PROMLINES14_UOMREF");

                entity.Property(e => e.Promlines14Variantref).HasColumnName("PROMLINES14_VARIANTREF");

                entity.Property(e => e.Promlines14Wfstatus).HasColumnName("PROMLINES14_WFSTATUS");

                entity.Property(e => e.Promlines15Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES15_FORMULA");

                entity.Property(e => e.Promlines15Orglogicref).HasColumnName("PROMLINES15_ORGLOGICREF");

                entity.Property(e => e.Promlines15Price).HasColumnName("PROMLINES15_PRICE");

                entity.Property(e => e.Promlines15Recstatus).HasColumnName("PROMLINES15_RECSTATUS");

                entity.Property(e => e.Promlines15Rndval).HasColumnName("PROMLINES15_RNDVAL");

                entity.Property(e => e.Promlines15Siteid).HasColumnName("PROMLINES15_SITEID");

                entity.Property(e => e.Promlines15Stockref).HasColumnName("PROMLINES15_STOCKREF");

                entity.Property(e => e.Promlines15Uomref).HasColumnName("PROMLINES15_UOMREF");

                entity.Property(e => e.Promlines15Variantref).HasColumnName("PROMLINES15_VARIANTREF");

                entity.Property(e => e.Promlines15Wfstatus).HasColumnName("PROMLINES15_WFSTATUS");

                entity.Property(e => e.Promlines16Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES16_FORMULA");

                entity.Property(e => e.Promlines16Orglogicref).HasColumnName("PROMLINES16_ORGLOGICREF");

                entity.Property(e => e.Promlines16Price).HasColumnName("PROMLINES16_PRICE");

                entity.Property(e => e.Promlines16Recstatus).HasColumnName("PROMLINES16_RECSTATUS");

                entity.Property(e => e.Promlines16Rndval).HasColumnName("PROMLINES16_RNDVAL");

                entity.Property(e => e.Promlines16Siteid).HasColumnName("PROMLINES16_SITEID");

                entity.Property(e => e.Promlines16Stockref).HasColumnName("PROMLINES16_STOCKREF");

                entity.Property(e => e.Promlines16Uomref).HasColumnName("PROMLINES16_UOMREF");

                entity.Property(e => e.Promlines16Variantref).HasColumnName("PROMLINES16_VARIANTREF");

                entity.Property(e => e.Promlines16Wfstatus).HasColumnName("PROMLINES16_WFSTATUS");

                entity.Property(e => e.Promlines17Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES17_FORMULA");

                entity.Property(e => e.Promlines17Orglogicref).HasColumnName("PROMLINES17_ORGLOGICREF");

                entity.Property(e => e.Promlines17Price).HasColumnName("PROMLINES17_PRICE");

                entity.Property(e => e.Promlines17Recstatus).HasColumnName("PROMLINES17_RECSTATUS");

                entity.Property(e => e.Promlines17Rndval).HasColumnName("PROMLINES17_RNDVAL");

                entity.Property(e => e.Promlines17Siteid).HasColumnName("PROMLINES17_SITEID");

                entity.Property(e => e.Promlines17Stockref).HasColumnName("PROMLINES17_STOCKREF");

                entity.Property(e => e.Promlines17Uomref).HasColumnName("PROMLINES17_UOMREF");

                entity.Property(e => e.Promlines17Variantref).HasColumnName("PROMLINES17_VARIANTREF");

                entity.Property(e => e.Promlines17Wfstatus).HasColumnName("PROMLINES17_WFSTATUS");

                entity.Property(e => e.Promlines18Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES18_FORMULA");

                entity.Property(e => e.Promlines18Orglogicref).HasColumnName("PROMLINES18_ORGLOGICREF");

                entity.Property(e => e.Promlines18Price).HasColumnName("PROMLINES18_PRICE");

                entity.Property(e => e.Promlines18Recstatus).HasColumnName("PROMLINES18_RECSTATUS");

                entity.Property(e => e.Promlines18Rndval).HasColumnName("PROMLINES18_RNDVAL");

                entity.Property(e => e.Promlines18Siteid).HasColumnName("PROMLINES18_SITEID");

                entity.Property(e => e.Promlines18Stockref).HasColumnName("PROMLINES18_STOCKREF");

                entity.Property(e => e.Promlines18Uomref).HasColumnName("PROMLINES18_UOMREF");

                entity.Property(e => e.Promlines18Variantref).HasColumnName("PROMLINES18_VARIANTREF");

                entity.Property(e => e.Promlines18Wfstatus).HasColumnName("PROMLINES18_WFSTATUS");

                entity.Property(e => e.Promlines19Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES19_FORMULA");

                entity.Property(e => e.Promlines19Orglogicref).HasColumnName("PROMLINES19_ORGLOGICREF");

                entity.Property(e => e.Promlines19Price).HasColumnName("PROMLINES19_PRICE");

                entity.Property(e => e.Promlines19Recstatus).HasColumnName("PROMLINES19_RECSTATUS");

                entity.Property(e => e.Promlines19Rndval).HasColumnName("PROMLINES19_RNDVAL");

                entity.Property(e => e.Promlines19Siteid).HasColumnName("PROMLINES19_SITEID");

                entity.Property(e => e.Promlines19Stockref).HasColumnName("PROMLINES19_STOCKREF");

                entity.Property(e => e.Promlines19Uomref).HasColumnName("PROMLINES19_UOMREF");

                entity.Property(e => e.Promlines19Variantref).HasColumnName("PROMLINES19_VARIANTREF");

                entity.Property(e => e.Promlines19Wfstatus).HasColumnName("PROMLINES19_WFSTATUS");

                entity.Property(e => e.Promlines1Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES1_FORMULA");

                entity.Property(e => e.Promlines1Orglogicref).HasColumnName("PROMLINES1_ORGLOGICREF");

                entity.Property(e => e.Promlines1Price).HasColumnName("PROMLINES1_PRICE");

                entity.Property(e => e.Promlines1Recstatus).HasColumnName("PROMLINES1_RECSTATUS");

                entity.Property(e => e.Promlines1Rndval).HasColumnName("PROMLINES1_RNDVAL");

                entity.Property(e => e.Promlines1Siteid).HasColumnName("PROMLINES1_SITEID");

                entity.Property(e => e.Promlines1Stockref).HasColumnName("PROMLINES1_STOCKREF");

                entity.Property(e => e.Promlines1Uomref).HasColumnName("PROMLINES1_UOMREF");

                entity.Property(e => e.Promlines1Variantref).HasColumnName("PROMLINES1_VARIANTREF");

                entity.Property(e => e.Promlines1Wfstatus).HasColumnName("PROMLINES1_WFSTATUS");

                entity.Property(e => e.Promlines20Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES20_FORMULA");

                entity.Property(e => e.Promlines20Orglogicref).HasColumnName("PROMLINES20_ORGLOGICREF");

                entity.Property(e => e.Promlines20Price).HasColumnName("PROMLINES20_PRICE");

                entity.Property(e => e.Promlines20Recstatus).HasColumnName("PROMLINES20_RECSTATUS");

                entity.Property(e => e.Promlines20Rndval).HasColumnName("PROMLINES20_RNDVAL");

                entity.Property(e => e.Promlines20Siteid).HasColumnName("PROMLINES20_SITEID");

                entity.Property(e => e.Promlines20Stockref).HasColumnName("PROMLINES20_STOCKREF");

                entity.Property(e => e.Promlines20Uomref).HasColumnName("PROMLINES20_UOMREF");

                entity.Property(e => e.Promlines20Variantref).HasColumnName("PROMLINES20_VARIANTREF");

                entity.Property(e => e.Promlines20Wfstatus).HasColumnName("PROMLINES20_WFSTATUS");

                entity.Property(e => e.Promlines21Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES21_FORMULA");

                entity.Property(e => e.Promlines21Orglogicref).HasColumnName("PROMLINES21_ORGLOGICREF");

                entity.Property(e => e.Promlines21Price).HasColumnName("PROMLINES21_PRICE");

                entity.Property(e => e.Promlines21Recstatus).HasColumnName("PROMLINES21_RECSTATUS");

                entity.Property(e => e.Promlines21Rndval).HasColumnName("PROMLINES21_RNDVAL");

                entity.Property(e => e.Promlines21Siteid).HasColumnName("PROMLINES21_SITEID");

                entity.Property(e => e.Promlines21Stockref).HasColumnName("PROMLINES21_STOCKREF");

                entity.Property(e => e.Promlines21Uomref).HasColumnName("PROMLINES21_UOMREF");

                entity.Property(e => e.Promlines21Variantref).HasColumnName("PROMLINES21_VARIANTREF");

                entity.Property(e => e.Promlines21Wfstatus).HasColumnName("PROMLINES21_WFSTATUS");

                entity.Property(e => e.Promlines22Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES22_FORMULA");

                entity.Property(e => e.Promlines22Orglogicref).HasColumnName("PROMLINES22_ORGLOGICREF");

                entity.Property(e => e.Promlines22Price).HasColumnName("PROMLINES22_PRICE");

                entity.Property(e => e.Promlines22Recstatus).HasColumnName("PROMLINES22_RECSTATUS");

                entity.Property(e => e.Promlines22Rndval).HasColumnName("PROMLINES22_RNDVAL");

                entity.Property(e => e.Promlines22Siteid).HasColumnName("PROMLINES22_SITEID");

                entity.Property(e => e.Promlines22Stockref).HasColumnName("PROMLINES22_STOCKREF");

                entity.Property(e => e.Promlines22Uomref).HasColumnName("PROMLINES22_UOMREF");

                entity.Property(e => e.Promlines22Variantref).HasColumnName("PROMLINES22_VARIANTREF");

                entity.Property(e => e.Promlines22Wfstatus).HasColumnName("PROMLINES22_WFSTATUS");

                entity.Property(e => e.Promlines23Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES23_FORMULA");

                entity.Property(e => e.Promlines23Orglogicref).HasColumnName("PROMLINES23_ORGLOGICREF");

                entity.Property(e => e.Promlines23Price).HasColumnName("PROMLINES23_PRICE");

                entity.Property(e => e.Promlines23Recstatus).HasColumnName("PROMLINES23_RECSTATUS");

                entity.Property(e => e.Promlines23Rndval).HasColumnName("PROMLINES23_RNDVAL");

                entity.Property(e => e.Promlines23Siteid).HasColumnName("PROMLINES23_SITEID");

                entity.Property(e => e.Promlines23Stockref).HasColumnName("PROMLINES23_STOCKREF");

                entity.Property(e => e.Promlines23Uomref).HasColumnName("PROMLINES23_UOMREF");

                entity.Property(e => e.Promlines23Variantref).HasColumnName("PROMLINES23_VARIANTREF");

                entity.Property(e => e.Promlines23Wfstatus).HasColumnName("PROMLINES23_WFSTATUS");

                entity.Property(e => e.Promlines24Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES24_FORMULA");

                entity.Property(e => e.Promlines24Orglogicref).HasColumnName("PROMLINES24_ORGLOGICREF");

                entity.Property(e => e.Promlines24Price).HasColumnName("PROMLINES24_PRICE");

                entity.Property(e => e.Promlines24Recstatus).HasColumnName("PROMLINES24_RECSTATUS");

                entity.Property(e => e.Promlines24Rndval).HasColumnName("PROMLINES24_RNDVAL");

                entity.Property(e => e.Promlines24Siteid).HasColumnName("PROMLINES24_SITEID");

                entity.Property(e => e.Promlines24Stockref).HasColumnName("PROMLINES24_STOCKREF");

                entity.Property(e => e.Promlines24Uomref).HasColumnName("PROMLINES24_UOMREF");

                entity.Property(e => e.Promlines24Variantref).HasColumnName("PROMLINES24_VARIANTREF");

                entity.Property(e => e.Promlines24Wfstatus).HasColumnName("PROMLINES24_WFSTATUS");

                entity.Property(e => e.Promlines25Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES25_FORMULA");

                entity.Property(e => e.Promlines25Orglogicref).HasColumnName("PROMLINES25_ORGLOGICREF");

                entity.Property(e => e.Promlines25Price).HasColumnName("PROMLINES25_PRICE");

                entity.Property(e => e.Promlines25Recstatus).HasColumnName("PROMLINES25_RECSTATUS");

                entity.Property(e => e.Promlines25Rndval).HasColumnName("PROMLINES25_RNDVAL");

                entity.Property(e => e.Promlines25Siteid).HasColumnName("PROMLINES25_SITEID");

                entity.Property(e => e.Promlines25Stockref).HasColumnName("PROMLINES25_STOCKREF");

                entity.Property(e => e.Promlines25Uomref).HasColumnName("PROMLINES25_UOMREF");

                entity.Property(e => e.Promlines25Variantref).HasColumnName("PROMLINES25_VARIANTREF");

                entity.Property(e => e.Promlines25Wfstatus).HasColumnName("PROMLINES25_WFSTATUS");

                entity.Property(e => e.Promlines26Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES26_FORMULA");

                entity.Property(e => e.Promlines26Orglogicref).HasColumnName("PROMLINES26_ORGLOGICREF");

                entity.Property(e => e.Promlines26Price).HasColumnName("PROMLINES26_PRICE");

                entity.Property(e => e.Promlines26Recstatus).HasColumnName("PROMLINES26_RECSTATUS");

                entity.Property(e => e.Promlines26Rndval).HasColumnName("PROMLINES26_RNDVAL");

                entity.Property(e => e.Promlines26Siteid).HasColumnName("PROMLINES26_SITEID");

                entity.Property(e => e.Promlines26Stockref).HasColumnName("PROMLINES26_STOCKREF");

                entity.Property(e => e.Promlines26Uomref).HasColumnName("PROMLINES26_UOMREF");

                entity.Property(e => e.Promlines26Variantref).HasColumnName("PROMLINES26_VARIANTREF");

                entity.Property(e => e.Promlines26Wfstatus).HasColumnName("PROMLINES26_WFSTATUS");

                entity.Property(e => e.Promlines27Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES27_FORMULA");

                entity.Property(e => e.Promlines27Orglogicref).HasColumnName("PROMLINES27_ORGLOGICREF");

                entity.Property(e => e.Promlines27Price).HasColumnName("PROMLINES27_PRICE");

                entity.Property(e => e.Promlines27Recstatus).HasColumnName("PROMLINES27_RECSTATUS");

                entity.Property(e => e.Promlines27Rndval).HasColumnName("PROMLINES27_RNDVAL");

                entity.Property(e => e.Promlines27Siteid).HasColumnName("PROMLINES27_SITEID");

                entity.Property(e => e.Promlines27Stockref).HasColumnName("PROMLINES27_STOCKREF");

                entity.Property(e => e.Promlines27Uomref).HasColumnName("PROMLINES27_UOMREF");

                entity.Property(e => e.Promlines27Variantref).HasColumnName("PROMLINES27_VARIANTREF");

                entity.Property(e => e.Promlines27Wfstatus).HasColumnName("PROMLINES27_WFSTATUS");

                entity.Property(e => e.Promlines28Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES28_FORMULA");

                entity.Property(e => e.Promlines28Orglogicref).HasColumnName("PROMLINES28_ORGLOGICREF");

                entity.Property(e => e.Promlines28Price).HasColumnName("PROMLINES28_PRICE");

                entity.Property(e => e.Promlines28Recstatus).HasColumnName("PROMLINES28_RECSTATUS");

                entity.Property(e => e.Promlines28Rndval).HasColumnName("PROMLINES28_RNDVAL");

                entity.Property(e => e.Promlines28Siteid).HasColumnName("PROMLINES28_SITEID");

                entity.Property(e => e.Promlines28Stockref).HasColumnName("PROMLINES28_STOCKREF");

                entity.Property(e => e.Promlines28Uomref).HasColumnName("PROMLINES28_UOMREF");

                entity.Property(e => e.Promlines28Variantref).HasColumnName("PROMLINES28_VARIANTREF");

                entity.Property(e => e.Promlines28Wfstatus).HasColumnName("PROMLINES28_WFSTATUS");

                entity.Property(e => e.Promlines29Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES29_FORMULA");

                entity.Property(e => e.Promlines29Orglogicref).HasColumnName("PROMLINES29_ORGLOGICREF");

                entity.Property(e => e.Promlines29Price).HasColumnName("PROMLINES29_PRICE");

                entity.Property(e => e.Promlines29Recstatus).HasColumnName("PROMLINES29_RECSTATUS");

                entity.Property(e => e.Promlines29Rndval).HasColumnName("PROMLINES29_RNDVAL");

                entity.Property(e => e.Promlines29Siteid).HasColumnName("PROMLINES29_SITEID");

                entity.Property(e => e.Promlines29Stockref).HasColumnName("PROMLINES29_STOCKREF");

                entity.Property(e => e.Promlines29Uomref).HasColumnName("PROMLINES29_UOMREF");

                entity.Property(e => e.Promlines29Variantref).HasColumnName("PROMLINES29_VARIANTREF");

                entity.Property(e => e.Promlines29Wfstatus).HasColumnName("PROMLINES29_WFSTATUS");

                entity.Property(e => e.Promlines2Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES2_FORMULA");

                entity.Property(e => e.Promlines2Orglogicref).HasColumnName("PROMLINES2_ORGLOGICREF");

                entity.Property(e => e.Promlines2Price).HasColumnName("PROMLINES2_PRICE");

                entity.Property(e => e.Promlines2Recstatus).HasColumnName("PROMLINES2_RECSTATUS");

                entity.Property(e => e.Promlines2Rndval).HasColumnName("PROMLINES2_RNDVAL");

                entity.Property(e => e.Promlines2Siteid).HasColumnName("PROMLINES2_SITEID");

                entity.Property(e => e.Promlines2Stockref).HasColumnName("PROMLINES2_STOCKREF");

                entity.Property(e => e.Promlines2Uomref).HasColumnName("PROMLINES2_UOMREF");

                entity.Property(e => e.Promlines2Variantref).HasColumnName("PROMLINES2_VARIANTREF");

                entity.Property(e => e.Promlines2Wfstatus).HasColumnName("PROMLINES2_WFSTATUS");

                entity.Property(e => e.Promlines30Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES30_FORMULA");

                entity.Property(e => e.Promlines30Orglogicref).HasColumnName("PROMLINES30_ORGLOGICREF");

                entity.Property(e => e.Promlines30Price).HasColumnName("PROMLINES30_PRICE");

                entity.Property(e => e.Promlines30Recstatus).HasColumnName("PROMLINES30_RECSTATUS");

                entity.Property(e => e.Promlines30Rndval).HasColumnName("PROMLINES30_RNDVAL");

                entity.Property(e => e.Promlines30Siteid).HasColumnName("PROMLINES30_SITEID");

                entity.Property(e => e.Promlines30Stockref).HasColumnName("PROMLINES30_STOCKREF");

                entity.Property(e => e.Promlines30Uomref).HasColumnName("PROMLINES30_UOMREF");

                entity.Property(e => e.Promlines30Variantref).HasColumnName("PROMLINES30_VARIANTREF");

                entity.Property(e => e.Promlines30Wfstatus).HasColumnName("PROMLINES30_WFSTATUS");

                entity.Property(e => e.Promlines3Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES3_FORMULA");

                entity.Property(e => e.Promlines3Orglogicref).HasColumnName("PROMLINES3_ORGLOGICREF");

                entity.Property(e => e.Promlines3Price).HasColumnName("PROMLINES3_PRICE");

                entity.Property(e => e.Promlines3Recstatus).HasColumnName("PROMLINES3_RECSTATUS");

                entity.Property(e => e.Promlines3Rndval).HasColumnName("PROMLINES3_RNDVAL");

                entity.Property(e => e.Promlines3Siteid).HasColumnName("PROMLINES3_SITEID");

                entity.Property(e => e.Promlines3Stockref).HasColumnName("PROMLINES3_STOCKREF");

                entity.Property(e => e.Promlines3Uomref).HasColumnName("PROMLINES3_UOMREF");

                entity.Property(e => e.Promlines3Variantref).HasColumnName("PROMLINES3_VARIANTREF");

                entity.Property(e => e.Promlines3Wfstatus).HasColumnName("PROMLINES3_WFSTATUS");

                entity.Property(e => e.Promlines4Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES4_FORMULA");

                entity.Property(e => e.Promlines4Orglogicref).HasColumnName("PROMLINES4_ORGLOGICREF");

                entity.Property(e => e.Promlines4Price).HasColumnName("PROMLINES4_PRICE");

                entity.Property(e => e.Promlines4Recstatus).HasColumnName("PROMLINES4_RECSTATUS");

                entity.Property(e => e.Promlines4Rndval).HasColumnName("PROMLINES4_RNDVAL");

                entity.Property(e => e.Promlines4Siteid).HasColumnName("PROMLINES4_SITEID");

                entity.Property(e => e.Promlines4Stockref).HasColumnName("PROMLINES4_STOCKREF");

                entity.Property(e => e.Promlines4Uomref).HasColumnName("PROMLINES4_UOMREF");

                entity.Property(e => e.Promlines4Variantref).HasColumnName("PROMLINES4_VARIANTREF");

                entity.Property(e => e.Promlines4Wfstatus).HasColumnName("PROMLINES4_WFSTATUS");

                entity.Property(e => e.Promlines5Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES5_FORMULA");

                entity.Property(e => e.Promlines5Orglogicref).HasColumnName("PROMLINES5_ORGLOGICREF");

                entity.Property(e => e.Promlines5Price).HasColumnName("PROMLINES5_PRICE");

                entity.Property(e => e.Promlines5Recstatus).HasColumnName("PROMLINES5_RECSTATUS");

                entity.Property(e => e.Promlines5Rndval).HasColumnName("PROMLINES5_RNDVAL");

                entity.Property(e => e.Promlines5Siteid).HasColumnName("PROMLINES5_SITEID");

                entity.Property(e => e.Promlines5Stockref).HasColumnName("PROMLINES5_STOCKREF");

                entity.Property(e => e.Promlines5Uomref).HasColumnName("PROMLINES5_UOMREF");

                entity.Property(e => e.Promlines5Variantref).HasColumnName("PROMLINES5_VARIANTREF");

                entity.Property(e => e.Promlines5Wfstatus).HasColumnName("PROMLINES5_WFSTATUS");

                entity.Property(e => e.Promlines6Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES6_FORMULA");

                entity.Property(e => e.Promlines6Orglogicref).HasColumnName("PROMLINES6_ORGLOGICREF");

                entity.Property(e => e.Promlines6Price).HasColumnName("PROMLINES6_PRICE");

                entity.Property(e => e.Promlines6Recstatus).HasColumnName("PROMLINES6_RECSTATUS");

                entity.Property(e => e.Promlines6Rndval).HasColumnName("PROMLINES6_RNDVAL");

                entity.Property(e => e.Promlines6Siteid).HasColumnName("PROMLINES6_SITEID");

                entity.Property(e => e.Promlines6Stockref).HasColumnName("PROMLINES6_STOCKREF");

                entity.Property(e => e.Promlines6Uomref).HasColumnName("PROMLINES6_UOMREF");

                entity.Property(e => e.Promlines6Variantref).HasColumnName("PROMLINES6_VARIANTREF");

                entity.Property(e => e.Promlines6Wfstatus).HasColumnName("PROMLINES6_WFSTATUS");

                entity.Property(e => e.Promlines7Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES7_FORMULA");

                entity.Property(e => e.Promlines7Orglogicref).HasColumnName("PROMLINES7_ORGLOGICREF");

                entity.Property(e => e.Promlines7Price).HasColumnName("PROMLINES7_PRICE");

                entity.Property(e => e.Promlines7Recstatus).HasColumnName("PROMLINES7_RECSTATUS");

                entity.Property(e => e.Promlines7Rndval).HasColumnName("PROMLINES7_RNDVAL");

                entity.Property(e => e.Promlines7Siteid).HasColumnName("PROMLINES7_SITEID");

                entity.Property(e => e.Promlines7Stockref).HasColumnName("PROMLINES7_STOCKREF");

                entity.Property(e => e.Promlines7Uomref).HasColumnName("PROMLINES7_UOMREF");

                entity.Property(e => e.Promlines7Variantref).HasColumnName("PROMLINES7_VARIANTREF");

                entity.Property(e => e.Promlines7Wfstatus).HasColumnName("PROMLINES7_WFSTATUS");

                entity.Property(e => e.Promlines8Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES8_FORMULA");

                entity.Property(e => e.Promlines8Orglogicref).HasColumnName("PROMLINES8_ORGLOGICREF");

                entity.Property(e => e.Promlines8Price).HasColumnName("PROMLINES8_PRICE");

                entity.Property(e => e.Promlines8Recstatus).HasColumnName("PROMLINES8_RECSTATUS");

                entity.Property(e => e.Promlines8Rndval).HasColumnName("PROMLINES8_RNDVAL");

                entity.Property(e => e.Promlines8Siteid).HasColumnName("PROMLINES8_SITEID");

                entity.Property(e => e.Promlines8Stockref).HasColumnName("PROMLINES8_STOCKREF");

                entity.Property(e => e.Promlines8Uomref).HasColumnName("PROMLINES8_UOMREF");

                entity.Property(e => e.Promlines8Variantref).HasColumnName("PROMLINES8_VARIANTREF");

                entity.Property(e => e.Promlines8Wfstatus).HasColumnName("PROMLINES8_WFSTATUS");

                entity.Property(e => e.Promlines9Formula)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PROMLINES9_FORMULA");

                entity.Property(e => e.Promlines9Orglogicref).HasColumnName("PROMLINES9_ORGLOGICREF");

                entity.Property(e => e.Promlines9Price).HasColumnName("PROMLINES9_PRICE");

                entity.Property(e => e.Promlines9Recstatus).HasColumnName("PROMLINES9_RECSTATUS");

                entity.Property(e => e.Promlines9Rndval).HasColumnName("PROMLINES9_RNDVAL");

                entity.Property(e => e.Promlines9Siteid).HasColumnName("PROMLINES9_SITEID");

                entity.Property(e => e.Promlines9Stockref).HasColumnName("PROMLINES9_STOCKREF");

                entity.Property(e => e.Promlines9Uomref).HasColumnName("PROMLINES9_UOMREF");

                entity.Property(e => e.Promlines9Variantref).HasColumnName("PROMLINES9_VARIANTREF");

                entity.Property(e => e.Promlines9Wfstatus).HasColumnName("PROMLINES9_WFSTATUS");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Prclist>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PRCLIST_I1");

                entity.ToTable("LG_001_PRCLIST");

                entity.HasIndex(e => new { e.Ptype, e.Active, e.Definition }, "I001_PRCLIST_I10");

                entity.HasIndex(e => new { e.Ptype, e.Definition }, "I001_PRCLIST_I11");

                entity.HasIndex(e => new { e.Cardref, e.Begdate, e.Enddate }, "I001_PRCLIST_I12");

                entity.HasIndex(e => new { e.Begdate, e.Enddate }, "I001_PRCLIST_I13");

                entity.HasIndex(e => e.Globalid, "I001_PRCLIST_I14");

                entity.HasIndex(e => new { e.Ptype, e.Cardref, e.Mtrltype, e.Clientcode }, "I001_PRCLIST_I2");

                entity.HasIndex(e => new { e.Ptype, e.Mtrltype, e.Active, e.Cardref }, "I001_PRCLIST_I3");

                entity.HasIndex(e => new { e.Ptype, e.Active, e.Cardref, e.Begdate, e.Enddate }, "I001_PRCLIST_I4");

                entity.HasIndex(e => e.Uomref, "I001_PRCLIST_I5");

                entity.HasIndex(e => new { e.Ptype, e.Mtrltype, e.Cardref, e.Specialized }, "I001_PRCLIST_I6");

                entity.HasIndex(e => new { e.Ptype, e.Active, e.Code }, "I001_PRCLIST_I7")
                    .IsUnique();

                entity.HasIndex(e => new { e.Ptype, e.Code }, "I001_PRCLIST_I8");

                entity.HasIndex(e => new { e.Cardref, e.Active }, "I001_PRCLIST_I9");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Begtime).HasColumnName("BEGTIME");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Clcyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLCYPHCODE");

                entity.Property(e => e.Clientcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTCODE");

                entity.Property(e => e.Clspecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLSPECODE");

                entity.Property(e => e.Clspecode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLSPECODE2");

                entity.Property(e => e.Clspecode3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLSPECODE3");

                entity.Property(e => e.Clspecode4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLSPECODE4");

                entity.Property(e => e.Clspecode5)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLSPECODE5");

                entity.Property(e => e.Cltradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLTRADINGGRP");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Condition)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("CONDITION");

                entity.Property(e => e.Costval).HasColumnName("COSTVAL");

                entity.Property(e => e.Currency).HasColumnName("CURRENCY");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Endtime).HasColumnName("ENDTIME");

                entity.Property(e => e.Extaccessflags).HasColumnName("EXTACCESSFLAGS");

                entity.Property(e => e.Geniuspaytype)
                    .HasMaxLength(3)
                    .IsUnicode(false)
                    .HasColumnName("GENIUSPAYTYPE");

                entity.Property(e => e.Geniusshpnr).HasColumnName("GENIUSSHPNR");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Grpcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("GRPCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Incvat).HasColumnName("INCVAT");

                entity.Property(e => e.Leadtime).HasColumnName("LEADTIME");

                entity.Property(e => e.Markref).HasColumnName("MARKREF");

                entity.Property(e => e.Mtrltype).HasColumnName("MTRLTYPE");

                entity.Property(e => e.Notifycrdref).HasColumnName("NOTIFYCRDREF");

                entity.Property(e => e.Ordernr).HasColumnName("ORDERNR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Payplanref).HasColumnName("PAYPLANREF");

                entity.Property(e => e.Prcalterlmt1).HasColumnName("PRCALTERLMT1");

                entity.Property(e => e.Prcalterlmt2).HasColumnName("PRCALTERLMT2");

                entity.Property(e => e.Prcalterlmt3).HasColumnName("PRCALTERLMT3");

                entity.Property(e => e.Prcaltertyp1).HasColumnName("PRCALTERTYP1");

                entity.Property(e => e.Prcaltertyp2).HasColumnName("PRCALTERTYP2");

                entity.Property(e => e.Prcaltertyp3).HasColumnName("PRCALTERTYP3");

                entity.Property(e => e.Price).HasColumnName("PRICE");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Ptype).HasColumnName("PTYPE");

                entity.Property(e => e.Purchcontref).HasColumnName("PURCHCONTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Shiptyp)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SHIPTYP");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specialized).HasColumnName("SPECIALIZED");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Trspecode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRSPECODE");

                entity.Property(e => e.Unitconvert).HasColumnName("UNITCONVERT");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Variantcode)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VARIANTCODE");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Prclstdiv>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PRCLSTDIV_I1");

                entity.ToTable("LG_001_PRCLSTDIV");

                entity.HasIndex(e => e.Parentprcref, "I001_PRCLSTDIV_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Divcodes)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("DIVCODES");

                entity.Property(e => e.Parentprcref).HasColumnName("PARENTPRCREF");
            });

            modelBuilder.Entity<Lg001Prevdispline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PREVDISPLINE_I1");

                entity.ToTable("LG_001_PREVDISPLINE");

                entity.HasIndex(e => new { e.Displineref, e.Prevlineref }, "I001_PREVDISPLINE_I2");

                entity.HasIndex(e => new { e.Displineref, e.Linenr }, "I001_PREVDISPLINE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Displineref).HasColumnName("DISPLINEREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Overlapamnt).HasColumnName("OVERLAPAMNT");

                entity.Property(e => e.Overlapmethod).HasColumnName("OVERLAPMETHOD");

                entity.Property(e => e.Overlapper).HasColumnName("OVERLAPPER");

                entity.Property(e => e.Overlaptype).HasColumnName("OVERLAPTYPE");

                entity.Property(e => e.Prevlineref).HasColumnName("PREVLINEREF");

                entity.Property(e => e.Prodordref).HasColumnName("PRODORDREF");
            });

            modelBuilder.Entity<Lg001Printlimit>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PRINTLIMITS_I1");

                entity.ToTable("LG_001_PRINTLIMITS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Formid).HasColumnName("FORMID");

                entity.Property(e => e.Prnlimit).HasColumnName("PRNLIMIT");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<Lg001Prodord>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PRODORD_I1");

                entity.ToTable("LG_001_PRODORD");

                entity.HasIndex(e => new { e.Ficheno, e.Fichetype }, "I001_PRODORD_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Date, e.Ficheno, e.Fichetype }, "I001_PRODORD_I3")
                    .IsUnique();

                entity.HasIndex(e => e.Released, "I001_PRODORD_I4");

                entity.HasIndex(e => e.Itemref, "I001_PRODORD_I5");

                entity.HasIndex(e => e.Revref, "I001_PRODORD_I6");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Actaccounted).HasColumnName("ACTACCOUNTED");

                entity.Property(e => e.Actamount).HasColumnName("ACTAMOUNT");

                entity.Property(e => e.Actbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTBEGDATE");

                entity.Property(e => e.Actbegtime).HasColumnName("ACTBEGTIME");

                entity.Property(e => e.Actcostcalculated).HasColumnName("ACTCOSTCALCULATED");

                entity.Property(e => e.Actduration).HasColumnName("ACTDURATION");

                entity.Property(e => e.Actenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTENDDATE");

                entity.Property(e => e.Actendtime).HasColumnName("ACTENDTIME");

                entity.Property(e => e.Actequiptcost).HasColumnName("ACTEQUIPTCOST");

                entity.Property(e => e.Actequiptrpcost).HasColumnName("ACTEQUIPTRPCOST");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Actlaborcost).HasColumnName("ACTLABORCOST");

                entity.Property(e => e.Actlaborrpcost).HasColumnName("ACTLABORRPCOST");

                entity.Property(e => e.Actmaterialcost).HasColumnName("ACTMATERIALCOST");

                entity.Property(e => e.Actmaterialrpcost).HasColumnName("ACTMATERIALRPCOST");

                entity.Property(e => e.Actoverhcost).HasColumnName("ACTOVERHCOST");

                entity.Property(e => e.Actoverhcostg1).HasColumnName("ACTOVERHCOSTG1");

                entity.Property(e => e.Actoverhcostg10).HasColumnName("ACTOVERHCOSTG10");

                entity.Property(e => e.Actoverhcostg2).HasColumnName("ACTOVERHCOSTG2");

                entity.Property(e => e.Actoverhcostg3).HasColumnName("ACTOVERHCOSTG3");

                entity.Property(e => e.Actoverhcostg4).HasColumnName("ACTOVERHCOSTG4");

                entity.Property(e => e.Actoverhcostg5).HasColumnName("ACTOVERHCOSTG5");

                entity.Property(e => e.Actoverhcostg6).HasColumnName("ACTOVERHCOSTG6");

                entity.Property(e => e.Actoverhcostg7).HasColumnName("ACTOVERHCOSTG7");

                entity.Property(e => e.Actoverhcostg8).HasColumnName("ACTOVERHCOSTG8");

                entity.Property(e => e.Actoverhcostg9).HasColumnName("ACTOVERHCOSTG9");

                entity.Property(e => e.Actoverhrpcost).HasColumnName("ACTOVERHRPCOST");

                entity.Property(e => e.Actoverhrpcostg1).HasColumnName("ACTOVERHRPCOSTG1");

                entity.Property(e => e.Actoverhrpcostg10).HasColumnName("ACTOVERHRPCOSTG10");

                entity.Property(e => e.Actoverhrpcostg2).HasColumnName("ACTOVERHRPCOSTG2");

                entity.Property(e => e.Actoverhrpcostg3).HasColumnName("ACTOVERHRPCOSTG3");

                entity.Property(e => e.Actoverhrpcostg4).HasColumnName("ACTOVERHRPCOSTG4");

                entity.Property(e => e.Actoverhrpcostg5).HasColumnName("ACTOVERHRPCOSTG5");

                entity.Property(e => e.Actoverhrpcostg6).HasColumnName("ACTOVERHRPCOSTG6");

                entity.Property(e => e.Actoverhrpcostg7).HasColumnName("ACTOVERHRPCOSTG7");

                entity.Property(e => e.Actoverhrpcostg8).HasColumnName("ACTOVERHRPCOSTG8");

                entity.Property(e => e.Actoverhrpcostg9).HasColumnName("ACTOVERHRPCOSTG9");

                entity.Property(e => e.Acttotalcost).HasColumnName("ACTTOTALCOST");

                entity.Property(e => e.Acttotalrpcost).HasColumnName("ACTTOTALRPCOST");

                entity.Property(e => e.Actwscost).HasColumnName("ACTWSCOST");

                entity.Property(e => e.Actwsrpcost).HasColumnName("ACTWSRPCOST");

                entity.Property(e => e.Advicews).HasColumnName("ADVICEWS");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Automtrissue).HasColumnName("AUTOMTRISSUE");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Begtime).HasColumnName("BEGTIME");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Chkrescap).HasColumnName("CHKRESCAP");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Createwhfiche).HasColumnName("CREATEWHFICHE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Diffwhouseuse).HasColumnName("DIFFWHOUSEUSE");

                entity.Property(e => e.Doplnreserve).HasColumnName("DOPLNRESERVE");

                entity.Property(e => e.Doslplnreserve).HasColumnName("DOSLPLNRESERVE");

                entity.Property(e => e.Duedate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUEDATE");

                entity.Property(e => e.Duetime).HasColumnName("DUETIME");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Endtime).HasColumnName("ENDTIME");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Fichetype).HasColumnName("FICHETYPE");

                entity.Property(e => e.Genexp1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP1");

                entity.Property(e => e.Genexp2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP2");

                entity.Property(e => e.Genexp3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP3");

                entity.Property(e => e.Genexp4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP4");

                entity.Property(e => e.Genexp5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP5");

                entity.Property(e => e.Genexp6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP6");

                entity.Property(e => e.Grossuinfo1).HasColumnName("GROSSUINFO1");

                entity.Property(e => e.Grossuinfo2).HasColumnName("GROSSUINFO2");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Hasparallelwsload).HasColumnName("HASPARALLELWSLOAD");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Masterref).HasColumnName("MASTERREF");

                entity.Property(e => e.Method).HasColumnName("METHOD");

                entity.Property(e => e.Needprocure).HasColumnName("NEEDPROCURE");

                entity.Property(e => e.Needrelease).HasColumnName("NEEDRELEASE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Partialdel).HasColumnName("PARTIALDEL");

                entity.Property(e => e.Plnamount).HasColumnName("PLNAMOUNT");

                entity.Property(e => e.Plnbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PLNBEGDATE");

                entity.Property(e => e.Plnbegtime).HasColumnName("PLNBEGTIME");

                entity.Property(e => e.Plnduration).HasColumnName("PLNDURATION");

                entity.Property(e => e.Plnenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("PLNENDDATE");

                entity.Property(e => e.Plnendtime).HasColumnName("PLNENDTIME");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Procured).HasColumnName("PROCURED");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Released).HasColumnName("RELEASED");

                entity.Property(e => e.Revref).HasColumnName("REVREF");

                entity.Property(e => e.Rework).HasColumnName("REWORK");

                entity.Property(e => e.Rollupequiptcost).HasColumnName("ROLLUPEQUIPTCOST");

                entity.Property(e => e.Rollupequiptrpcost).HasColumnName("ROLLUPEQUIPTRPCOST");

                entity.Property(e => e.Rolluplaborcost).HasColumnName("ROLLUPLABORCOST");

                entity.Property(e => e.Rolluplaborrpcost).HasColumnName("ROLLUPLABORRPCOST");

                entity.Property(e => e.Rollupmaterialcost).HasColumnName("ROLLUPMATERIALCOST");

                entity.Property(e => e.Rollupmaterialrpcost).HasColumnName("ROLLUPMATERIALRPCOST");

                entity.Property(e => e.Rollupoverhcost).HasColumnName("ROLLUPOVERHCOST");

                entity.Property(e => e.Rollupoverhcostg1).HasColumnName("ROLLUPOVERHCOSTG1");

                entity.Property(e => e.Rollupoverhcostg10).HasColumnName("ROLLUPOVERHCOSTG10");

                entity.Property(e => e.Rollupoverhcostg2).HasColumnName("ROLLUPOVERHCOSTG2");

                entity.Property(e => e.Rollupoverhcostg3).HasColumnName("ROLLUPOVERHCOSTG3");

                entity.Property(e => e.Rollupoverhcostg4).HasColumnName("ROLLUPOVERHCOSTG4");

                entity.Property(e => e.Rollupoverhcostg5).HasColumnName("ROLLUPOVERHCOSTG5");

                entity.Property(e => e.Rollupoverhcostg6).HasColumnName("ROLLUPOVERHCOSTG6");

                entity.Property(e => e.Rollupoverhcostg7).HasColumnName("ROLLUPOVERHCOSTG7");

                entity.Property(e => e.Rollupoverhcostg8).HasColumnName("ROLLUPOVERHCOSTG8");

                entity.Property(e => e.Rollupoverhcostg9).HasColumnName("ROLLUPOVERHCOSTG9");

                entity.Property(e => e.Rollupoverhrpcost).HasColumnName("ROLLUPOVERHRPCOST");

                entity.Property(e => e.Rollupoverhrpcostg1).HasColumnName("ROLLUPOVERHRPCOSTG1");

                entity.Property(e => e.Rollupoverhrpcostg10).HasColumnName("ROLLUPOVERHRPCOSTG10");

                entity.Property(e => e.Rollupoverhrpcostg2).HasColumnName("ROLLUPOVERHRPCOSTG2");

                entity.Property(e => e.Rollupoverhrpcostg3).HasColumnName("ROLLUPOVERHRPCOSTG3");

                entity.Property(e => e.Rollupoverhrpcostg4).HasColumnName("ROLLUPOVERHRPCOSTG4");

                entity.Property(e => e.Rollupoverhrpcostg5).HasColumnName("ROLLUPOVERHRPCOSTG5");

                entity.Property(e => e.Rollupoverhrpcostg6).HasColumnName("ROLLUPOVERHRPCOSTG6");

                entity.Property(e => e.Rollupoverhrpcostg7).HasColumnName("ROLLUPOVERHRPCOSTG7");

                entity.Property(e => e.Rollupoverhrpcostg8).HasColumnName("ROLLUPOVERHRPCOSTG8");

                entity.Property(e => e.Rollupoverhrpcostg9).HasColumnName("ROLLUPOVERHRPCOSTG9");

                entity.Property(e => e.Rolluptotalcost).HasColumnName("ROLLUPTOTALCOST");

                entity.Property(e => e.Rolluptotalrpcost).HasColumnName("ROLLUPTOTALRPCOST");

                entity.Property(e => e.Rollupwscost).HasColumnName("ROLLUPWSCOST");

                entity.Property(e => e.Rollupwsrpcost).HasColumnName("ROLLUPWSRPCOST");

                entity.Property(e => e.Routingref).HasColumnName("ROUTINGREF");

                entity.Property(e => e.Scheduled).HasColumnName("SCHEDULED");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Startdate)
                    .HasColumnType("datetime")
                    .HasColumnName("STARTDATE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Stdaccounted).HasColumnName("STDACCOUNTED");

                entity.Property(e => e.Stdequiptcost).HasColumnName("STDEQUIPTCOST");

                entity.Property(e => e.Stdequiptrpcost).HasColumnName("STDEQUIPTRPCOST");

                entity.Property(e => e.Stdlaborcost).HasColumnName("STDLABORCOST");

                entity.Property(e => e.Stdlaborrpcost).HasColumnName("STDLABORRPCOST");

                entity.Property(e => e.Stdmaterialcost).HasColumnName("STDMATERIALCOST");

                entity.Property(e => e.Stdmaterialrpcost).HasColumnName("STDMATERIALRPCOST");

                entity.Property(e => e.Stdoverhcost).HasColumnName("STDOVERHCOST");

                entity.Property(e => e.Stdoverhcostg1).HasColumnName("STDOVERHCOSTG1");

                entity.Property(e => e.Stdoverhcostg10).HasColumnName("STDOVERHCOSTG10");

                entity.Property(e => e.Stdoverhcostg2).HasColumnName("STDOVERHCOSTG2");

                entity.Property(e => e.Stdoverhcostg3).HasColumnName("STDOVERHCOSTG3");

                entity.Property(e => e.Stdoverhcostg4).HasColumnName("STDOVERHCOSTG4");

                entity.Property(e => e.Stdoverhcostg5).HasColumnName("STDOVERHCOSTG5");

                entity.Property(e => e.Stdoverhcostg6).HasColumnName("STDOVERHCOSTG6");

                entity.Property(e => e.Stdoverhcostg7).HasColumnName("STDOVERHCOSTG7");

                entity.Property(e => e.Stdoverhcostg8).HasColumnName("STDOVERHCOSTG8");

                entity.Property(e => e.Stdoverhcostg9).HasColumnName("STDOVERHCOSTG9");

                entity.Property(e => e.Stdoverhrpcost).HasColumnName("STDOVERHRPCOST");

                entity.Property(e => e.Stdoverhrpcostg1).HasColumnName("STDOVERHRPCOSTG1");

                entity.Property(e => e.Stdoverhrpcostg10).HasColumnName("STDOVERHRPCOSTG10");

                entity.Property(e => e.Stdoverhrpcostg2).HasColumnName("STDOVERHRPCOSTG2");

                entity.Property(e => e.Stdoverhrpcostg3).HasColumnName("STDOVERHRPCOSTG3");

                entity.Property(e => e.Stdoverhrpcostg4).HasColumnName("STDOVERHRPCOSTG4");

                entity.Property(e => e.Stdoverhrpcostg5).HasColumnName("STDOVERHRPCOSTG5");

                entity.Property(e => e.Stdoverhrpcostg6).HasColumnName("STDOVERHRPCOSTG6");

                entity.Property(e => e.Stdoverhrpcostg7).HasColumnName("STDOVERHRPCOSTG7");

                entity.Property(e => e.Stdoverhrpcostg8).HasColumnName("STDOVERHRPCOSTG8");

                entity.Property(e => e.Stdoverhrpcostg9).HasColumnName("STDOVERHRPCOSTG9");

                entity.Property(e => e.Stdtotalcost).HasColumnName("STDTOTALCOST");

                entity.Property(e => e.Stdtotalrpcost).HasColumnName("STDTOTALRPCOST");

                entity.Property(e => e.Stdwscost).HasColumnName("STDWSCOST");

                entity.Property(e => e.Stdwsrpcost).HasColumnName("STDWSRPCOST");

                entity.Property(e => e.Stopdate)
                    .HasColumnType("datetime")
                    .HasColumnName("STOPDATE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Ufrsaccounted).HasColumnName("UFRSACCOUNTED");

                entity.Property(e => e.Ufrsequiptcost).HasColumnName("UFRSEQUIPTCOST");

                entity.Property(e => e.Ufrsequiptrpcost).HasColumnName("UFRSEQUIPTRPCOST");

                entity.Property(e => e.Ufrslaborcost).HasColumnName("UFRSLABORCOST");

                entity.Property(e => e.Ufrslaborrpcost).HasColumnName("UFRSLABORRPCOST");

                entity.Property(e => e.Ufrsmaterialcost).HasColumnName("UFRSMATERIALCOST");

                entity.Property(e => e.Ufrsmaterialrpcost).HasColumnName("UFRSMATERIALRPCOST");

                entity.Property(e => e.Ufrsoverhcost).HasColumnName("UFRSOVERHCOST");

                entity.Property(e => e.Ufrsoverhcostg1).HasColumnName("UFRSOVERHCOSTG1");

                entity.Property(e => e.Ufrsoverhcostg10).HasColumnName("UFRSOVERHCOSTG10");

                entity.Property(e => e.Ufrsoverhcostg2).HasColumnName("UFRSOVERHCOSTG2");

                entity.Property(e => e.Ufrsoverhcostg3).HasColumnName("UFRSOVERHCOSTG3");

                entity.Property(e => e.Ufrsoverhcostg4).HasColumnName("UFRSOVERHCOSTG4");

                entity.Property(e => e.Ufrsoverhcostg5).HasColumnName("UFRSOVERHCOSTG5");

                entity.Property(e => e.Ufrsoverhcostg6).HasColumnName("UFRSOVERHCOSTG6");

                entity.Property(e => e.Ufrsoverhcostg7).HasColumnName("UFRSOVERHCOSTG7");

                entity.Property(e => e.Ufrsoverhcostg8).HasColumnName("UFRSOVERHCOSTG8");

                entity.Property(e => e.Ufrsoverhcostg9).HasColumnName("UFRSOVERHCOSTG9");

                entity.Property(e => e.Ufrsoverhrpcost).HasColumnName("UFRSOVERHRPCOST");

                entity.Property(e => e.Ufrsoverhrpcostg1).HasColumnName("UFRSOVERHRPCOSTG1");

                entity.Property(e => e.Ufrsoverhrpcostg10).HasColumnName("UFRSOVERHRPCOSTG10");

                entity.Property(e => e.Ufrsoverhrpcostg2).HasColumnName("UFRSOVERHRPCOSTG2");

                entity.Property(e => e.Ufrsoverhrpcostg3).HasColumnName("UFRSOVERHRPCOSTG3");

                entity.Property(e => e.Ufrsoverhrpcostg4).HasColumnName("UFRSOVERHRPCOSTG4");

                entity.Property(e => e.Ufrsoverhrpcostg5).HasColumnName("UFRSOVERHRPCOSTG5");

                entity.Property(e => e.Ufrsoverhrpcostg6).HasColumnName("UFRSOVERHRPCOSTG6");

                entity.Property(e => e.Ufrsoverhrpcostg7).HasColumnName("UFRSOVERHRPCOSTG7");

                entity.Property(e => e.Ufrsoverhrpcostg8).HasColumnName("UFRSOVERHRPCOSTG8");

                entity.Property(e => e.Ufrsoverhrpcostg9).HasColumnName("UFRSOVERHRPCOSTG9");

                entity.Property(e => e.Ufrstotalcost).HasColumnName("UFRSTOTALCOST");

                entity.Property(e => e.Ufrstotalrpcost).HasColumnName("UFRSTOTALRPCOST");

                entity.Property(e => e.Ufrswscost).HasColumnName("UFRSWSCOST");

                entity.Property(e => e.Ufrswsrpcost).HasColumnName("UFRSWSRPCOST");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Usetref).HasColumnName("USETREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Producerparam>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PRODUCERPARAMS_I1");

                entity.ToTable("LG_001_PRODUCERPARAMS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bagkurper).HasColumnName("BAGKURPER");

                entity.Property(e => e.Borsamaxvalue).HasColumnName("BORSAMAXVALUE");

                entity.Property(e => e.Borsaper).HasColumnName("BORSAPER");

                entity.Property(e => e.Divnr).HasColumnName("DIVNR");

                entity.Property(e => e.Ek1per).HasColumnName("EK1PER");

                entity.Property(e => e.Ek2per).HasColumnName("EK2PER");

                entity.Property(e => e.Ek3per).HasColumnName("EK3PER");

                entity.Property(e => e.Ek4per).HasColumnName("EK4PER");

                entity.Property(e => e.Ek5per).HasColumnName("EK5PER");

                entity.Property(e => e.Komisyonper).HasColumnName("KOMISYONPER");

                entity.Property(e => e.Komkdvper).HasColumnName("KOMKDVPER");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Ssdfper).HasColumnName("SSDFPER");

                entity.Property(e => e.Stopajper1).HasColumnName("STOPAJPER1");

                entity.Property(e => e.Stopajper2).HasColumnName("STOPAJPER2");

                entity.Property(e => e.Stopajper3).HasColumnName("STOPAJPER3");

                entity.Property(e => e.Whnr).HasColumnName("WHNR");
            });

            modelBuilder.Entity<Lg001Productline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PRODUCTLINE_I1");

                entity.ToTable("LG_001_PRODUCTLINE");

                entity.HasIndex(e => e.Code, "I001_PRODUCTLINE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_PRODUCTLINE_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_PRODUCTLINE_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Name }, "I001_PRODUCTLINE_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Dailycapachrs).HasColumnName("DAILYCAPACHRS");

                entity.Property(e => e.Factorydivnr).HasColumnName("FACTORYDIVNR");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Maxcapachrs).HasColumnName("MAXCAPACHRS");

                entity.Property(e => e.Mincapachrs).HasColumnName("MINCAPACHRS");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Project>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PROJECT_I1");

                entity.ToTable("LG_001_PROJECT");

                entity.HasIndex(e => e.Code, "I001_PROJECT_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_PROJECT_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_PROJECT_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Name }, "I001_PROJECT_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Ioctrl).HasColumnName("IOCTRL");

                entity.Property(e => e.Name)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Prjrespon)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("PRJRESPON");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Specode3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE3");

                entity.Property(e => e.Specode4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE4");

                entity.Property(e => e.Specode5)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE5");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Prvopasg>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PRVOPASG_I1");

                entity.ToTable("LG_001_PRVOPASG");

                entity.HasIndex(e => new { e.Routingref, e.Prevopref }, "I001_PRVOPASG_I2");

                entity.HasIndex(e => new { e.Routlineref, e.Prevopref }, "I001_PRVOPASG_I3");

                entity.HasIndex(e => new { e.Prevopref, e.Routlineref }, "I001_PRVOPASG_I4")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Lineopref).HasColumnName("LINEOPREF");

                entity.Property(e => e.Overlapamnt).HasColumnName("OVERLAPAMNT");

                entity.Property(e => e.Overlapmethod).HasColumnName("OVERLAPMETHOD");

                entity.Property(e => e.Overlapper).HasColumnName("OVERLAPPER");

                entity.Property(e => e.Overlaptype).HasColumnName("OVERLAPTYPE");

                entity.Property(e => e.Prevopref).HasColumnName("PREVOPREF");

                entity.Property(e => e.Routingref).HasColumnName("ROUTINGREF");

                entity.Property(e => e.Routlineref).HasColumnName("ROUTLINEREF");
            });

            modelBuilder.Entity<Lg001Purchoffer>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PURCHOFFER_I1");

                entity.ToTable("LG_001_PURCHOFFER");

                entity.HasIndex(e => new { e.Trcode, e.Typ, e.Ficheno }, "I001_PURCHOFFER_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Trcode, e.Typ, e.Date, e.Time }, "I001_PURCHOFFER_I3");

                entity.HasIndex(e => new { e.Clientref, e.Trcode, e.Typ, e.Date, e.Time }, "I001_PURCHOFFER_I4");

                entity.HasIndex(e => new { e.Offerref, e.Revisnr }, "I001_PURCHOFFER_I5");

                entity.HasIndex(e => new { e.Offaltref, e.Revisnr }, "I001_PURCHOFFER_I6");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accepteinvpublic).HasColumnName("ACCEPTEINVPUBLIC");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Actrenting).HasColumnName("ACTRENTING");

                entity.Property(e => e.Adddiscounts).HasColumnName("ADDDISCOUNTS");

                entity.Property(e => e.Adddiscountsvat).HasColumnName("ADDDISCOUNTSVAT");

                entity.Property(e => e.Addexpenses).HasColumnName("ADDEXPENSES");

                entity.Property(e => e.Addexpensesvat).HasColumnName("ADDEXPENSESVAT");

                entity.Property(e => e.Advancepaym).HasColumnName("ADVANCEPAYM");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Altnr).HasColumnName("ALTNR");

                entity.Property(e => e.Approve).HasColumnName("APPROVE");

                entity.Property(e => e.Approvedate)
                    .HasColumnType("datetime")
                    .HasColumnName("APPROVEDATE");

                entity.Property(e => e.Ataxexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTCODE");

                entity.Property(e => e.Ataxexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTREASON");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Campaigncode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CAMPAIGNCODE");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Cantcrededuct).HasColumnName("CANTCREDEDUCT");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Checkamount).HasColumnName("CHECKAMOUNT");

                entity.Property(e => e.Checkprice).HasColumnName("CHECKPRICE");

                entity.Property(e => e.Checktotal).HasColumnName("CHECKTOTAL");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Custordno)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CUSTORDNO");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Deductionpart1).HasColumnName("DEDUCTIONPART1");

                entity.Property(e => e.Deductionpart2).HasColumnName("DEDUCTIONPART2");

                entity.Property(e => e.Defaultfiche).HasColumnName("DEFAULTFICHE");

                entity.Property(e => e.Deliverycode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DELIVERYCODE");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Devir).HasColumnName("DEVIR");

                entity.Property(e => e.Dlvclient).HasColumnName("DLVCLIENT");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Doctrackingnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("DOCTRACKINGNR");

                entity.Property(e => e.Einvoice).HasColumnName("EINVOICE");

                entity.Property(e => e.Einvoicetyp).HasColumnName("EINVOICETYP");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Fcstatusref).HasColumnName("FCSTATUSREF");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Genexctyp).HasColumnName("GENEXCTYP");

                entity.Property(e => e.Genexp1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP1");

                entity.Property(e => e.Genexp2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP2");

                entity.Property(e => e.Genexp3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP3");

                entity.Property(e => e.Genexp4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP4");

                entity.Property(e => e.Genexp5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP5");

                entity.Property(e => e.Genexp6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GENEXP6");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Grosstotal).HasColumnName("GROSSTOTAL");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Insteadofdesp).HasColumnName("INSTEADOFDESP");

                entity.Property(e => e.Lastrevision).HasColumnName("LASTREVISION");

                entity.Property(e => e.Leasingref).HasColumnName("LEASINGREF");

                entity.Property(e => e.Lineexctyp).HasColumnName("LINEEXCTYP");

                entity.Property(e => e.Nettotal).HasColumnName("NETTOTAL");

                entity.Property(e => e.Notifycrdref).HasColumnName("NOTIFYCRDREF");

                entity.Property(e => e.Offaltref).HasColumnName("OFFALTREF");

                entity.Property(e => e.Offerref).HasColumnName("OFFERREF");

                entity.Property(e => e.Onlyonepayline).HasColumnName("ONLYONEPAYLINE");

                entity.Property(e => e.Opstat).HasColumnName("OPSTAT");

                entity.Property(e => e.Orgdate)
                    .HasColumnType("datetime")
                    .HasColumnName("ORGDATE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Paydefref).HasColumnName("PAYDEFREF");

                entity.Property(e => e.Paymenttype).HasColumnName("PAYMENTTYPE");

                entity.Property(e => e.Pofferbegdt)
                    .HasColumnType("datetime")
                    .HasColumnName("POFFERBEGDT");

                entity.Property(e => e.Pofferenddt)
                    .HasColumnType("datetime")
                    .HasColumnName("POFFERENDDT");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Publicbnaccref).HasColumnName("PUBLICBNACCREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Recvref).HasColumnName("RECVREF");

                entity.Property(e => e.Reportnet).HasColumnName("REPORTNET");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Revisnr)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("REVISNR");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Sendcnt).HasColumnName("SENDCNT");

                entity.Property(e => e.Shipinforef).HasColumnName("SHIPINFOREF");

                entity.Property(e => e.Shpagncod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("SHPAGNCOD");

                entity.Property(e => e.Shptypcod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("SHPTYPCOD");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Slsactref).HasColumnName("SLSACTREF");

                entity.Property(e => e.Slscustref).HasColumnName("SLSCUSTREF");

                entity.Property(e => e.Slsopprref).HasColumnName("SLSOPPRREF");

                entity.Property(e => e.Sourcecostgrp).HasColumnName("SOURCECOSTGRP");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Taxfreechx).HasColumnName("TAXFREECHX");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Totaladdtax).HasColumnName("TOTALADDTAX");

                entity.Property(e => e.Totaldiscounted).HasColumnName("TOTALDISCOUNTED");

                entity.Property(e => e.Totaldiscounts).HasColumnName("TOTALDISCOUNTS");

                entity.Property(e => e.Totalexaddtax).HasColumnName("TOTALEXADDTAX");

                entity.Property(e => e.Totalexpenses).HasColumnName("TOTALEXPENSES");

                entity.Property(e => e.Totalexpensesvat).HasColumnName("TOTALEXPENSESVAT");

                entity.Property(e => e.Totalpromotions).HasColumnName("TOTALPROMOTIONS");

                entity.Property(e => e.Totalvat).HasColumnName("TOTALVAT");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Transferwithpay).HasColumnName("TRANSFERWITHPAY");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Updcurr).HasColumnName("UPDCURR");

                entity.Property(e => e.Updtrcurr).HasColumnName("UPDTRCURR");

                entity.Property(e => e.Vatexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTCODE");

                entity.Property(e => e.Vatexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTREASON");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Withpaytrans).HasColumnName("WITHPAYTRANS");
            });

            modelBuilder.Entity<Lg001Purchofferln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_PURCHOFFERLN_I1");

                entity.ToTable("LG_001_PURCHOFFERLN");

                entity.HasIndex(e => new { e.Ordficheref, e.Purchoffnr, e.Lineno }, "I001_PURCHOFFERLN_I2");

                entity.HasIndex(e => new { e.Ordficheref, e.Purchoffnr, e.Prevlineref, e.Prevlineno }, "I001_PURCHOFFERLN_I3");

                entity.HasIndex(e => new { e.Fctyp, e.Ordficheref, e.Purchoffnr, e.Demtransref }, "I001_PURCHOFFERLN_I4");

                entity.HasIndex(e => new { e.Fctyp, e.Ordficheref, e.Purchoffnr, e.Offtransref }, "I001_PURCHOFFERLN_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Addtaxaccref).HasColumnName("ADDTAXACCREF");

                entity.Property(e => e.Addtaxamntisupd).HasColumnName("ADDTAXAMNTISUPD");

                entity.Property(e => e.Addtaxamount).HasColumnName("ADDTAXAMOUNT");

                entity.Property(e => e.Addtaxcenterref).HasColumnName("ADDTAXCENTERREF");

                entity.Property(e => e.Addtaxconvfact).HasColumnName("ADDTAXCONVFACT");

                entity.Property(e => e.Addtaxdiscamount).HasColumnName("ADDTAXDISCAMOUNT");

                entity.Property(e => e.Addtaxrate).HasColumnName("ADDTAXRATE");

                entity.Property(e => e.Addtaxvatmatrah).HasColumnName("ADDTAXVATMATRAH");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Altpromflag).HasColumnName("ALTPROMFLAG");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Ataxexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTCODE");

                entity.Property(e => e.Ataxexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTREASON");

                entity.Property(e => e.Billeditem).HasColumnName("BILLEDITEM");

                entity.Property(e => e.Bomref).HasColumnName("BOMREF");

                entity.Property(e => e.Bomrevref).HasColumnName("BOMREVREF");

                entity.Property(e => e.Bomtype).HasColumnName("BOMTYPE");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Calctype).HasColumnName("CALCTYPE");

                entity.Property(e => e.Campaignrefs1).HasColumnName("CAMPAIGNREFS1");

                entity.Property(e => e.Campaignrefs2).HasColumnName("CAMPAIGNREFS2");

                entity.Property(e => e.Campaignrefs3).HasColumnName("CAMPAIGNREFS3");

                entity.Property(e => e.Campaignrefs4).HasColumnName("CAMPAIGNREFS4");

                entity.Property(e => e.Campaignrefs5).HasColumnName("CAMPAIGNREFS5");

                entity.Property(e => e.Camppaydefref).HasColumnName("CAMPPAYDEFREF");

                entity.Property(e => e.Camppoint).HasColumnName("CAMPPOINT");

                entity.Property(e => e.Camppoints1).HasColumnName("CAMPPOINTS1");

                entity.Property(e => e.Camppoints2).HasColumnName("CAMPPOINTS2");

                entity.Property(e => e.Camppoints3).HasColumnName("CAMPPOINTS3");

                entity.Property(e => e.Camppoints4).HasColumnName("CAMPPOINTS4");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Candeduct).HasColumnName("CANDEDUCT");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Closed).HasColumnName("CLOSED");

                entity.Property(e => e.Cmpglineref).HasColumnName("CMPGLINEREF");

                entity.Property(e => e.Cmpglinerefs1).HasColumnName("CMPGLINEREFS1");

                entity.Property(e => e.Cmpglinerefs2).HasColumnName("CMPGLINEREFS2");

                entity.Property(e => e.Cmpglinerefs3).HasColumnName("CMPGLINEREFS3");

                entity.Property(e => e.Cmpglinerefs4).HasColumnName("CMPGLINEREFS4");

                entity.Property(e => e.Conditionref).HasColumnName("CONDITIONREF");

                entity.Property(e => e.Cpacode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CPACODE");

                entity.Property(e => e.Cpstflag).HasColumnName("CPSTFLAG");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Deductcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DEDUCTCODE");

                entity.Property(e => e.Deductionpart1).HasColumnName("DEDUCTIONPART1");

                entity.Property(e => e.Deductionpart2).HasColumnName("DEDUCTIONPART2");

                entity.Property(e => e.Delvrycode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DELVRYCODE");

                entity.Property(e => e.Demficheref).HasColumnName("DEMFICHEREF");

                entity.Property(e => e.Dempeggedamnt).HasColumnName("DEMPEGGEDAMNT");

                entity.Property(e => e.Demtransref).HasColumnName("DEMTRANSREF");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Detline).HasColumnName("DETLINE");

                entity.Property(e => e.Devir).HasColumnName("DEVIR");

                entity.Property(e => e.Discper).HasColumnName("DISCPER");

                entity.Property(e => e.Distcost).HasColumnName("DISTCOST");

                entity.Property(e => e.Distdisc).HasColumnName("DISTDISC");

                entity.Property(e => e.Distdiscvat).HasColumnName("DISTDISCVAT");

                entity.Property(e => e.Distexp).HasColumnName("DISTEXP");

                entity.Property(e => e.Distexpvat).HasColumnName("DISTEXPVAT");

                entity.Property(e => e.Distprom).HasColumnName("DISTPROM");

                entity.Property(e => e.Distreserved).HasColumnName("DISTRESERVED");

                entity.Property(e => e.Doreserve).HasColumnName("DORESERVE");

                entity.Property(e => e.Dref).HasColumnName("DREF");

                entity.Property(e => e.Duedate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUEDATE");

                entity.Property(e => e.Euvatstatus).HasColumnName("EUVATSTATUS");

                entity.Property(e => e.Exaddtaxamnt).HasColumnName("EXADDTAXAMNT");

                entity.Property(e => e.Exaddtaxconvf).HasColumnName("EXADDTAXCONVF");

                entity.Property(e => e.Exaddtaxrate).HasColumnName("EXADDTAXRATE");

                entity.Property(e => e.Eximamount).HasColumnName("EXIMAMOUNT");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Faregref).HasColumnName("FAREGREF");

                entity.Property(e => e.Fctyp).HasColumnName("FCTYP");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Globtrans).HasColumnName("GLOBTRANS");

                entity.Property(e => e.Grossuinfo1).HasColumnName("GROSSUINFO1");

                entity.Property(e => e.Grossuinfo2).HasColumnName("GROSSUINFO2");

                entity.Property(e => e.Gtipcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("GTIPCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Inuse).HasColumnName("INUSE");

                entity.Property(e => e.Itemasgref).HasColumnName("ITEMASGREF");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenet).HasColumnName("LINENET");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Netdiscamnt).HasColumnName("NETDISCAMNT");

                entity.Property(e => e.Netdiscflag).HasColumnName("NETDISCFLAG");

                entity.Property(e => e.Netdiscperc).HasColumnName("NETDISCPERC");

                entity.Property(e => e.Offerref).HasColumnName("OFFERREF");

                entity.Property(e => e.Offtransref).HasColumnName("OFFTRANSREF");

                entity.Property(e => e.Onvehicle).HasColumnName("ONVEHICLE");

                entity.Property(e => e.Operationref).HasColumnName("OPERATIONREF");

                entity.Property(e => e.Orderedamount).HasColumnName("ORDEREDAMOUNT");

                entity.Property(e => e.Orderparam).HasColumnName("ORDERPARAM");

                entity.Property(e => e.Ordficheref).HasColumnName("ORDFICHEREF");

                entity.Property(e => e.Orgamount).HasColumnName("ORGAMOUNT");

                entity.Property(e => e.Orgduedate)
                    .HasColumnType("datetime")
                    .HasColumnName("ORGDUEDATE");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Orgprice).HasColumnName("ORGPRICE");

                entity.Property(e => e.Parentlnref).HasColumnName("PARENTLNREF");

                entity.Property(e => e.Paydefref).HasColumnName("PAYDEFREF");

                entity.Property(e => e.Pointcampref).HasColumnName("POINTCAMPREF");

                entity.Property(e => e.Pointcamprefs1).HasColumnName("POINTCAMPREFS1");

                entity.Property(e => e.Pointcamprefs2).HasColumnName("POINTCAMPREFS2");

                entity.Property(e => e.Pointcamprefs3).HasColumnName("POINTCAMPREFS3");

                entity.Property(e => e.Pointcamprefs4).HasColumnName("POINTCAMPREFS4");

                entity.Property(e => e.Praccref).HasColumnName("PRACCREF");

                entity.Property(e => e.Prcenterref).HasColumnName("PRCENTERREF");

                entity.Property(e => e.Prclistref).HasColumnName("PRCLISTREF");

                entity.Property(e => e.Prcurr).HasColumnName("PRCURR");

                entity.Property(e => e.Prevlineno).HasColumnName("PREVLINENO");

                entity.Property(e => e.Prevlineref).HasColumnName("PREVLINEREF");

                entity.Property(e => e.Price).HasColumnName("PRICE");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Promclasitemref).HasColumnName("PROMCLASITEMREF");

                entity.Property(e => e.Promref).HasColumnName("PROMREF");

                entity.Property(e => e.Prprice).HasColumnName("PRPRICE");

                entity.Property(e => e.Prrate).HasColumnName("PRRATE");

                entity.Property(e => e.Prvataccref).HasColumnName("PRVATACCREF");

                entity.Property(e => e.Prvatcenref).HasColumnName("PRVATCENREF");

                entity.Property(e => e.Publiccountryref).HasColumnName("PUBLICCOUNTRYREF");

                entity.Property(e => e.Purchoffnr).HasColumnName("PURCHOFFNR");

                entity.Property(e => e.Reasonfornotshp).HasColumnName("REASONFORNOTSHP");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reflvataccref).HasColumnName("REFLVATACCREF");

                entity.Property(e => e.Reflvatothaccref).HasColumnName("REFLVATOTHACCREF");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Reserveamount).HasColumnName("RESERVEAMOUNT");

                entity.Property(e => e.Reservedate)
                    .HasColumnType("datetime")
                    .HasColumnName("RESERVEDATE");

                entity.Property(e => e.Routingref).HasColumnName("ROUTINGREF");

                entity.Property(e => e.Rprice).HasColumnName("RPRICE");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Shippedamntsugg).HasColumnName("SHIPPEDAMNTSUGG");

                entity.Property(e => e.Shippedamount).HasColumnName("SHIPPEDAMOUNT");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourcecostgrp).HasColumnName("SOURCECOSTGRP");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Specode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trgflag).HasColumnName("TRGFLAG");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Underdeductlimit).HasColumnName("UNDERDEDUCTLIMIT");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Usref).HasColumnName("USREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Vat).HasColumnName("VAT");

                entity.Property(e => e.Vataccref).HasColumnName("VATACCREF");

                entity.Property(e => e.Vatamnt).HasColumnName("VATAMNT");

                entity.Property(e => e.Vatcenterref).HasColumnName("VATCENTERREF");

                entity.Property(e => e.Vatexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTCODE");

                entity.Property(e => e.Vatexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTREASON");

                entity.Property(e => e.Vatinc).HasColumnName("VATINC");

                entity.Property(e => e.Vatmatrah).HasColumnName("VATMATRAH");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Withpaytrans).HasColumnName("WITHPAYTRANS");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg001Qasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_QASGN_I1");

                entity.ToTable("LG_001_QASGN");

                entity.HasIndex(e => new { e.Asgnref, e.Setref, e.Asgntype, e.Lineno }, "I001_QASGN_I2");

                entity.HasIndex(e => new { e.Asgnref, e.Setref, e.Lineref, e.Valref, e.Asgntype, e.Lineno }, "I001_QASGN_I3");

                entity.HasIndex(e => new { e.Asgnref, e.Setref, e.Lineref, e.Valref, e.Asgntype }, "I001_QASGN_I4");

                entity.HasIndex(e => new { e.Setref, e.Lineref, e.Valref }, "I001_QASGN_I5");

                entity.HasIndex(e => new { e.Asgnref, e.Asgntype, e.Setref }, "I001_QASGN_I6");

                entity.HasIndex(e => new { e.Asgnref, e.Setref, e.Lineref, e.Valref, e.Revisionno, e.Asgntype }, "I001_QASGN_I7");

                entity.HasIndex(e => new { e.Asgnref, e.Revisionno, e.Asgntype }, "I001_QASGN_I8");

                entity.HasIndex(e => new { e.Asgnref, e.Setref, e.Revisionno, e.Asgntype }, "I001_QASGN_I9");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Asgnref).HasColumnName("ASGNREF");

                entity.Property(e => e.Asgntype).HasColumnName("ASGNTYPE");

                entity.Property(e => e.Conformrate).HasColumnName("CONFORMRATE");

                entity.Property(e => e.Controller).HasColumnName("CONTROLLER");

                entity.Property(e => e.Counter).HasColumnName("COUNTER");

                entity.Property(e => e.Frequency).HasColumnName("FREQUENCY");

                entity.Property(e => e.Importance)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("IMPORTANCE");

                entity.Property(e => e.Importanceval).HasColumnName("IMPORTANCEVAL");

                entity.Property(e => e.Inspfiches1).HasColumnName("INSPFICHES1");

                entity.Property(e => e.Inspfiches2).HasColumnName("INSPFICHES2");

                entity.Property(e => e.Inspfiches3).HasColumnName("INSPFICHES3");

                entity.Property(e => e.Insppoint).HasColumnName("INSPPOINT");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Lineref).HasColumnName("LINEREF");

                entity.Property(e => e.Maxval).HasColumnName("MAXVAL");

                entity.Property(e => e.Mintol).HasColumnName("MINTOL");

                entity.Property(e => e.Minval).HasColumnName("MINVAL");

                entity.Property(e => e.Nomval).HasColumnName("NOMVAL");

                entity.Property(e => e.Opitemref).HasColumnName("OPITEMREF");

                entity.Property(e => e.Orgrevno).HasColumnName("ORGREVNO");

                entity.Property(e => e.Plustol).HasColumnName("PLUSTOL");

                entity.Property(e => e.Revisionno).HasColumnName("REVISIONNO");

                entity.Property(e => e.Revsiteid).HasColumnName("REVSITEID");

                entity.Property(e => e.Samplesize).HasColumnName("SAMPLESIZE");

                entity.Property(e => e.Setref).HasColumnName("SETREF");

                entity.Property(e => e.Toolcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TOOLCODE");

                entity.Property(e => e.Toolref).HasColumnName("TOOLREF");

                entity.Property(e => e.Valref).HasColumnName("VALREF");
            });

            modelBuilder.Entity<Lg001Qclval>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_QCLVAL_I1");

                entity.ToTable("LG_001_QCLVAL");

                entity.HasIndex(e => e.Code, "I001_QCLVAL_I2");

                entity.HasIndex(e => e.Name, "I001_QCLVAL_I3");

                entity.HasIndex(e => new { e.Lineref, e.Targetflag, e.Lineno }, "I001_QCLVAL_I4");

                entity.HasIndex(e => new { e.Setref, e.Targetflag, e.Lineno }, "I001_QCLVAL_I5");

                entity.HasIndex(e => new { e.Setref, e.Lineref, e.Targetflag, e.Lineno }, "I001_QCLVAL_I6");

                entity.HasIndex(e => new { e.Setref, e.Lineref, e.Code }, "I001_QCLVAL_I7");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Lineref).HasColumnName("LINEREF");

                entity.Property(e => e.Name)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Setref).HasColumnName("SETREF");

                entity.Property(e => e.Targetflag).HasColumnName("TARGETFLAG");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");
            });

            modelBuilder.Entity<Lg001Qcset>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_QCSET_I1");

                entity.ToTable("LG_001_QCSET");

                entity.HasIndex(e => e.Code, "I001_QCSET_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_QCSET_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Itype).HasColumnName("ITYPE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Qcsline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_QCSLINE_I1");

                entity.ToTable("LG_001_QCSLINE");

                entity.HasIndex(e => e.Code, "I001_QCSLINE_I2");

                entity.HasIndex(e => e.Name, "I001_QCSLINE_I3");

                entity.HasIndex(e => new { e.Setref, e.Lineno }, "I001_QCSLINE_I4");

                entity.HasIndex(e => new { e.Setref, e.Code }, "I001_QCSLINE_I5")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Conformrate).HasColumnName("CONFORMRATE");

                entity.Property(e => e.Controller).HasColumnName("CONTROLLER");

                entity.Property(e => e.Counter).HasColumnName("COUNTER");

                entity.Property(e => e.Expline)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EXPLINE");

                entity.Property(e => e.Frequency).HasColumnName("FREQUENCY");

                entity.Property(e => e.Importance)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("IMPORTANCE");

                entity.Property(e => e.Importanceval).HasColumnName("IMPORTANCEVAL");

                entity.Property(e => e.Inspfiches1).HasColumnName("INSPFICHES1");

                entity.Property(e => e.Inspfiches2).HasColumnName("INSPFICHES2");

                entity.Property(e => e.Inspfiches3).HasColumnName("INSPFICHES3");

                entity.Property(e => e.Insppoint).HasColumnName("INSPPOINT");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Maxtol).HasColumnName("MAXTOL");

                entity.Property(e => e.Maxval).HasColumnName("MAXVAL");

                entity.Property(e => e.Mintol).HasColumnName("MINTOL");

                entity.Property(e => e.Minval).HasColumnName("MINVAL");

                entity.Property(e => e.Name)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Nomval).HasColumnName("NOMVAL");

                entity.Property(e => e.Qtype).HasColumnName("QTYPE");

                entity.Property(e => e.Qunit)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("QUNIT");

                entity.Property(e => e.Samplesize).HasColumnName("SAMPLESIZE");

                entity.Property(e => e.Setref).HasColumnName("SETREF");

                entity.Property(e => e.Toolcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("TOOLCODE");

                entity.Property(e => e.Toolref).HasColumnName("TOOLREF");
            });

            modelBuilder.Entity<Lg001Qctransferparam>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_QCTRANSFERPARAM_I1");

                entity.ToTable("LG_001_QCTRANSFERPARAM");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Destwhnr).HasColumnName("DESTWHNR");

                entity.Property(e => e.Divnr).HasColumnName("DIVNR");

                entity.Property(e => e.Factnr).HasColumnName("FACTNR");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Whnr).HasColumnName("WHNR");
            });

            modelBuilder.Entity<Lg001Reckeeping>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_RECKEEPING_I1");

                entity.ToTable("LG_001_RECKEEPING");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Exportcreexcel).HasColumnName("EXPORTCREEXCEL");

                entity.Property(e => e.Exportcrexml).HasColumnName("EXPORTCREXML");

                entity.Property(e => e.Exportcrexprl).HasColumnName("EXPORTCREXPRL");

                entity.Property(e => e.Importcreexcel).HasColumnName("IMPORTCREEXCEL");

                entity.Property(e => e.Importcrexml).HasColumnName("IMPORTCREXML");

                entity.Property(e => e.Importcrexprl).HasColumnName("IMPORTCREXPRL");

                entity.Property(e => e.Producecreexcel).HasColumnName("PRODUCECREEXCEL");

                entity.Property(e => e.Producecrexml).HasColumnName("PRODUCECREXML");

                entity.Property(e => e.Producecrexprl).HasColumnName("PRODUCECREXPRL");

                entity.Property(e => e.Purchcreexcel).HasColumnName("PURCHCREEXCEL");

                entity.Property(e => e.Purchcrexml).HasColumnName("PURCHCREXML");

                entity.Property(e => e.Purchcrexprl).HasColumnName("PURCHCREXPRL");

                entity.Property(e => e.Salescreexcel).HasColumnName("SALESCREEXCEL");

                entity.Property(e => e.Salescrexml).HasColumnName("SALESCREXML");

                entity.Property(e => e.Salescrexprl).HasColumnName("SALESCREXPRL");

                entity.Property(e => e.Stockcreexcel).HasColumnName("STOCKCREEXCEL");

                entity.Property(e => e.Stockcrexml).HasColumnName("STOCKCREXML");

                entity.Property(e => e.Stockcrexprl).HasColumnName("STOCKCREXPRL");
            });

            modelBuilder.Entity<Lg001Reflect>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_REFLECT_I1");

                entity.ToTable("LG_001_REFLECT");

                entity.HasIndex(e => e.Code, "I001_REFLECT_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Bfirstfiche).HasColumnName("BFIRSTFICHE");

                entity.Property(e => e.Bsecondfiche).HasColumnName("BSECONDFICHE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Expacccode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("EXPACCCODE");

                entity.Property(e => e.Expaccref).HasColumnName("EXPACCREF");

                entity.Property(e => e.Moduleno).HasColumnName("MODULENO");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");
            });

            modelBuilder.Entity<Lg001Reflecttran>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_REFLECTTRANS_I1");

                entity.ToTable("LG_001_REFLECTTRANS");

                entity.HasIndex(e => e.Ficheref, "I001_REFLECTTRANS_I2");

                entity.HasIndex(e => e.Lineref, "I001_REFLECTTRANS_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Exbegacccode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("EXBEGACCCODE");

                entity.Property(e => e.Exbegaccref).HasColumnName("EXBEGACCREF");

                entity.Property(e => e.Exendacccode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("EXENDACCCODE");

                entity.Property(e => e.Exendaccref).HasColumnName("EXENDACCREF");

                entity.Property(e => e.Exratio).HasColumnName("EXRATIO");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Inacccode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("INACCCODE");

                entity.Property(e => e.Inaccref).HasColumnName("INACCREF");

                entity.Property(e => e.Inratio).HasColumnName("INRATIO");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Lineref).HasColumnName("LINEREF");

                entity.Property(e => e.Perlinenr).HasColumnName("PERLINENR");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Yhacccode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("YHACCCODE");

                entity.Property(e => e.Yhaccref).HasColumnName("YHACCREF");

                entity.Property(e => e.Yhratio).HasColumnName("YHRATIO");
            });

            modelBuilder.Entity<Lg001Relateddoc>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_RELATEDDOCS_I1");

                entity.ToTable("LG_001_RELATEDDOCS");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Copycnt).HasColumnName("COPYCNT");

                entity.Property(e => e.Creletterref).HasColumnName("CRELETTERREF");

                entity.Property(e => e.Doccode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DOCCODE");

                entity.Property(e => e.Docdef)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DOCDEF");

                entity.Property(e => e.Originalcnt).HasColumnName("ORIGINALCNT");
            });

            modelBuilder.Entity<Lg001Repayplan>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_REPAYPLAN_I1");

                entity.ToTable("LG_001_REPAYPLAN");

                entity.HasIndex(e => e.Rempayterm, "I001_REPAYPLAN_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bankaccref).HasColumnName("BANKACCREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Dealingtype).HasColumnName("DEALINGTYPE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Firstpayterm)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("FIRSTPAYTERM");

                entity.Property(e => e.Orglogicalref).HasColumnName("ORGLOGICALREF");

                entity.Property(e => e.Pointcomsn).HasColumnName("POINTCOMSN");

                entity.Property(e => e.Poscomsn).HasColumnName("POSCOMSN");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Rempayterm)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("REMPAYTERM");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<Lg001Repayplan1>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_REPAYPLANS_I1");

                entity.ToTable("LG_001_REPAYPLANS");

                entity.HasIndex(e => e.Code, "I001_REPAYPLANS_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_REPAYPLANS_I3")
                    .IsUnique();

                entity.HasIndex(e => e.Wfstatus, "I001_REPAYPLANS_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Bankaccref).HasColumnName("BANKACCREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Defaultflg).HasColumnName("DEFAULTFLG");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Earlyinterest).HasColumnName("EARLYINTEREST");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Lateinterest).HasColumnName("LATEINTEREST");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Wrkdays).HasColumnName("WRKDAYS");
            });

            modelBuilder.Entity<Lg001Repayplansln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_REPAYPLANSLN_I1");

                entity.ToTable("LG_001_REPAYPLANSLN");

                entity.HasIndex(e => new { e.Repayplanref, e.Lineno }, "I001_REPAYPLANSLN_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Calctype).HasColumnName("CALCTYPE");

                entity.Property(e => e.Condition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CONDITION");

                entity.Property(e => e.Day)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("DAY");

                entity.Property(e => e.Discrate).HasColumnName("DISCRATE");

                entity.Property(e => e.Duediffcomsn).HasColumnName("DUEDIFFCOMSN");

                entity.Property(e => e.Formula)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA");

                entity.Property(e => e.Formula1)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA1");

                entity.Property(e => e.Formula2)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA2");

                entity.Property(e => e.Formula3)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA3");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Month)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("MONTH");

                entity.Property(e => e.Pointcomsn).HasColumnName("POINTCOMSN");

                entity.Property(e => e.Poscomsn).HasColumnName("POSCOMSN");

                entity.Property(e => e.Repayday)
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .HasColumnName("REPAYDAY");

                entity.Property(e => e.Repaymonth)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("REPAYMONTH");

                entity.Property(e => e.Repayplanref).HasColumnName("REPAYPLANREF");

                entity.Property(e => e.Rndvalue).HasColumnName("RNDVALUE");

                entity.Property(e => e.Year)
                    .HasMaxLength(6)
                    .IsUnicode(false)
                    .HasColumnName("YEAR");
            });

            modelBuilder.Entity<Lg001Repqueue>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_REPQUEUE_I1");

                entity.ToTable("LG_001_REPQUEUE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Custdsgref).HasColumnName("CUSTDSGREF");

                entity.Property(e => e.Devtype).HasColumnName("DEVTYPE");

                entity.Property(e => e.Filterref).HasColumnName("FILTERREF");

                entity.Property(e => e.Gridtype).HasColumnName("GRIDTYPE");

                entity.Property(e => e.Queuedate)
                    .HasColumnType("datetime")
                    .HasColumnName("QUEUEDATE");

                entity.Property(e => e.Queueid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("QUEUEID");

                entity.Property(e => e.Queuetime).HasColumnName("QUEUETIME");

                entity.Property(e => e.Result).HasColumnName("RESULT");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Taskid).HasColumnName("TASKID");
            });

            modelBuilder.Entity<Lg001Rettaxpegg>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_RETTAXPEGG_I1");

                entity.ToTable("LG_001_RETTAXPEGG");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Custdocno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CUSTDOCNO");

                entity.Property(e => e.Docdisper).HasColumnName("DOCDISPER");

                entity.Property(e => e.Docuplper).HasColumnName("DOCUPLPER");

                entity.Property(e => e.Exportvatamnt).HasColumnName("EXPORTVATAMNT");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Pamount).HasColumnName("PAMOUNT");

                entity.Property(e => e.Peximfctype).HasColumnName("PEXIMFCTYPE");

                entity.Property(e => e.Pinvdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PINVDATE");

                entity.Property(e => e.Pinvdocode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("PINVDOCODE");

                entity.Property(e => e.Pinvficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("PINVFICHENO");

                entity.Property(e => e.Pinvref).HasColumnName("PINVREF");

                entity.Property(e => e.Plineref).HasColumnName("PLINEREF");

                entity.Property(e => e.Plinetype).HasColumnName("PLINETYPE");

                entity.Property(e => e.Pperiodnr).HasColumnName("PPERIODNR");

                entity.Property(e => e.Rettranscode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("RETTRANSCODE");

                entity.Property(e => e.Rettype).HasColumnName("RETTYPE");

                entity.Property(e => e.Seximfctype).HasColumnName("SEXIMFCTYPE");

                entity.Property(e => e.Sinvref).HasColumnName("SINVREF");

                entity.Property(e => e.Slineref).HasColumnName("SLINEREF");

                entity.Property(e => e.Smainamnt).HasColumnName("SMAINAMNT");

                entity.Property(e => e.Speriodnr).HasColumnName("SPERIODNR");

                entity.Property(e => e.Taxdeclref).HasColumnName("TAXDECLREF");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Totalvat).HasColumnName("TOTALVAT");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Uploadtype)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UPLOADTYPE");

                entity.Property(e => e.Vidennumber)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VIDENNUMBER");

                entity.Property(e => e.Vregnumber)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VREGNUMBER");
            });

            modelBuilder.Entity<Lg001Route>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ROUTE_I1");

                entity.ToTable("LG_001_ROUTE");

                entity.HasIndex(e => new { e.Salesmanref, e.Code }, "I001_ROUTE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Salesmanref, e.Definition }, "I001_ROUTE_I3");

                entity.HasIndex(e => e.Salesmanref, "I001_ROUTE_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Period)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("PERIOD");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Status).HasColumnName("STATUS");
            });

            modelBuilder.Entity<Lg001Routetr>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ROUTETRS_I1");

                entity.ToTable("LG_001_ROUTETRS");

                entity.HasIndex(e => new { e.Routeref, e.Lineno }, "I001_ROUTETRS_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Clientref, e.Routeref }, "I001_ROUTETRS_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Routeref).HasColumnName("ROUTEREF");
            });

            modelBuilder.Entity<Lg001Routing>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_ROUTING_I1");

                entity.ToTable("LG_001_ROUTING");

                entity.HasIndex(e => new { e.Cardtype, e.Code }, "I001_ROUTING_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Name }, "I001_ROUTING_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Printcnt).HasColumnName("PRINTCNT");

                entity.Property(e => e.Printdate)
                    .HasColumnType("datetime")
                    .HasColumnName("PRINTDATE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Rtngline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_RTNGLINE_I1");

                entity.ToTable("LG_001_RTNGLINE");

                entity.HasIndex(e => new { e.Routingref, e.Lineno }, "I001_RTNGLINE_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Costrelated).HasColumnName("COSTRELATED");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Operationref).HasColumnName("OPERATIONREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Outitemref).HasColumnName("OUTITEMREF");

                entity.Property(e => e.Planrelated).HasColumnName("PLANRELATED");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Routingref).HasColumnName("ROUTINGREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Sectormain>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SECTORMAIN_I1");

                entity.ToTable("LG_001_SECTORMAIN");

                entity.HasIndex(e => e.Code, "I001_SECTORMAIN_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Explanation, "I001_SECTORMAIN_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Explanation)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EXPLANATION");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");
            });

            modelBuilder.Entity<Lg001Sectorsub>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SECTORSUB_I1");

                entity.ToTable("LG_001_SECTORSUB");

                entity.HasIndex(e => e.Code, "I001_SECTORSUB_I2");

                entity.HasIndex(e => e.Explanation, "I001_SECTORSUB_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Explanation)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EXPLANATION");

                entity.Property(e => e.Mainsectorref).HasColumnName("MAINSECTORREF");
            });

            modelBuilder.Entity<Lg001Selchval>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SELCHVAL_I1");

                entity.ToTable("LG_001_SELCHVAL");

                entity.HasIndex(e => new { e.Charasgnref, e.Charvalref }, "I001_SELCHVAL_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Charasgnref).HasColumnName("CHARASGNREF");

                entity.Property(e => e.Charvalref).HasColumnName("CHARVALREF");
            });

            modelBuilder.Entity<Lg001Shftasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SHFTASGN_I1");

                entity.ToTable("LG_001_SHFTASGN");

                entity.HasIndex(e => new { e.Sourceref, e.Shiftref, e.Shifttref, e.Sourcetype }, "I001_SHFTASGN_I2");

                entity.HasIndex(e => new { e.Shiftref, e.Sourceref, e.Shifttref, e.Sourcetype }, "I001_SHFTASGN_I3");

                entity.HasIndex(e => new { e.Sourceref, e.Linenr }, "I001_SHFTASGN_I4");

                entity.HasIndex(e => new { e.Sourcetype, e.Sourceref, e.Shiftref }, "I001_SHFTASGN_I5");

                entity.HasIndex(e => new { e.Sourcetype, e.Shiftref, e.Sourceref }, "I001_SHFTASGN_I6");

                entity.HasIndex(e => new { e.Sourcetype, e.Sourceref, e.Linenr }, "I001_SHFTASGN_I7");

                entity.HasIndex(e => new { e.Sourceref, e.Shiftref, e.Sourcetype, e.Begdate }, "I001_SHFTASGN_I8");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Shiftref).HasColumnName("SHIFTREF");

                entity.Property(e => e.Shifttref).HasColumnName("SHIFTTREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourceref).HasColumnName("SOURCEREF");

                entity.Property(e => e.Sourcetype).HasColumnName("SOURCETYPE");
            });

            modelBuilder.Entity<Lg001Shfttime>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SHFTTIME_I1");

                entity.ToTable("LG_001_SHFTTIME");

                entity.HasIndex(e => e.Shiftref, "I001_SHFTTIME_I2");

                entity.HasIndex(e => new { e.Siteid, e.Orglogicref }, "I001_SHFTTIME_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begtime).HasColumnName("BEGTIME");

                entity.Property(e => e.Costfactor).HasColumnName("COSTFACTOR");

                entity.Property(e => e.Endtime).HasColumnName("ENDTIME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Shiftref).HasColumnName("SHIFTREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<Lg001Shift>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SHIFT_I1");

                entity.ToTable("LG_001_SHIFT");

                entity.HasIndex(e => new { e.Cardtype, e.Code }, "I001_SHIFT_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Name }, "I001_SHIFT_I3");

                entity.HasIndex(e => new { e.Siteid, e.Orglogicref }, "I001_SHIFT_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.CapiblockCreadedby).HasColumnName("CAPIBLOCK_CREADEDBY");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Costfactor).HasColumnName("COSTFACTOR");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wholeday).HasColumnName("WHOLEDAY");
            });

            modelBuilder.Entity<Lg001Shipinfo>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SHIPINFO_I1");

                entity.ToTable("LG_001_SHIPINFO");

                entity.HasIndex(e => new { e.Clientref, e.Code }, "I001_SHIPINFO_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Clientref, e.Name }, "I001_SHIPINFO_I3");

                entity.HasIndex(e => new { e.Clientref, e.Active, e.Code }, "I001_SHIPINFO_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Clientref, e.Active, e.Name }, "I001_SHIPINFO_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Citycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CITYCODE");

                entity.Property(e => e.Cityid)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("CITYID");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Defaultflg).HasColumnName("DEFAULTFLG");

                entity.Property(e => e.District)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Districtcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICTCODE");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Faxcode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("FAXCODE");

                entity.Property(e => e.Faxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("FAXNR");

                entity.Property(e => e.Inchange)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INCHANGE");

                entity.Property(e => e.Isperscomp).HasColumnName("ISPERSCOMP");

                entity.Property(e => e.Latitute)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("LATITUTE");

                entity.Property(e => e.Longitude)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("LONGITUDE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Postcodeledesp)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODELEDESP");

                entity.Property(e => e.Postlabelcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("POSTLABELCODE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Sendercodeledesp)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("SENDERCODELEDESP");

                entity.Property(e => e.Senderlabelcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("SENDERLABELCODE");

                entity.Property(e => e.Shipbegtime1).HasColumnName("SHIPBEGTIME1");

                entity.Property(e => e.Shipbegtime2).HasColumnName("SHIPBEGTIME2");

                entity.Property(e => e.Shipbegtime3).HasColumnName("SHIPBEGTIME3");

                entity.Property(e => e.Shipendtime1).HasColumnName("SHIPENDTIME1");

                entity.Property(e => e.Shipendtime2).HasColumnName("SHIPENDTIME2");

                entity.Property(e => e.Shipendtime3).HasColumnName("SHIPENDTIME3");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("SNAME");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Ssurname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("SSURNAME");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Taxoffice)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFFICE");

                entity.Property(e => e.Tckno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TCKNO");

                entity.Property(e => e.Telcodes1)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELCODES1");

                entity.Property(e => e.Telcodes2)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELCODES2");

                entity.Property(e => e.Telnrs1)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS1");

                entity.Property(e => e.Telnrs2)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS2");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Title)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TITLE");

                entity.Property(e => e.Town)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Towncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TOWNCODE");

                entity.Property(e => e.Townid)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("TOWNID");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Vatnr)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("VATNR");
            });

            modelBuilder.Entity<Lg001Slsclrel>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SLSCLREL_I1");

                entity.ToTable("LG_001_SLSCLREL");

                entity.HasIndex(e => new { e.Salesmanref, e.Clientref }, "I001_SLSCLREL_I2");

                entity.HasIndex(e => new { e.Clientref, e.Salesmanref }, "I001_SLSCLREL_I3");

                entity.HasIndex(e => new { e.Salesmanref, e.Lineno }, "I001_SLSCLREL_I4");

                entity.HasIndex(e => new { e.Clientref, e.Cllineno }, "I001_SLSCLREL_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Cllineno).HasColumnName("CLLINENO_");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Shipref).HasColumnName("SHIPREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Visitday).HasColumnName("VISITDAY");

                entity.Property(e => e.Visitperiod)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VISITPERIOD");
            });

            modelBuilder.Entity<Lg001Specode>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SPECODES_I1");

                entity.ToTable("LG_001_SPECODES");

                entity.HasIndex(e => new { e.Codetype, e.Specodetype, e.Specode }, "I001_SPECODES_I2");

                entity.HasIndex(e => e.Specode, "I001_SPECODES_I3");

                entity.HasIndex(e => e.Globalid, "I001_SPECODES_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Codetype).HasColumnName("CODETYPE");

                entity.Property(e => e.Color).HasColumnName("COLOR");

                entity.Property(e => e.Definition)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Definition2)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION2");

                entity.Property(e => e.Definition3)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION3");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specodetype).HasColumnName("SPECODETYPE");

                entity.Property(e => e.Spetyp1).HasColumnName("SPETYP1");

                entity.Property(e => e.Spetyp2).HasColumnName("SPETYP2");

                entity.Property(e => e.Spetyp3).HasColumnName("SPETYP3");

                entity.Property(e => e.Spetyp4).HasColumnName("SPETYP4");

                entity.Property(e => e.Spetyp5).HasColumnName("SPETYP5");

                entity.Property(e => e.Wincolor).HasColumnName("WINCOLOR");
            });

            modelBuilder.Entity<Lg001Spevallnscore>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SPEVALLNSCORE_I1");

                entity.ToTable("LG_001_SPEVALLNSCORE");

                entity.HasIndex(e => new { e.Spevalcrref, e.Spevalcrlnref, e.Lineno }, "I001_SPEVALLNSCORE_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Score).HasColumnName("SCORE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Spevalcrlnref).HasColumnName("SPEVALCRLNREF");

                entity.Property(e => e.Spevalcrref).HasColumnName("SPEVALCRREF");

                entity.Property(e => e.Value).HasColumnName("VALUE_");

                entity.Property(e => e.Valuedesc)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("VALUEDESC");

                entity.Property(e => e.Valuetype).HasColumnName("VALUETYPE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Srvcard>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SRVCARD_I1");

                entity.ToTable("LG_001_SRVCARD");

                entity.HasIndex(e => new { e.Cardtype, e.Code }, "I001_SRVCARD_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Definition }, "I001_SRVCARD_I3");

                entity.HasIndex(e => new { e.Cardtype, e.Active, e.Code }, "I001_SRVCARD_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Active, e.Definition }, "I001_SRVCARD_I5");

                entity.HasIndex(e => e.Unitsetref, "I001_SRVCARD_I6");

                entity.HasIndex(e => new { e.Active, e.Cardtype }, "I001_SRVCARD_I7");

                entity.HasIndex(e => new { e.Lowlevelcodes1, e.Lowlevelcodes2, e.Lowlevelcodes3, e.Lowlevelcodes4, e.Lowlevelcodes5, e.Lowlevelcodes6, e.Lowlevelcodes7, e.Logicalref }, "I001_SRVCARD_I8")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Addtaxref).HasColumnName("ADDTAXREF");

                entity.Property(e => e.Affectcost).HasColumnName("AFFECTCOST");

                entity.Property(e => e.Candeduct).HasColumnName("CANDEDUCT");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cpacode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CPACODE");

                entity.Property(e => e.Currdiff).HasColumnName("CURRDIFF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Deductcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DEDUCTCODE");

                entity.Property(e => e.Deductionpart1).HasColumnName("DEDUCTIONPART1");

                entity.Property(e => e.Deductionpart2).HasColumnName("DEDUCTIONPART2");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Definition2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION2");

                entity.Property(e => e.Disttype).HasColumnName("DISTTYPE");

                entity.Property(e => e.Exemptfromtaxdecl).HasColumnName("EXEMPTFROMTAXDECL");

                entity.Property(e => e.Extaccessflags).HasColumnName("EXTACCESSFLAGS");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Gtipcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("GTIPCODE");

                entity.Property(e => e.Importexpns).HasColumnName("IMPORTEXPNS");

                entity.Property(e => e.Lowlevelcodes1).HasColumnName("LOWLEVELCODES1");

                entity.Property(e => e.Lowlevelcodes10).HasColumnName("LOWLEVELCODES10");

                entity.Property(e => e.Lowlevelcodes2).HasColumnName("LOWLEVELCODES2");

                entity.Property(e => e.Lowlevelcodes3).HasColumnName("LOWLEVELCODES3");

                entity.Property(e => e.Lowlevelcodes4).HasColumnName("LOWLEVELCODES4");

                entity.Property(e => e.Lowlevelcodes5).HasColumnName("LOWLEVELCODES5");

                entity.Property(e => e.Lowlevelcodes6).HasColumnName("LOWLEVELCODES6");

                entity.Property(e => e.Lowlevelcodes7).HasColumnName("LOWLEVELCODES7");

                entity.Property(e => e.Lowlevelcodes8).HasColumnName("LOWLEVELCODES8");

                entity.Property(e => e.Lowlevelcodes9).HasColumnName("LOWLEVELCODES9");

                entity.Property(e => e.Multiaddtax).HasColumnName("MULTIADDTAX");

                entity.Property(e => e.Opposesrvref).HasColumnName("OPPOSESRVREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Parentsrvref).HasColumnName("PARENTSRVREF");

                entity.Property(e => e.Paymentref).HasColumnName("PAYMENTREF");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Publiccountryref).HasColumnName("PUBLICCOUNTRYREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Returnvat).HasColumnName("RETURNVAT");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Specode3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE3");

                entity.Property(e => e.Specode4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE4");

                entity.Property(e => e.Specode5)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE5");

                entity.Property(e => e.Unitsetref).HasColumnName("UNITSETREF");

                entity.Property(e => e.Usedinperiods).HasColumnName("USEDINPERIODS");

                entity.Property(e => e.Vat).HasColumnName("VAT");

                entity.Property(e => e.Vehicleexp).HasColumnName("VEHICLEEXP");

                entity.Property(e => e.Vehiclerent).HasColumnName("VEHICLERENT");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Srvunitum>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SRVUNITA_I1");

                entity.ToTable("LG_001_SRVUNITA");

                entity.HasIndex(e => new { e.Srvref, e.Linenr }, "I001_SRVUNITA_I2");

                entity.HasIndex(e => new { e.Srvref, e.Unitlineref }, "I001_SRVUNITA_I3")
                    .IsUnique();

                entity.HasIndex(e => e.Unitlineref, "I001_SRVUNITA_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Srvref).HasColumnName("SRVREF");

                entity.Property(e => e.Unitlineref).HasColumnName("UNITLINEREF");
            });

            modelBuilder.Entity<Lg001Stcompln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_STCOMPLN_I1");

                entity.ToTable("LG_001_STCOMPLN");

                entity.HasIndex(e => new { e.Maincref, e.Lineno }, "I001_STCOMPLN_I2");

                entity.HasIndex(e => e.Stcref, "I001_STCOMPLN_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Altitemuse).HasColumnName("ALTITEMUSE");

                entity.Property(e => e.Amnt).HasColumnName("AMNT");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Comptype).HasColumnName("COMPTYPE");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Grossuinfo1).HasColumnName("GROSSUINFO1");

                entity.Property(e => e.Grossuinfo2).HasColumnName("GROSSUINFO2");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Lostfactor).HasColumnName("LOSTFACTOR");

                entity.Property(e => e.Maincref).HasColumnName("MAINCREF");

                entity.Property(e => e.Perc).HasColumnName("PERC");

                entity.Property(e => e.Price).HasColumnName("PRICE");

                entity.Property(e => e.Qprofcref).HasColumnName("QPROFCREF");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Stcref).HasColumnName("STCREF");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Vrntref).HasColumnName("VRNTREF");
            });

            modelBuilder.Entity<Lg001Stdbomcost>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_STDBOMCOST_I1");

                entity.ToTable("LG_001_STDBOMCOST");

                entity.HasIndex(e => e.Periodref, "I001_STDBOMCOST_I2");

                entity.HasIndex(e => e.Factorynr, "I001_STDBOMCOST_I3");

                entity.HasIndex(e => e.Bomref, "I001_STDBOMCOST_I4");

                entity.HasIndex(e => e.Bomrevref, "I001_STDBOMCOST_I5");

                entity.HasIndex(e => new { e.Periodref, e.Stockref, e.Variantref }, "I001_STDBOMCOST_I6");

                entity.HasIndex(e => new { e.Stockref, e.Variantref, e.Periodref, e.Factorynr, e.Bomref, e.Bomrevref, e.Bomtype }, "I001_STDBOMCOST_I7")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Bomref).HasColumnName("BOMREF");

                entity.Property(e => e.Bomrevref).HasColumnName("BOMREVREF");

                entity.Property(e => e.Bomtype).HasColumnName("BOMTYPE");

                entity.Property(e => e.Crtype).HasColumnName("CRTYPE");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Ovhdcostformula)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTFORMULA");

                entity.Property(e => e.Ovhdcostformula10)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTFORMULA10");

                entity.Property(e => e.Ovhdcostformula2)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTFORMULA2");

                entity.Property(e => e.Ovhdcostformula3)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTFORMULA3");

                entity.Property(e => e.Ovhdcostformula4)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTFORMULA4");

                entity.Property(e => e.Ovhdcostformula5)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTFORMULA5");

                entity.Property(e => e.Ovhdcostformula6)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTFORMULA6");

                entity.Property(e => e.Ovhdcostformula7)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTFORMULA7");

                entity.Property(e => e.Ovhdcostformula8)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTFORMULA8");

                entity.Property(e => e.Ovhdcostformula9)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTFORMULA9");

                entity.Property(e => e.Ovhdcostrepformula)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTREPFORMULA");

                entity.Property(e => e.Ovhdcostrepformula10)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTREPFORMULA10");

                entity.Property(e => e.Ovhdcostrepformula2)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTREPFORMULA2");

                entity.Property(e => e.Ovhdcostrepformula3)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTREPFORMULA3");

                entity.Property(e => e.Ovhdcostrepformula4)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTREPFORMULA4");

                entity.Property(e => e.Ovhdcostrepformula5)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTREPFORMULA5");

                entity.Property(e => e.Ovhdcostrepformula6)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTREPFORMULA6");

                entity.Property(e => e.Ovhdcostrepformula7)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTREPFORMULA7");

                entity.Property(e => e.Ovhdcostrepformula8)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTREPFORMULA8");

                entity.Property(e => e.Ovhdcostrepformula9)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("OVHDCOSTREPFORMULA9");

                entity.Property(e => e.Periodref).HasColumnName("PERIODREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Stdlbrcostlocal).HasColumnName("STDLBRCOSTLOCAL");

                entity.Property(e => e.Stdlbrcostrepcurr).HasColumnName("STDLBRCOSTREPCURR");

                entity.Property(e => e.Stdlbrcosttrcurr).HasColumnName("STDLBRCOSTTRCURR");

                entity.Property(e => e.Stdmtrcostlocal).HasColumnName("STDMTRCOSTLOCAL");

                entity.Property(e => e.Stdmtrcostrepcurr).HasColumnName("STDMTRCOSTREPCURR");

                entity.Property(e => e.Stdmtrcosttrcurr).HasColumnName("STDMTRCOSTTRCURR");

                entity.Property(e => e.Stdovhdcostlocal).HasColumnName("STDOVHDCOSTLOCAL");

                entity.Property(e => e.Stdovhdcostlocal10).HasColumnName("STDOVHDCOSTLOCAL10");

                entity.Property(e => e.Stdovhdcostlocal2).HasColumnName("STDOVHDCOSTLOCAL2");

                entity.Property(e => e.Stdovhdcostlocal3).HasColumnName("STDOVHDCOSTLOCAL3");

                entity.Property(e => e.Stdovhdcostlocal4).HasColumnName("STDOVHDCOSTLOCAL4");

                entity.Property(e => e.Stdovhdcostlocal5).HasColumnName("STDOVHDCOSTLOCAL5");

                entity.Property(e => e.Stdovhdcostlocal6).HasColumnName("STDOVHDCOSTLOCAL6");

                entity.Property(e => e.Stdovhdcostlocal7).HasColumnName("STDOVHDCOSTLOCAL7");

                entity.Property(e => e.Stdovhdcostlocal8).HasColumnName("STDOVHDCOSTLOCAL8");

                entity.Property(e => e.Stdovhdcostlocal9).HasColumnName("STDOVHDCOSTLOCAL9");

                entity.Property(e => e.Stdovhdcostrepcurr).HasColumnName("STDOVHDCOSTREPCURR");

                entity.Property(e => e.Stdovhdcostrepcurr10).HasColumnName("STDOVHDCOSTREPCURR10");

                entity.Property(e => e.Stdovhdcostrepcurr2).HasColumnName("STDOVHDCOSTREPCURR2");

                entity.Property(e => e.Stdovhdcostrepcurr3).HasColumnName("STDOVHDCOSTREPCURR3");

                entity.Property(e => e.Stdovhdcostrepcurr4).HasColumnName("STDOVHDCOSTREPCURR4");

                entity.Property(e => e.Stdovhdcostrepcurr5).HasColumnName("STDOVHDCOSTREPCURR5");

                entity.Property(e => e.Stdovhdcostrepcurr6).HasColumnName("STDOVHDCOSTREPCURR6");

                entity.Property(e => e.Stdovhdcostrepcurr7).HasColumnName("STDOVHDCOSTREPCURR7");

                entity.Property(e => e.Stdovhdcostrepcurr8).HasColumnName("STDOVHDCOSTREPCURR8");

                entity.Property(e => e.Stdovhdcostrepcurr9).HasColumnName("STDOVHDCOSTREPCURR9");

                entity.Property(e => e.Stdovhdcosttrcurr).HasColumnName("STDOVHDCOSTTRCURR");

                entity.Property(e => e.Stdovhdcosttrcurr10).HasColumnName("STDOVHDCOSTTRCURR10");

                entity.Property(e => e.Stdovhdcosttrcurr2).HasColumnName("STDOVHDCOSTTRCURR2");

                entity.Property(e => e.Stdovhdcosttrcurr3).HasColumnName("STDOVHDCOSTTRCURR3");

                entity.Property(e => e.Stdovhdcosttrcurr4).HasColumnName("STDOVHDCOSTTRCURR4");

                entity.Property(e => e.Stdovhdcosttrcurr5).HasColumnName("STDOVHDCOSTTRCURR5");

                entity.Property(e => e.Stdovhdcosttrcurr6).HasColumnName("STDOVHDCOSTTRCURR6");

                entity.Property(e => e.Stdovhdcosttrcurr7).HasColumnName("STDOVHDCOSTTRCURR7");

                entity.Property(e => e.Stdovhdcosttrcurr8).HasColumnName("STDOVHDCOSTTRCURR8");

                entity.Property(e => e.Stdovhdcosttrcurr9).HasColumnName("STDOVHDCOSTTRCURR9");

                entity.Property(e => e.Stdunitcostlocal).HasColumnName("STDUNITCOSTLOCAL");

                entity.Property(e => e.Stdunitcostrepcurr).HasColumnName("STDUNITCOSTREPCURR");

                entity.Property(e => e.Stdunitcosttrcurr).HasColumnName("STDUNITCOSTTRCURR");

                entity.Property(e => e.Stdwscostlocal).HasColumnName("STDWSCOSTLOCAL");

                entity.Property(e => e.Stdwscostrepcurr).HasColumnName("STDWSCOSTREPCURR");

                entity.Property(e => e.Stdwscosttrcurr).HasColumnName("STDWSCOSTTRCURR");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Trcurrdate).HasColumnName("TRCURRDATE");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg001Stdcost>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_STDCOST_I1");

                entity.ToTable("LG_001_STDCOST");

                entity.HasIndex(e => new { e.Restype, e.Resref }, "I001_STDCOST_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Hourlystdcost).HasColumnName("HOURLYSTDCOST");

                entity.Property(e => e.Hourlystdrpcost).HasColumnName("HOURLYSTDRPCOST");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Resref).HasColumnName("RESREF");

                entity.Property(e => e.Restype).HasColumnName("RESTYPE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Unitref).HasColumnName("UNITREF");
            });

            modelBuilder.Entity<Lg001Stdcostperiod>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_STDCOSTPERIOD_I1");

                entity.ToTable("LG_001_STDCOSTPERIOD");

                entity.HasIndex(e => e.Code, "I001_STDCOSTPERIOD_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_STDCOSTPERIOD_I3");

                entity.HasIndex(e => e.Begdate, "I001_STDCOSTPERIOD_I4")
                    .IsUnique();

                entity.HasIndex(e => e.Enddate, "I001_STDCOSTPERIOD_I5")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<Lg001Stdunitcost>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_STDUNITCOST_I1");

                entity.ToTable("LG_001_STDUNITCOST");

                entity.HasIndex(e => new { e.Cardtype, e.Cardref, e.Periodref, e.Factorynr }, "I001_STDUNITCOST_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Periodref, "I001_STDUNITCOST_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Periodref).HasColumnName("PERIODREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Repunitcost).HasColumnName("REPUNITCOST");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Trunitcost).HasColumnName("TRUNITCOST");

                entity.Property(e => e.Unitcost).HasColumnName("UNITCOST");
            });

            modelBuilder.Entity<Lg001Stopasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_STOPASGN_I1");

                entity.ToTable("LG_001_STOPASGN");

                entity.HasIndex(e => new { e.Wsref, e.Causeref }, "I001_STOPASGN_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Affectscost).HasColumnName("AFFECTSCOST");

                entity.Property(e => e.Affectsplan).HasColumnName("AFFECTSPLAN");

                entity.Property(e => e.Causeref).HasColumnName("CAUSEREF");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg001Stopcause>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_STOPCAUSE_I1");

                entity.ToTable("LG_001_STOPCAUSE");

                entity.HasIndex(e => e.Code, "I001_STOPCAUSE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_STOPCAUSE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Affectscost).HasColumnName("AFFECTSCOST");

                entity.Property(e => e.Affectsplan).HasColumnName("AFFECTSPLAN");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Stoptran>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_STOPTRANS_I1");

                entity.ToTable("LG_001_STOPTRANS");

                entity.HasIndex(e => new { e.Displineref, e.Causeref }, "I001_STOPTRANS_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Activepartnum).HasColumnName("ACTIVEPARTNUM");

                entity.Property(e => e.Affectscost).HasColumnName("AFFECTSCOST");

                entity.Property(e => e.Affectsplan).HasColumnName("AFFECTSPLAN");

                entity.Property(e => e.Causeref).HasColumnName("CAUSEREF");

                entity.Property(e => e.Displineref).HasColumnName("DISPLINEREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Opref).HasColumnName("OPREF");

                entity.Property(e => e.Prodordref).HasColumnName("PRODORDREF");

                entity.Property(e => e.Startdate)
                    .HasColumnType("datetime")
                    .HasColumnName("STARTDATE");

                entity.Property(e => e.Starttime).HasColumnName("STARTTIME");

                entity.Property(e => e.Stopdate)
                    .HasColumnType("datetime")
                    .HasColumnName("STOPDATE");

                entity.Property(e => e.Stopduration).HasColumnName("STOPDURATION");

                entity.Property(e => e.Stoptime).HasColumnName("STOPTIME");

                entity.Property(e => e.Transexp)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TRANSEXP");

                entity.Property(e => e.Wspartref).HasColumnName("WSPARTREF");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg001Suppasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SUPPASGN_I1");

                entity.ToTable("LG_001_SUPPASGN");

                entity.HasIndex(e => new { e.Itemref, e.Linenr }, "I001_SUPPASGN_I2");

                entity.HasIndex(e => new { e.Itemref, e.Clcardtype, e.Clientref }, "I001_SUPPASGN_I3");

                entity.HasIndex(e => new { e.Clientref, e.Supplytype, e.Itemref }, "I001_SUPPASGN_I4");

                entity.HasIndex(e => new { e.Icustsupcode, e.Clientref }, "I001_SUPPASGN_I5");

                entity.HasIndex(e => new { e.Itemref, e.Variantref }, "I001_SUPPASGN_I6");

                entity.HasIndex(e => new { e.Itemref, e.Variantref, e.Linenr }, "I001_SUPPASGN_I7");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Clcardtype).HasColumnName("CLCARDTYPE");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Icustsupbarcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ICUSTSUPBARCODE");

                entity.Property(e => e.Icustsupcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ICUSTSUPCODE");

                entity.Property(e => e.Icustsupname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ICUSTSUPNAME");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Kkkcheck).HasColumnName("KKKCHECK");

                entity.Property(e => e.Leadtime).HasColumnName("LEADTIME");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Maxquantity).HasColumnName("MAXQUANTITY");

                entity.Property(e => e.Minquantity).HasColumnName("MINQUANTITY");

                entity.Property(e => e.Ordfreq).HasColumnName("ORDFREQ");

                entity.Property(e => e.Ordperc).HasColumnName("ORDPERC");

                entity.Property(e => e.Packagingamnt).HasColumnName("PACKAGINGAMNT");

                entity.Property(e => e.Packaginguomref).HasColumnName("PACKAGINGUOMREF");

                entity.Property(e => e.Packetref).HasColumnName("PACKETREF");

                entity.Property(e => e.Packetusetype).HasColumnName("PACKETUSETYPE");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Qtydepleadtime).HasColumnName("QTYDEPLEADTIME");

                entity.Property(e => e.Specialized).HasColumnName("SPECIALIZED");

                entity.Property(e => e.Supplytype).HasColumnName("SUPPLYTYPE");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg001Suppcrset>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SUPPCRSET_I1");

                entity.ToTable("LG_001_SUPPCRSET");

                entity.HasIndex(e => e.Code, "I001_SUPPCRSET_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_SUPPCRSET_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Citycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CITYCODE");

                entity.Property(e => e.Clientcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLIENTCODE");

                entity.Property(e => e.Clspecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLSPECODE");

                entity.Property(e => e.Clspecode1)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLSPECODE1");

                entity.Property(e => e.Clspecode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLSPECODE2");

                entity.Property(e => e.Clspecode3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLSPECODE3");

                entity.Property(e => e.Clspecode4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLSPECODE4");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Districtcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICTCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Towncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TOWNCODE");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Suppcrsetln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SUPPCRSETLN_I1");

                entity.ToTable("LG_001_SUPPCRSETLN");

                entity.HasIndex(e => new { e.Spevalcrsetref, e.Spevalcrref }, "I001_SUPPCRSETLN_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Spevalcrsetref, e.Lineno }, "I001_SUPPCRSETLN_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Spevalcrref).HasColumnName("SPEVALCRREF");

                entity.Property(e => e.Spevalcrsetref).HasColumnName("SPEVALCRSETREF");

                entity.Property(e => e.Weight).HasColumnName("WEIGHT");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Suppcrsetsub>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SUPPCRSETSUB_I1");

                entity.ToTable("LG_001_SUPPCRSETSUB");

                entity.HasIndex(e => new { e.Spevalcrsetlnref, e.Spevalcrlnref }, "I001_SUPPCRSETSUB_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Spevalcrsetlnref, e.Lineno }, "I001_SUPPCRSETSUB_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Spevalcrlnref).HasColumnName("SPEVALCRLNREF");

                entity.Property(e => e.Spevalcrref).HasColumnName("SPEVALCRREF");

                entity.Property(e => e.Spevalcrsetlnref).HasColumnName("SPEVALCRSETLNREF");

                entity.Property(e => e.Spevalcrsetref).HasColumnName("SPEVALCRSETREF");

                entity.Property(e => e.Weight).HasColumnName("WEIGHT");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Suppevalcr>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SUPPEVALCR_I1");

                entity.ToTable("LG_001_SUPPEVALCR");

                entity.HasIndex(e => e.Code, "I001_SUPPEVALCR_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_SUPPEVALCR_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Crtype).HasColumnName("CRTYPE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Default).HasColumnName("DEFAULT_");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Suppevalcrln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SUPPEVALCRLN_I1");

                entity.ToTable("LG_001_SUPPEVALCRLN");

                entity.HasIndex(e => new { e.Spevalcrref, e.Code }, "I001_SUPPEVALCRLN_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Spevalcrref, e.Lineno }, "I001_SUPPEVALCRLN_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Crtype).HasColumnName("CRTYPE");

                entity.Property(e => e.Formula)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("FORMULA");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Spevalcrref).HasColumnName("SPEVALCRREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Suppevalfiche>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SUPPEVALFICHE_I1");

                entity.ToTable("LG_001_SUPPEVALFICHE");

                entity.HasIndex(e => e.Ficheno, "I001_SUPPEVALFICHE_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Explanation)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("EXPLANATION");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Itemdepend).HasColumnName("ITEMDEPEND");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Suppevaltran>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SUPPEVALTRANS_I1");

                entity.ToTable("LG_001_SUPPEVALTRANS");

                entity.HasIndex(e => e.Ficheno, "I001_SUPPEVALTRANS_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Ficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("FICHENO");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Score).HasColumnName("SCORE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Spevalcrsetref).HasColumnName("SPEVALCRSETREF");

                entity.Property(e => e.Spevalficheref).HasColumnName("SPEVALFICHEREF");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Time).HasColumnName("TIME_");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Suppevaltrset>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SUPPEVALTRSET_I1");

                entity.ToTable("LG_001_SUPPEVALTRSET");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Score).HasColumnName("SCORE");

                entity.Property(e => e.Spevalcrref).HasColumnName("SPEVALCRREF");

                entity.Property(e => e.Spevalcrsetref).HasColumnName("SPEVALCRSETREF");

                entity.Property(e => e.Spevalficheref).HasColumnName("SPEVALFICHEREF");

                entity.Property(e => e.Spevaltransref).HasColumnName("SPEVALTRANSREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Weight).HasColumnName("WEIGHT");
            });

            modelBuilder.Entity<Lg001Suppevaltrsub>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_SUPPEVALTRSUB_I1");

                entity.ToTable("LG_001_SUPPEVALTRSUB");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Score).HasColumnName("SCORE");

                entity.Property(e => e.Spevalcrlnref).HasColumnName("SPEVALCRLNREF");

                entity.Property(e => e.Spevalcrref).HasColumnName("SPEVALCRREF");

                entity.Property(e => e.Spevalcrsetlnref).HasColumnName("SPEVALCRSETLNREF");

                entity.Property(e => e.Spevalcrsetref).HasColumnName("SPEVALCRSETREF");

                entity.Property(e => e.Spevalficheref).HasColumnName("SPEVALFICHEREF");

                entity.Property(e => e.Spevaltransref).HasColumnName("SPEVALTRANSREF");

                entity.Property(e => e.Spevaltrsetref).HasColumnName("SPEVALTRSETREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Weight).HasColumnName("WEIGHT");
            });

            modelBuilder.Entity<Lg001Target>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_TARGETS_I1");

                entity.ToTable("LG_001_TARGETS");

                entity.HasIndex(e => new { e.Salesmanref, e.Code }, "I001_TARGETS_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Salesmanref, e.Definition }, "I001_TARGETS_I3");

                entity.HasIndex(e => e.Salesmanref, "I001_TARGETS_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Netsaleamount).HasColumnName("NETSALEAMOUNT");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Saleamountlimit).HasColumnName("SALEAMOUNTLIMIT");

                entity.Property(e => e.Salediscountlimit).HasColumnName("SALEDISCOUNTLIMIT");

                entity.Property(e => e.Saleexpenselimit).HasColumnName("SALEEXPENSELIMIT");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Stcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("STCODE");

                entity.Property(e => e.Stgroupcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("STGROUPCODE");

                entity.Property(e => e.Targetsaleamount).HasColumnName("TARGETSALEAMOUNT");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<Lg001Taxdeclhdr>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_TAXDECLHDR_I1");

                entity.ToTable("LG_001_TAXDECLHDR");

                entity.HasIndex(e => new { e.Typ, e.Taxdeclno }, "I001_TAXDECLHDR_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Typ, e.Begdt }, "I001_TAXDECLHDR_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Activitysub)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVITYSUB");

                entity.Property(e => e.Activitysub2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACTIVITYSUB2");

                entity.Property(e => e.AgentinfBagkurnr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("AGENTINF_BAGKURNR");

                entity.Property(e => e.AgentinfCitytelcd)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("AGENTINF_CITYTELCD");

                entity.Property(e => e.AgentinfEmailadd)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("AGENTINF_EMAILADD");

                entity.Property(e => e.AgentinfIdennr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("AGENTINF_IDENNR");

                entity.Property(e => e.AgentinfName)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("AGENTINF_NAME");

                entity.Property(e => e.AgentinfSurname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("AGENTINF_SURNAME");

                entity.Property(e => e.AgentinfTaxidnr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("AGENTINF_TAXIDNR");

                entity.Property(e => e.AgentinfTelnr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("AGENTINF_TELNR");

                entity.Property(e => e.AgentinfTrdregisnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("AGENTINF_TRDREGISNR");

                entity.Property(e => e.Begdt)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDT");

                entity.Property(e => e.Begmonth).HasColumnName("BEGMONTH");

                entity.Property(e => e.Bmailbcc)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("BMAILBCC");

                entity.Property(e => e.Bmailcc)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("BMAILCC");

                entity.Property(e => e.Bmailto)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("BMAILTO");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Byntyp).HasColumnName("BYNTYP");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Enddt)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDT");

                entity.Property(e => e.Kistdt).HasColumnName("KISTDT");

                entity.Property(e => e.Kistreason).HasColumnName("KISTREASON");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Othservtot).HasColumnName("OTHSERVTOT");

                entity.Property(e => e.Patsahdurum).HasColumnName("PATSAHDURUM");

                entity.Property(e => e.PayerinfBagkurnr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PAYERINF_BAGKURNR");

                entity.Property(e => e.PayerinfCitytelcd)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PAYERINF_CITYTELCD");

                entity.Property(e => e.PayerinfEmailadd)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("PAYERINF_EMAILADD");

                entity.Property(e => e.PayerinfIdennr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PAYERINF_IDENNR");

                entity.Property(e => e.PayerinfName)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PAYERINF_NAME");

                entity.Property(e => e.PayerinfSurname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PAYERINF_SURNAME");

                entity.Property(e => e.PayerinfTaxidnr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PAYERINF_TAXIDNR");

                entity.Property(e => e.PayerinfTelnr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PAYERINF_TELNR");

                entity.Property(e => e.PayerinfTrdregisnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("PAYERINF_TRDREGISNR");

                entity.Property(e => e.Pctrialtyp).HasColumnName("PCTRIALTYP");

                entity.Property(e => e.PerinfBagkurnr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PERINF_BAGKURNR");

                entity.Property(e => e.PerinfCitytelcd)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PERINF_CITYTELCD");

                entity.Property(e => e.PerinfEmailadd)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("PERINF_EMAILADD");

                entity.Property(e => e.PerinfIdennr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PERINF_IDENNR");

                entity.Property(e => e.PerinfName)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PERINF_NAME");

                entity.Property(e => e.PerinfSurname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PERINF_SURNAME");

                entity.Property(e => e.PerinfTaxidnr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PERINF_TAXIDNR");

                entity.Property(e => e.PerinfTelnr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PERINF_TELNR");

                entity.Property(e => e.PerinfTrdregisnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("PERINF_TRDREGISNR");

                entity.Property(e => e.Period).HasColumnName("PERIOD");

                entity.Property(e => e.Periodtyp).HasColumnName("PERIODTYP");

                entity.Property(e => e.PrepinfBagkurnr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PREPINF_BAGKURNR");

                entity.Property(e => e.PrepinfCitytelcd)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("PREPINF_CITYTELCD");

                entity.Property(e => e.PrepinfEmailadd)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("PREPINF_EMAILADD");

                entity.Property(e => e.PrepinfIdennr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PREPINF_IDENNR");

                entity.Property(e => e.PrepinfName)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PREPINF_NAME");

                entity.Property(e => e.PrepinfSurname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("PREPINF_SURNAME");

                entity.Property(e => e.PrepinfTaxidnr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("PREPINF_TAXIDNR");

                entity.Property(e => e.PrepinfTelnr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PREPINF_TELNR");

                entity.Property(e => e.PrepinfTrdregisnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("PREPINF_TRDREGISNR");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.SendinfBagkurnr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SENDINF_BAGKURNR");

                entity.Property(e => e.SendinfCitytelcd)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("SENDINF_CITYTELCD");

                entity.Property(e => e.SendinfEmailadd)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("SENDINF_EMAILADD");

                entity.Property(e => e.SendinfIdennr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SENDINF_IDENNR");

                entity.Property(e => e.SendinfName)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("SENDINF_NAME");

                entity.Property(e => e.SendinfSurname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("SENDINF_SURNAME");

                entity.Property(e => e.SendinfTaxidnr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("SENDINF_TAXIDNR");

                entity.Property(e => e.SendinfTelnr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SENDINF_TELNR");

                entity.Property(e => e.SendinfTrdregisnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("SENDINF_TRDREGISNR");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Taxdeclaphbchk).HasColumnName("TAXDECLAPHBCHK");

                entity.Property(e => e.Taxdeclbranchn)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("TAXDECLBRANCHN");

                entity.Property(e => e.Taxdeclchk).HasColumnName("TAXDECLCHK");

                entity.Property(e => e.Taxdeclid).HasColumnName("TAXDECLID");

                entity.Property(e => e.Taxdeclm19).HasColumnName("TAXDECLM19");

                entity.Property(e => e.Taxdeclm20).HasColumnName("TAXDECLM20");

                entity.Property(e => e.Taxdeclno)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TAXDECLNO");

                entity.Property(e => e.Taxdeclradio).HasColumnName("TAXDECLRADIO");

                entity.Property(e => e.Taxdeclsgkchk).HasColumnName("TAXDECLSGKCHK");

                entity.Property(e => e.Taxdeclvers).HasColumnName("TAXDECLVERS");

                entity.Property(e => e.Taxoffcode)
                    .HasMaxLength(7)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFFCODE");

                entity.Property(e => e.Tcvrgno)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TCVRGNO");

                entity.Property(e => e.Transferstatus).HasColumnName("TRANSFERSTATUS");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");

                entity.Property(e => e.Workercnt).HasColumnName("WORKERCNT");

                entity.Property(e => e.Year).HasColumnName("YEAR_");

                entity.Property(e => e.YmminfBagkurnr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("YMMINF_BAGKURNR");

                entity.Property(e => e.YmminfCitytelcd)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("YMMINF_CITYTELCD");

                entity.Property(e => e.YmminfEmailadd)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("YMMINF_EMAILADD");

                entity.Property(e => e.YmminfIdennr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("YMMINF_IDENNR");

                entity.Property(e => e.YmminfName)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("YMMINF_NAME");

                entity.Property(e => e.YmminfSurname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("YMMINF_SURNAME");

                entity.Property(e => e.YmminfTaxidnr)
                    .HasMaxLength(12)
                    .IsUnicode(false)
                    .HasColumnName("YMMINF_TAXIDNR");

                entity.Property(e => e.YmminfTelnr)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("YMMINF_TELNR");

                entity.Property(e => e.YmminfTrdregisnr)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("YMMINF_TRDREGISNR");
            });

            modelBuilder.Entity<Lg001Taxdeclline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_TAXDECLLINE_I1");

                entity.ToTable("LG_001_TAXDECLLINE");

                entity.HasIndex(e => new { e.Taxdeclref, e.Listtyp, e.Linenr }, "I001_TAXDECLLINE_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accarr10Acctype).HasColumnName("ACCARR10_ACCTYPE");

                entity.Property(e => e.Accarr10Begcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR10_BEGCODE");

                entity.Property(e => e.Accarr10Endcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR10_ENDCODE");

                entity.Property(e => e.Accarr10Formula)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR10_FORMULA");

                entity.Property(e => e.Accarr10Itemcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR10_ITEMCODE");

                entity.Property(e => e.Accarr10Itemlevel).HasColumnName("ACCARR10_ITEMLEVEL");

                entity.Property(e => e.Accarr10Itemname)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR10_ITEMNAME");

                entity.Property(e => e.Accarr10Itemtype).HasColumnName("ACCARR10_ITEMTYPE");

                entity.Property(e => e.Accarr10Remtype).HasColumnName("ACCARR10_REMTYPE");

                entity.Property(e => e.Accarr10Total).HasColumnName("ACCARR10_TOTAL");

                entity.Property(e => e.Accarr10Tottype).HasColumnName("ACCARR10_TOTTYPE");

                entity.Property(e => e.Accarr1Acctype).HasColumnName("ACCARR1_ACCTYPE");

                entity.Property(e => e.Accarr1Begcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR1_BEGCODE");

                entity.Property(e => e.Accarr1Endcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR1_ENDCODE");

                entity.Property(e => e.Accarr1Formula)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR1_FORMULA");

                entity.Property(e => e.Accarr1Itemcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR1_ITEMCODE");

                entity.Property(e => e.Accarr1Itemlevel).HasColumnName("ACCARR1_ITEMLEVEL");

                entity.Property(e => e.Accarr1Itemname)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR1_ITEMNAME");

                entity.Property(e => e.Accarr1Itemtype).HasColumnName("ACCARR1_ITEMTYPE");

                entity.Property(e => e.Accarr1Remtype).HasColumnName("ACCARR1_REMTYPE");

                entity.Property(e => e.Accarr1Total).HasColumnName("ACCARR1_TOTAL");

                entity.Property(e => e.Accarr1Tottype).HasColumnName("ACCARR1_TOTTYPE");

                entity.Property(e => e.Accarr2Acctype).HasColumnName("ACCARR2_ACCTYPE");

                entity.Property(e => e.Accarr2Begcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR2_BEGCODE");

                entity.Property(e => e.Accarr2Endcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR2_ENDCODE");

                entity.Property(e => e.Accarr2Formula)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR2_FORMULA");

                entity.Property(e => e.Accarr2Itemcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR2_ITEMCODE");

                entity.Property(e => e.Accarr2Itemlevel).HasColumnName("ACCARR2_ITEMLEVEL");

                entity.Property(e => e.Accarr2Itemname)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR2_ITEMNAME");

                entity.Property(e => e.Accarr2Itemtype).HasColumnName("ACCARR2_ITEMTYPE");

                entity.Property(e => e.Accarr2Remtype).HasColumnName("ACCARR2_REMTYPE");

                entity.Property(e => e.Accarr2Total).HasColumnName("ACCARR2_TOTAL");

                entity.Property(e => e.Accarr2Tottype).HasColumnName("ACCARR2_TOTTYPE");

                entity.Property(e => e.Accarr3Acctype).HasColumnName("ACCARR3_ACCTYPE");

                entity.Property(e => e.Accarr3Begcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR3_BEGCODE");

                entity.Property(e => e.Accarr3Endcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR3_ENDCODE");

                entity.Property(e => e.Accarr3Formula)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR3_FORMULA");

                entity.Property(e => e.Accarr3Itemcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR3_ITEMCODE");

                entity.Property(e => e.Accarr3Itemlevel).HasColumnName("ACCARR3_ITEMLEVEL");

                entity.Property(e => e.Accarr3Itemname)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR3_ITEMNAME");

                entity.Property(e => e.Accarr3Itemtype).HasColumnName("ACCARR3_ITEMTYPE");

                entity.Property(e => e.Accarr3Remtype).HasColumnName("ACCARR3_REMTYPE");

                entity.Property(e => e.Accarr3Total).HasColumnName("ACCARR3_TOTAL");

                entity.Property(e => e.Accarr3Tottype).HasColumnName("ACCARR3_TOTTYPE");

                entity.Property(e => e.Accarr4Acctype).HasColumnName("ACCARR4_ACCTYPE");

                entity.Property(e => e.Accarr4Begcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR4_BEGCODE");

                entity.Property(e => e.Accarr4Endcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR4_ENDCODE");

                entity.Property(e => e.Accarr4Formula)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR4_FORMULA");

                entity.Property(e => e.Accarr4Itemcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR4_ITEMCODE");

                entity.Property(e => e.Accarr4Itemlevel).HasColumnName("ACCARR4_ITEMLEVEL");

                entity.Property(e => e.Accarr4Itemname)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR4_ITEMNAME");

                entity.Property(e => e.Accarr4Itemtype).HasColumnName("ACCARR4_ITEMTYPE");

                entity.Property(e => e.Accarr4Remtype).HasColumnName("ACCARR4_REMTYPE");

                entity.Property(e => e.Accarr4Total).HasColumnName("ACCARR4_TOTAL");

                entity.Property(e => e.Accarr4Tottype).HasColumnName("ACCARR4_TOTTYPE");

                entity.Property(e => e.Accarr5Acctype).HasColumnName("ACCARR5_ACCTYPE");

                entity.Property(e => e.Accarr5Begcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR5_BEGCODE");

                entity.Property(e => e.Accarr5Endcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR5_ENDCODE");

                entity.Property(e => e.Accarr5Formula)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR5_FORMULA");

                entity.Property(e => e.Accarr5Itemcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR5_ITEMCODE");

                entity.Property(e => e.Accarr5Itemlevel).HasColumnName("ACCARR5_ITEMLEVEL");

                entity.Property(e => e.Accarr5Itemname)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR5_ITEMNAME");

                entity.Property(e => e.Accarr5Itemtype).HasColumnName("ACCARR5_ITEMTYPE");

                entity.Property(e => e.Accarr5Remtype).HasColumnName("ACCARR5_REMTYPE");

                entity.Property(e => e.Accarr5Total).HasColumnName("ACCARR5_TOTAL");

                entity.Property(e => e.Accarr5Tottype).HasColumnName("ACCARR5_TOTTYPE");

                entity.Property(e => e.Accarr6Acctype).HasColumnName("ACCARR6_ACCTYPE");

                entity.Property(e => e.Accarr6Begcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR6_BEGCODE");

                entity.Property(e => e.Accarr6Endcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR6_ENDCODE");

                entity.Property(e => e.Accarr6Formula)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR6_FORMULA");

                entity.Property(e => e.Accarr6Itemcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR6_ITEMCODE");

                entity.Property(e => e.Accarr6Itemlevel).HasColumnName("ACCARR6_ITEMLEVEL");

                entity.Property(e => e.Accarr6Itemname)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR6_ITEMNAME");

                entity.Property(e => e.Accarr6Itemtype).HasColumnName("ACCARR6_ITEMTYPE");

                entity.Property(e => e.Accarr6Remtype).HasColumnName("ACCARR6_REMTYPE");

                entity.Property(e => e.Accarr6Total).HasColumnName("ACCARR6_TOTAL");

                entity.Property(e => e.Accarr6Tottype).HasColumnName("ACCARR6_TOTTYPE");

                entity.Property(e => e.Accarr7Acctype).HasColumnName("ACCARR7_ACCTYPE");

                entity.Property(e => e.Accarr7Begcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR7_BEGCODE");

                entity.Property(e => e.Accarr7Endcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR7_ENDCODE");

                entity.Property(e => e.Accarr7Formula)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR7_FORMULA");

                entity.Property(e => e.Accarr7Itemcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR7_ITEMCODE");

                entity.Property(e => e.Accarr7Itemlevel).HasColumnName("ACCARR7_ITEMLEVEL");

                entity.Property(e => e.Accarr7Itemname)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR7_ITEMNAME");

                entity.Property(e => e.Accarr7Itemtype).HasColumnName("ACCARR7_ITEMTYPE");

                entity.Property(e => e.Accarr7Remtype).HasColumnName("ACCARR7_REMTYPE");

                entity.Property(e => e.Accarr7Total).HasColumnName("ACCARR7_TOTAL");

                entity.Property(e => e.Accarr7Tottype).HasColumnName("ACCARR7_TOTTYPE");

                entity.Property(e => e.Accarr8Acctype).HasColumnName("ACCARR8_ACCTYPE");

                entity.Property(e => e.Accarr8Begcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR8_BEGCODE");

                entity.Property(e => e.Accarr8Endcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR8_ENDCODE");

                entity.Property(e => e.Accarr8Formula)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR8_FORMULA");

                entity.Property(e => e.Accarr8Itemcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR8_ITEMCODE");

                entity.Property(e => e.Accarr8Itemlevel).HasColumnName("ACCARR8_ITEMLEVEL");

                entity.Property(e => e.Accarr8Itemname)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR8_ITEMNAME");

                entity.Property(e => e.Accarr8Itemtype).HasColumnName("ACCARR8_ITEMTYPE");

                entity.Property(e => e.Accarr8Remtype).HasColumnName("ACCARR8_REMTYPE");

                entity.Property(e => e.Accarr8Total).HasColumnName("ACCARR8_TOTAL");

                entity.Property(e => e.Accarr8Tottype).HasColumnName("ACCARR8_TOTTYPE");

                entity.Property(e => e.Accarr9Acctype).HasColumnName("ACCARR9_ACCTYPE");

                entity.Property(e => e.Accarr9Begcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR9_BEGCODE");

                entity.Property(e => e.Accarr9Endcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR9_ENDCODE");

                entity.Property(e => e.Accarr9Formula)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR9_FORMULA");

                entity.Property(e => e.Accarr9Itemcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR9_ITEMCODE");

                entity.Property(e => e.Accarr9Itemlevel).HasColumnName("ACCARR9_ITEMLEVEL");

                entity.Property(e => e.Accarr9Itemname)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ACCARR9_ITEMNAME");

                entity.Property(e => e.Accarr9Itemtype).HasColumnName("ACCARR9_ITEMTYPE");

                entity.Property(e => e.Accarr9Remtype).HasColumnName("ACCARR9_REMTYPE");

                entity.Property(e => e.Accarr9Total).HasColumnName("ACCARR9_TOTAL");

                entity.Property(e => e.Accarr9Tottype).HasColumnName("ACCARR9_TOTTYPE");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.Dtarr1)
                    .HasColumnType("datetime")
                    .HasColumnName("DTARR1");

                entity.Property(e => e.Dtarr2)
                    .HasColumnType("datetime")
                    .HasColumnName("DTARR2");

                entity.Property(e => e.Dtarr3)
                    .HasColumnType("datetime")
                    .HasColumnName("DTARR3");

                entity.Property(e => e.Intarr1).HasColumnName("INTARR1");

                entity.Property(e => e.Intarr2).HasColumnName("INTARR2");

                entity.Property(e => e.Intarr3).HasColumnName("INTARR3");

                entity.Property(e => e.Intarr4).HasColumnName("INTARR4");

                entity.Property(e => e.Intarr5).HasColumnName("INTARR5");

                entity.Property(e => e.Intarr6).HasColumnName("INTARR6");

                entity.Property(e => e.Intarr7).HasColumnName("INTARR7");

                entity.Property(e => e.Itemamounts)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("ITEMAMOUNTS");

                entity.Property(e => e.Itemdefs)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("ITEMDEFS");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Listtyp).HasColumnName("LISTTYP");

                entity.Property(e => e.Numarr1).HasColumnName("NUMARR1");

                entity.Property(e => e.Numarr10).HasColumnName("NUMARR10");

                entity.Property(e => e.Numarr11).HasColumnName("NUMARR11");

                entity.Property(e => e.Numarr12).HasColumnName("NUMARR12");

                entity.Property(e => e.Numarr13).HasColumnName("NUMARR13");

                entity.Property(e => e.Numarr14).HasColumnName("NUMARR14");

                entity.Property(e => e.Numarr15).HasColumnName("NUMARR15");

                entity.Property(e => e.Numarr2).HasColumnName("NUMARR2");

                entity.Property(e => e.Numarr3).HasColumnName("NUMARR3");

                entity.Property(e => e.Numarr4).HasColumnName("NUMARR4");

                entity.Property(e => e.Numarr5).HasColumnName("NUMARR5");

                entity.Property(e => e.Numarr6).HasColumnName("NUMARR6");

                entity.Property(e => e.Numarr7).HasColumnName("NUMARR7");

                entity.Property(e => e.Numarr8).HasColumnName("NUMARR8");

                entity.Property(e => e.Numarr9).HasColumnName("NUMARR9");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Taxassessmenttype).HasColumnName("TAXASSESSMENTTYPE");

                entity.Property(e => e.Taxdecchck1).HasColumnName("TAXDECCHCK1");

                entity.Property(e => e.Taxdecchck2).HasColumnName("TAXDECCHCK2");

                entity.Property(e => e.Taxdecchck3).HasColumnName("TAXDECCHCK3");

                entity.Property(e => e.Taxdecchck4).HasColumnName("TAXDECCHCK4");

                entity.Property(e => e.Taxdeclref).HasColumnName("TAXDECLREF");

                entity.Property(e => e.Txtarr1)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR1");

                entity.Property(e => e.Txtarr10)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR10");

                entity.Property(e => e.Txtarr11)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR11");

                entity.Property(e => e.Txtarr12)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR12");

                entity.Property(e => e.Txtarr13)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR13");

                entity.Property(e => e.Txtarr14)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR14");

                entity.Property(e => e.Txtarr15)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR15");

                entity.Property(e => e.Txtarr16)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR16");

                entity.Property(e => e.Txtarr17)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR17");

                entity.Property(e => e.Txtarr18)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR18");

                entity.Property(e => e.Txtarr19)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR19");

                entity.Property(e => e.Txtarr2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR2");

                entity.Property(e => e.Txtarr20)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR20");

                entity.Property(e => e.Txtarr21)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR21");

                entity.Property(e => e.Txtarr22)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR22");

                entity.Property(e => e.Txtarr23)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR23");

                entity.Property(e => e.Txtarr24)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR24");

                entity.Property(e => e.Txtarr25)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR25");

                entity.Property(e => e.Txtarr3)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR3");

                entity.Property(e => e.Txtarr4)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR4");

                entity.Property(e => e.Txtarr5)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR5");

                entity.Property(e => e.Txtarr6)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR6");

                entity.Property(e => e.Txtarr7)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR7");

                entity.Property(e => e.Txtarr8)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR8");

                entity.Property(e => e.Txtarr9)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("TXTARR9");
            });

            modelBuilder.Entity<Lg001Taxdecllineacc>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_TAXDECLLINEACC_I1");

                entity.ToTable("LG_001_TAXDECLLINEACC");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Fieldnr).HasColumnName("FIELDNR");

                entity.Property(e => e.Issubacc).HasColumnName("ISSUBACC");

                entity.Property(e => e.Taxdeclhdref).HasColumnName("TAXDECLHDREF");

                entity.Property(e => e.Taxdecllnref).HasColumnName("TAXDECLLNREF");
            });

            modelBuilder.Entity<Lg001Toolreq>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_TOOLREQ_I1");

                entity.ToTable("LG_001_TOOLREQ");

                entity.HasIndex(e => new { e.Opreqref, e.Lineno, e.Tooltype, e.Revref, e.Toolref }, "I001_TOOLREQ_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Operationref).HasColumnName("OPERATIONREF");

                entity.Property(e => e.Opreqref).HasColumnName("OPREQREF");

                entity.Property(e => e.Revref).HasColumnName("REVREF");

                entity.Property(e => e.Toolref).HasColumnName("TOOLREF");

                entity.Property(e => e.Tooltype).HasColumnName("TOOLTYPE");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");
            });

            modelBuilder.Entity<Lg001Tradgrpayplancon>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_TRADGRPAYPLANCON_I1");

                entity.ToTable("LG_001_TRADGRPAYPLANCON");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Payplanref).HasColumnName("PAYPLANREF");

                entity.Property(e => e.Trdgrpref).HasColumnName("TRDGRPREF");
            });

            modelBuilder.Entity<Lg001Trgpar>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_TRGPAR_I1");

                entity.ToTable("LG_001_TRGPAR");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accriskover).HasColumnName("ACCRISKOVER");

                entity.Property(e => e.Collriskover).HasColumnName("COLLRISKOVER");

                entity.Property(e => e.Collrisktype).HasColumnName("COLLRISKTYPE");

                entity.Property(e => e.Cstcsciroriskover).HasColumnName("CSTCSCIRORISKOVER");

                entity.Property(e => e.Cstcsriskover).HasColumnName("CSTCSRISKOVER");

                entity.Property(e => e.Despcollriskover).HasColumnName("DESPCOLLRISKOVER");

                entity.Property(e => e.Despriskover).HasColumnName("DESPRISKOVER");

                entity.Property(e => e.Despriskoversugg).HasColumnName("DESPRISKOVERSUGG");

                entity.Property(e => e.Firmcalendartype).HasColumnName("FIRMCALENDARTYPE");

                entity.Property(e => e.Firmrepcurr).HasColumnName("FIRMREPCURR");

                entity.Property(e => e.Mycsriskover).HasColumnName("MYCSRISKOVER");

                entity.Property(e => e.Ordcollriskover).HasColumnName("ORDCOLLRISKOVER");

                entity.Property(e => e.Ordriskover).HasColumnName("ORDRISKOVER");

                entity.Property(e => e.Ordriskoversugg).HasColumnName("ORDRISKOVERSUGG");

                entity.Property(e => e.Preturneffectorder).HasColumnName("PRETURNEFFECTORDER");

                entity.Property(e => e.Riskctrltype).HasColumnName("RISKCTRLTYPE");

                entity.Property(e => e.Riskgrpctrl).HasColumnName("RISKGRPCTRL");

                entity.Property(e => e.Riskover).HasColumnName("RISKOVER");

                entity.Property(e => e.Risktype).HasColumnName("RISKTYPE");

                entity.Property(e => e.Risktypes1).HasColumnName("RISKTYPES1");

                entity.Property(e => e.Risktypes10).HasColumnName("RISKTYPES10");

                entity.Property(e => e.Risktypes11).HasColumnName("RISKTYPES11");

                entity.Property(e => e.Risktypes12).HasColumnName("RISKTYPES12");

                entity.Property(e => e.Risktypes13).HasColumnName("RISKTYPES13");

                entity.Property(e => e.Risktypes14).HasColumnName("RISKTYPES14");

                entity.Property(e => e.Risktypes15).HasColumnName("RISKTYPES15");

                entity.Property(e => e.Risktypes2).HasColumnName("RISKTYPES2");

                entity.Property(e => e.Risktypes3).HasColumnName("RISKTYPES3");

                entity.Property(e => e.Risktypes4).HasColumnName("RISKTYPES4");

                entity.Property(e => e.Risktypes5).HasColumnName("RISKTYPES5");

                entity.Property(e => e.Risktypes6).HasColumnName("RISKTYPES6");

                entity.Property(e => e.Risktypes7).HasColumnName("RISKTYPES7");

                entity.Property(e => e.Risktypes8).HasColumnName("RISKTYPES8");

                entity.Property(e => e.Risktypes9).HasColumnName("RISKTYPES9");

                entity.Property(e => e.Sreturneffectorder).HasColumnName("SRETURNEFFECTORDER");

                entity.Property(e => e.Userepcollrisk).HasColumnName("USEREPCOLLRISK");

                entity.Property(e => e.Usereprisk).HasColumnName("USEREPRISK");
            });

            modelBuilder.Entity<Lg001Tsksheln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_TSKSHELN_I1");

                entity.ToTable("LG_001_TSKSHELN");

                entity.HasIndex(e => new { e.Taskref, e.Linenr, e.Logicalref }, "I001_TSKSHELN_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Approxtime)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("APPROXTIME");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Oldtask)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("OLDTASK");

                entity.Property(e => e.Taskref).HasColumnName("TASKREF");

                entity.Property(e => e.Tsbeginalert).HasColumnName("TSBEGINALERT");

                entity.Property(e => e.Tsendalert).HasColumnName("TSENDALERT");

                entity.Property(e => e.Tslevel).HasColumnName("TSLEVEL");

                entity.Property(e => e.Tsparams)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("TSPARAMS");

                entity.Property(e => e.Tsprocessid).HasColumnName("TSPROCESSID");

                entity.Property(e => e.Tsprocessname)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("TSPROCESSNAME");

                entity.Property(e => e.Tswaittime).HasColumnName("TSWAITTIME");
            });

            modelBuilder.Entity<Lg001Ucostcontrol>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_UCOSTCONTROL_I1");

                entity.ToTable("LG_001_UCOSTCONTROL");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Actiontype).HasColumnName("ACTIONTYPE");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Categoryname)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("CATEGORYNAME");

                entity.Property(e => e.Controltype).HasColumnName("CONTROLTYPE");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Methodname)
                    .HasMaxLength(256)
                    .IsUnicode(false)
                    .HasColumnName("METHODNAME");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Successtype).HasColumnName("SUCCESSTYPE");
            });

            modelBuilder.Entity<Lg001Unitbarcode>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_UNITBARCODE_I1");

                entity.ToTable("LG_001_UNITBARCODE");

                entity.HasIndex(e => new { e.Itmunitaref, e.Typ, e.Linenr }, "I001_UNITBARCODE_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Itemref, e.Variantref, e.Unitlineref, e.Typ, e.Linenr }, "I001_UNITBARCODE_I3")
                    .IsUnique();

                entity.HasIndex(e => e.Barcode, "I001_UNITBARCODE_I4")
                    .IsUnique();

                entity.HasIndex(e => e.Globalid, "I001_UNITBARCODE_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Barcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("BARCODE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Itmunitaref).HasColumnName("ITMUNITAREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Unitlineref).HasColumnName("UNITLINEREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Wbarcodeshift).HasColumnName("WBARCODESHIFT");
            });

            modelBuilder.Entity<Lg001Unitsetc>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_UNITSETC_I1");

                entity.ToTable("LG_001_UNITSETC");

                entity.HasIndex(e => new { e.Parentusref, e.Childusref }, "I001_UNITSETC_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Childusref).HasColumnName("CHILDUSREF");

                entity.Property(e => e.Convfact1).HasColumnName("CONVFACT1");

                entity.Property(e => e.Convfact2).HasColumnName("CONVFACT2");

                entity.Property(e => e.Parentusref).HasColumnName("PARENTUSREF");
            });

            modelBuilder.Entity<Lg001Unitsetf>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_UNITSETF_I1");

                entity.ToTable("LG_001_UNITSETF");

                entity.HasIndex(e => e.Code, "I001_UNITSETF_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_UNITSETF_I3");

                entity.HasIndex(e => new { e.Cardtype, e.Code }, "I001_UNITSETF_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Name }, "I001_UNITSETF_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specitem).HasColumnName("SPECITEM");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Unitsetl>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_UNITSETL_I1");

                entity.ToTable("LG_001_UNITSETL");

                entity.HasIndex(e => e.Code, "I001_UNITSETL_I2");

                entity.HasIndex(e => e.Name, "I001_UNITSETL_I3");

                entity.HasIndex(e => new { e.Unitsetref, e.Linenr }, "I001_UNITSETL_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Area).HasColumnName("AREA");

                entity.Property(e => e.Arearef).HasColumnName("AREAREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Convfact1).HasColumnName("CONVFACT1");

                entity.Property(e => e.Convfact2).HasColumnName("CONVFACT2");

                entity.Property(e => e.Divunit).HasColumnName("DIVUNIT");

                entity.Property(e => e.Globalcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALCODE");

                entity.Property(e => e.Height).HasColumnName("HEIGHT");

                entity.Property(e => e.Heightref).HasColumnName("HEIGHTREF");

                entity.Property(e => e.Length).HasColumnName("LENGTH");

                entity.Property(e => e.Lengthref).HasColumnName("LENGTHREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Mainunit).HasColumnName("MAINUNIT");

                entity.Property(e => e.Measurecode)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("MEASURECODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Unitsetref).HasColumnName("UNITSETREF");

                entity.Property(e => e.Volume).HasColumnName("VOLUME_");

                entity.Property(e => e.Volumeref).HasColumnName("VOLUMEREF");

                entity.Property(e => e.Weight).HasColumnName("WEIGHT");

                entity.Property(e => e.Weightref).HasColumnName("WEIGHTREF");

                entity.Property(e => e.Width).HasColumnName("WIDTH");

                entity.Property(e => e.Widthref).HasColumnName("WIDTHREF");
            });

            modelBuilder.Entity<Lg001Utilinvmtch>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_UTILINVMTCH_I1");

                entity.ToTable("LG_001_UTILINVMTCH");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Agginvoice).HasColumnName("AGGINVOICE");

                entity.Property(e => e.Basedonsrvno).HasColumnName("BASEDONSRVNO");

                entity.Property(e => e.Basedontaxrate).HasColumnName("BASEDONTAXRATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Invclientref).HasColumnName("INVCLIENTREF");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");
            });

            modelBuilder.Entity<Lg001Utilinvmtchln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_UTILINVMTCHLN_I1");

                entity.ToTable("LG_001_UTILINVMTCHLN");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Serviceno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SERVICENO");

                entity.Property(e => e.Serviceref).HasColumnName("SERVICEREF");

                entity.Property(e => e.Taxrate).HasColumnName("TAXRATE");

                entity.Property(e => e.Uimtchtblref).HasColumnName("UIMTCHTBLREF");
            });

            modelBuilder.Entity<Lg001Variant>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_VARIANT_I1");

                entity.ToTable("LG_001_VARIANT");

                entity.HasIndex(e => new { e.Itemref, e.Code }, "I001_VARIANT_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Itemref, e.Name }, "I001_VARIANT_I3");

                entity.HasIndex(e => new { e.Itemref, e.Active, e.Code }, "I001_VARIANT_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Itemref, e.Active, e.Name }, "I001_VARIANT_I5");

                entity.HasIndex(e => new { e.Active, e.Itemref, e.Code, e.Name }, "I001_VARIANT_I6");

                entity.HasIndex(e => e.Itemref, "I001_VARIANT_I7");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Createdin).HasColumnName("CREATEDIN");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Gtipcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("GTIPCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Image2inc).HasColumnName("IMAGE2INC");

                entity.Property(e => e.Imageinc).HasColumnName("IMAGEINC");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Name2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Pordamnttolerance).HasColumnName("PORDAMNTTOLERANCE");

                entity.Property(e => e.Producercode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PRODUCERCODE");

                entity.Property(e => e.Qccsetref).HasColumnName("QCCSETREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sordamnttolerance).HasColumnName("SORDAMNTTOLERANCE");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Specode3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE3");

                entity.Property(e => e.Specode4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE4");

                entity.Property(e => e.Specode5)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE5");

                entity.Property(e => e.Stgrpcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("STGRPCODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Unitsetref).HasColumnName("UNITSETREF");

                entity.Property(e => e.Usedinperiods).HasColumnName("USEDINPERIODS");
            });

            modelBuilder.Entity<Lg001Vehicleclship>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_VEHICLECLSHIP_I1");

                entity.ToTable("LG_001_VEHICLECLSHIP");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cango).HasColumnName("CANGO");

                entity.Property(e => e.Clcardref).HasColumnName("CLCARDREF");

                entity.Property(e => e.Daynr).HasColumnName("DAYNR");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Shipbegtime).HasColumnName("SHIPBEGTIME");

                entity.Property(e => e.Shipendtime).HasColumnName("SHIPENDTIME");

                entity.Property(e => e.Shipinforef).HasColumnName("SHIPINFOREF");

                entity.Property(e => e.Vehicleref).HasColumnName("VEHICLEREF");
            });

            modelBuilder.Entity<Lg001Vehiclewhouse>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_VEHICLEWHOUSE_I1");

                entity.ToTable("LG_001_VEHICLEWHOUSE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Daynr).HasColumnName("DAYNR");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Shipbegtime).HasColumnName("SHIPBEGTIME");

                entity.Property(e => e.Shipendtime).HasColumnName("SHIPENDTIME");

                entity.Property(e => e.Vehicleref).HasColumnName("VEHICLEREF");

                entity.Property(e => e.Whousenr).HasColumnName("WHOUSENR");
            });

            modelBuilder.Entity<Lg001Vrntcharasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_VRNTCHARASGN_I1");

                entity.ToTable("LG_001_VRNTCHARASGN");

                entity.HasIndex(e => new { e.Variantref, e.Charcoderef, e.Charvalref }, "I001_VRNTCHARASGN_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Variantref, e.Linenr }, "I001_VRNTCHARASGN_I3");

                entity.HasIndex(e => new { e.Itemref, e.Variantref, e.Charcoderef, e.Charvalref }, "I001_VRNTCHARASGN_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Itemref, e.Variantref, e.Linenr }, "I001_VRNTCHARASGN_I5");

                entity.HasIndex(e => new { e.Charvalref, e.Charcoderef, e.Variantref }, "I001_VRNTCHARASGN_I6");

                entity.HasIndex(e => e.Variantref, "I001_VRNTCHARASGN_I7");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Charcoderef).HasColumnName("CHARCODEREF");

                entity.Property(e => e.Charvalref).HasColumnName("CHARVALREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lg001Vrntgenericinf>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_VRNTGENERICINF_I1");

                entity.ToTable("LG_001_VRNTGENERICINF");

                entity.HasIndex(e => new { e.Typ, e.Cardref }, "I001_VRNTGENERICINF_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Typ, e.Itemref }, "I001_VRNTGENERICINF_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Typ).HasColumnName("TYP");
            });

            modelBuilder.Entity<Lg001Wflowrole>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WFLOWROLE_I1");

                entity.ToTable("LG_001_WFLOWROLE");

                entity.HasIndex(e => e.Code, "I001_WFLOWROLE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_WFLOWROLE_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Wflowroleln>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WFLOWROLELN_I1");

                entity.ToTable("LG_001_WFLOWROLELN");

                entity.HasIndex(e => e.Wfroleref, "I001_WFLOWROLELN_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Wfroleref).HasColumnName("WFROLEREF");

                entity.Property(e => e.Wfusernr).HasColumnName("WFUSERNR");
            });

            modelBuilder.Entity<Lg001Wftask>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WFTASK_I1");

                entity.ToTable("LG_001_WFTASK");

                entity.HasIndex(e => e.Code, "I001_WFTASK_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Usernr, "I001_WFTASK_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Actenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ACTENDDATE");

                entity.Property(e => e.Actendtime).HasColumnName("ACTENDTIME");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Approvestat).HasColumnName("APPROVESTAT");

                entity.Property(e => e.Arrivals).HasColumnName("ARRIVALS");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Beginalert).HasColumnName("BEGINALERT");

                entity.Property(e => e.Beginmailgroup)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("BEGINMAILGROUP");

                entity.Property(e => e.Beginrepeatingdate).HasColumnName("BEGINREPEATINGDATE");

                entity.Property(e => e.Beginrepeatingtime).HasColumnName("BEGINREPEATINGTIME");

                entity.Property(e => e.Begtime).HasColumnName("BEGTIME");

                entity.Property(e => e.Begtotal).HasColumnName("BEGTOTAL");

                entity.Property(e => e.Bmailbcc)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("BMAILBCC");

                entity.Property(e => e.Bmailcc)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("BMAILCC");

                entity.Property(e => e.Bmailrole)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BMAILROLE");

                entity.Property(e => e.Bmailto)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("BMAILTO");

                entity.Property(e => e.Bmailuser)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BMAILUSER");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Collections).HasColumnName("COLLECTIONS");

                entity.Property(e => e.Completedper).HasColumnName("COMPLETEDPER");

                entity.Property(e => e.Definition)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Delaystatus).HasColumnName("DELAYSTATUS");

                entity.Property(e => e.Emailbcc)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILBCC");

                entity.Property(e => e.Emailcc)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILCC");

                entity.Property(e => e.Emailrole)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EMAILROLE");

                entity.Property(e => e.Emailto)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILTO");

                entity.Property(e => e.Emailuser)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EMAILUSER");

                entity.Property(e => e.Endalert).HasColumnName("ENDALERT");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Endmailgroup)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ENDMAILGROUP");

                entity.Property(e => e.Endrepeatingcount).HasColumnName("ENDREPEATINGCOUNT");

                entity.Property(e => e.Endrepeatingdate).HasColumnName("ENDREPEATINGDATE");

                entity.Property(e => e.Endrepeatingtime).HasColumnName("ENDREPEATINGTIME");

                entity.Property(e => e.Endrepeatingtype).HasColumnName("ENDREPEATINGTYPE");

                entity.Property(e => e.Endtime).HasColumnName("ENDTIME");

                entity.Property(e => e.Endtotal).HasColumnName("ENDTOTAL");

                entity.Property(e => e.Guid)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Issms).HasColumnName("ISSMS");

                entity.Property(e => e.Level).HasColumnName("LEVEL_");

                entity.Property(e => e.Mailtype).HasColumnName("MAILTYPE");

                entity.Property(e => e.Parenttaskref).HasColumnName("PARENTTASKREF");

                entity.Property(e => e.Payments).HasColumnName("PAYMENTS");

                entity.Property(e => e.Pertaskref).HasColumnName("PERTASKREF");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Processtype).HasColumnName("PROCESSTYPE");

                entity.Property(e => e.Procurements).HasColumnName("PROCUREMENTS");

                entity.Property(e => e.Recordcurop).HasColumnName("RECORDCUROP");

                entity.Property(e => e.Recordperiod).HasColumnName("RECORDPERIOD");

                entity.Property(e => e.Recordref).HasColumnName("RECORDREF");

                entity.Property(e => e.Remindcount).HasColumnName("REMINDCOUNT");

                entity.Property(e => e.Reminddate)
                    .HasColumnType("datetime")
                    .HasColumnName("REMINDDATE");

                entity.Property(e => e.Remindday).HasColumnName("REMINDDAY");

                entity.Property(e => e.Reminder).HasColumnName("REMINDER");

                entity.Property(e => e.Remindminute).HasColumnName("REMINDMINUTE");

                entity.Property(e => e.Remindtime).HasColumnName("REMINDTIME");

                entity.Property(e => e.Repdate).HasColumnName("REPDATE");

                entity.Property(e => e.Repday36).HasColumnName("REPDAY36");

                entity.Property(e => e.Repday6).HasColumnName("REPDAY6");

                entity.Property(e => e.Repday7).HasColumnName("REPDAY7");

                entity.Property(e => e.Repdayspin).HasColumnName("REPDAYSPIN");

                entity.Property(e => e.Repeattype).HasColumnName("REPEATTYPE");

                entity.Property(e => e.Rephourspin).HasColumnName("REPHOURSPIN");

                entity.Property(e => e.Repminspin).HasColumnName("REPMINSPIN");

                entity.Property(e => e.Repmonth).HasColumnName("REPMONTH");

                entity.Property(e => e.Repmonthspin).HasColumnName("REPMONTHSPIN");

                entity.Property(e => e.Reptime).HasColumnName("REPTIME");

                entity.Property(e => e.Repyearspin).HasColumnName("REPYEARSPIN");

                entity.Property(e => e.Sendmailreport).HasColumnName("SENDMAILREPORT");

                entity.Property(e => e.Sendwarn).HasColumnName("SENDWARN");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Taskdef)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("TASKDEF");

                entity.Property(e => e.Taskgrpnr).HasColumnName("TASKGRPNR");

                entity.Property(e => e.Taskparams).HasColumnName("TASKPARAMS");

                entity.Property(e => e.Tasktype).HasColumnName("TASKTYPE");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");

                entity.Property(e => e.Usesms).HasColumnName("USESMS");

                entity.Property(e => e.Waittime).HasColumnName("WAITTIME");

                entity.Property(e => e.Warned).HasColumnName("WARNED");

                entity.Property(e => e.Warnroleref).HasColumnName("WARNROLEREF");

                entity.Property(e => e.Warnsended).HasColumnName("WARNSENDED");

                entity.Property(e => e.Warntype).HasColumnName("WARNTYPE");

                entity.Property(e => e.Warnusernr).HasColumnName("WARNUSERNR");

                entity.Property(e => e.Wfcardref).HasColumnName("WFCARDREF");

                entity.Property(e => e.Wflineref).HasColumnName("WFLINEREF");

                entity.Property(e => e.Wfroleref).HasColumnName("WFROLEREF");

                entity.Property(e => e.Workplacetype).HasColumnName("WORKPLACETYPE");
            });

            modelBuilder.Entity<Lg001Wftaskper>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WFTASKPER_I1");

                entity.ToTable("LG_001_WFTASKPER");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Monthdays).HasColumnName("MONTHDAYS");

                entity.Property(e => e.Nonworkdays).HasColumnName("NONWORKDAYS");

                entity.Property(e => e.Period).HasColumnName("PERIOD");

                entity.Property(e => e.Periodenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("PERIODENDDATE");

                entity.Property(e => e.Periodtype).HasColumnName("PERIODTYPE");

                entity.Property(e => e.Weekdays).HasColumnName("WEEKDAYS");
            });

            modelBuilder.Entity<Lg001Whlist>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WHLIST_I1");

                entity.ToTable("LG_001_WHLIST");

                entity.HasIndex(e => e.Typ, "I001_WHLIST_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Whlist1)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST1");

                entity.Property(e => e.Whlist10)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST10");

                entity.Property(e => e.Whlist11)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST11");

                entity.Property(e => e.Whlist12)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST12");

                entity.Property(e => e.Whlist13)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST13");

                entity.Property(e => e.Whlist14)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST14");

                entity.Property(e => e.Whlist15)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST15");

                entity.Property(e => e.Whlist16)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST16");

                entity.Property(e => e.Whlist17)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST17");

                entity.Property(e => e.Whlist18)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST18");

                entity.Property(e => e.Whlist19)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST19");

                entity.Property(e => e.Whlist2)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST2");

                entity.Property(e => e.Whlist20)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST20");

                entity.Property(e => e.Whlist21)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST21");

                entity.Property(e => e.Whlist22)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST22");

                entity.Property(e => e.Whlist23)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST23");

                entity.Property(e => e.Whlist24)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST24");

                entity.Property(e => e.Whlist25)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST25");

                entity.Property(e => e.Whlist26)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST26");

                entity.Property(e => e.Whlist27)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST27");

                entity.Property(e => e.Whlist28)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST28");

                entity.Property(e => e.Whlist29)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST29");

                entity.Property(e => e.Whlist3)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST3");

                entity.Property(e => e.Whlist30)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST30");

                entity.Property(e => e.Whlist31)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST31");

                entity.Property(e => e.Whlist32)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST32");

                entity.Property(e => e.Whlist33)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST33");

                entity.Property(e => e.Whlist34)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST34");

                entity.Property(e => e.Whlist35)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST35");

                entity.Property(e => e.Whlist36)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST36");

                entity.Property(e => e.Whlist37)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST37");

                entity.Property(e => e.Whlist38)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST38");

                entity.Property(e => e.Whlist39)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST39");

                entity.Property(e => e.Whlist4)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST4");

                entity.Property(e => e.Whlist40)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST40");

                entity.Property(e => e.Whlist5)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST5");

                entity.Property(e => e.Whlist6)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST6");

                entity.Property(e => e.Whlist7)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST7");

                entity.Property(e => e.Whlist8)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST8");

                entity.Property(e => e.Whlist9)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WHLIST9");
            });

            modelBuilder.Entity<Lg001Workday>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WORKDAY_I1");

                entity.ToTable("LG_001_WORKDAY");

                entity.HasIndex(e => new { e.Factorynr, e.Factorydivnr }, "I001_WORKDAY_I2");

                entity.HasIndex(e => new { e.Siteid, e.Orglogicref }, "I001_WORKDAY_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.Begtime).HasColumnName("BEGTIME");

                entity.Property(e => e.Causeref).HasColumnName("CAUSEREF");

                entity.Property(e => e.Endtime).HasColumnName("ENDTIME");

                entity.Property(e => e.Explain)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EXPLAIN");

                entity.Property(e => e.Factorydivnr).HasColumnName("FACTORYDIVNR");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Restype).HasColumnName("RESTYPE");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Userno).HasColumnName("USERNO");

                entity.Property(e => e.Workingday).HasColumnName("WORKINGDAY");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg001Workflowcard>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WORKFLOWCARD_I1");

                entity.ToTable("LG_001_WORKFLOWCARD");

                entity.HasIndex(e => e.Code, "I001_WORKFLOWCARD_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_WORKFLOWCARD_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Actiontype).HasColumnName("ACTIONTYPE");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Begdate)
                    .HasColumnType("datetime")
                    .HasColumnName("BEGDATE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Condition)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("CONDITION");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Enddate)
                    .HasColumnType("datetime")
                    .HasColumnName("ENDDATE");

                entity.Property(e => e.Module).HasColumnName("MODULE_");

                entity.Property(e => e.Msgtempref).HasColumnName("MSGTEMPREF");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Nextwfref).HasColumnName("NEXTWFREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Proctype).HasColumnName("PROCTYPE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Statusgrpa).HasColumnName("STATUSGRPA");

                entity.Property(e => e.Statusgrpb).HasColumnName("STATUSGRPB");

                entity.Property(e => e.Statusgrpc).HasColumnName("STATUSGRPC");

                entity.Property(e => e.Statusgrpd).HasColumnName("STATUSGRPD");

                entity.Property(e => e.Statusgrpe).HasColumnName("STATUSGRPE");

                entity.Property(e => e.Statusgrpf).HasColumnName("STATUSGRPF");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wfroleref).HasColumnName("WFROLEREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Wfusernr).HasColumnName("WFUSERNR");

                entity.Property(e => e.Workplace).HasColumnName("WORKPLACE");
            });

            modelBuilder.Entity<Lg001Workflowline>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WORKFLOWLINE_I1");

                entity.ToTable("LG_001_WORKFLOWLINE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Bmailbcc)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("BMAILBCC");

                entity.Property(e => e.Bmailcc)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("BMAILCC");

                entity.Property(e => e.Bmailto)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("BMAILTO");

                entity.Property(e => e.Condition)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("CONDITION");

                entity.Property(e => e.Delaystatus).HasColumnName("DELAYSTATUS");

                entity.Property(e => e.Email).HasColumnName("EMAIL");

                entity.Property(e => e.Importance).HasColumnName("IMPORTANCE");

                entity.Property(e => e.Inform).HasColumnName("INFORM");

                entity.Property(e => e.Level).HasColumnName("LEVEL_");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Msgtempref).HasColumnName("MSGTEMPREF");

                entity.Property(e => e.Notification).HasColumnName("NOTIFICATION");

                entity.Property(e => e.Processtype).HasColumnName("PROCESSTYPE");

                entity.Property(e => e.Reminder).HasColumnName("REMINDER");

                entity.Property(e => e.Roleref).HasColumnName("ROLEREF");

                entity.Property(e => e.Sendwarn).HasColumnName("SENDWARN");

                entity.Property(e => e.Sms).HasColumnName("SMS");

                entity.Property(e => e.Taskdef)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("TASKDEF");

                entity.Property(e => e.Tasktimeamnt).HasColumnName("TASKTIMEAMNT");

                entity.Property(e => e.Tasktimeunit).HasColumnName("TASKTIMEUNIT");

                entity.Property(e => e.Tasktype).HasColumnName("TASKTYPE");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");

                entity.Property(e => e.Warnroleref).HasColumnName("WARNROLEREF");

                entity.Property(e => e.Warntype).HasColumnName("WARNTYPE");

                entity.Property(e => e.Warnusernr).HasColumnName("WARNUSERNR");

                entity.Property(e => e.Wfcardref).HasColumnName("WFCARDREF");
            });

            modelBuilder.Entity<Lg001Workstat>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WORKSTAT_I1");

                entity.ToTable("LG_001_WORKSTAT");

                entity.HasIndex(e => new { e.Cardtype, e.Code }, "I001_WORKSTAT_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Name }, "I001_WORKSTAT_I3");

                entity.HasIndex(e => new { e.Active, e.Cardtype, e.Code }, "I001_WORKSTAT_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Cardtype, e.Name }, "I001_WORKSTAT_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.Calendarref).HasColumnName("CALENDARREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Factorydivnr).HasColumnName("FACTORYDIVNR");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Hourdiffaccref).HasColumnName("HOURDIFFACCREF");

                entity.Property(e => e.Hourdiffcenter).HasColumnName("HOURDIFFCENTER");

                entity.Property(e => e.Hourlystdcost).HasColumnName("HOURLYSTDCOST");

                entity.Property(e => e.Hourlystdrpcost).HasColumnName("HOURLYSTDRPCOST");

                entity.Property(e => e.Imageinc).HasColumnName("IMAGEINC");

                entity.Property(e => e.Ininvennr).HasColumnName("ININVENNR");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Operationtime).HasColumnName("OPERATIONTIME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Outinvennr).HasColumnName("OUTINVENNR");

                entity.Property(e => e.Paydiffaccref).HasColumnName("PAYDIFFACCREF");

                entity.Property(e => e.Paydiffcenter).HasColumnName("PAYDIFFCENTER");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Shftgrpref).HasColumnName("SHFTGRPREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Wsattasg>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WSATTASG_I1");

                entity.ToTable("LG_001_WSATTASG");

                entity.HasIndex(e => new { e.Wsref, e.Wsattribref }, "I001_WSATTASG_I2");

                entity.HasIndex(e => new { e.Wsattribref, e.Wsref }, "I001_WSATTASG_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Wsattribref).HasColumnName("WSATTRIBREF");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg001Wsattva>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WSATTVAS_I1");

                entity.ToTable("LG_001_WSATTVAS");

                entity.HasIndex(e => new { e.Wsattribasgnref, e.Wsattribvalref }, "I001_WSATTVAS_I2");

                entity.HasIndex(e => new { e.Wsattribvalref, e.Wsattribasgnref }, "I001_WSATTVAS_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Wsattribasgnref).HasColumnName("WSATTRIBASGNREF");

                entity.Property(e => e.Wsattribvalref).HasColumnName("WSATTRIBVALREF");
            });

            modelBuilder.Entity<Lg001Wschcode>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WSCHCODE_I1");

                entity.ToTable("LG_001_WSCHCODE");

                entity.HasIndex(e => e.Code, "I001_WSCHCODE_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_WSCHCODE_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_WSCHCODE_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Name }, "I001_WSCHCODE_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Name2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Wschval>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WSCHVAL_I1");

                entity.ToTable("LG_001_WSCHVAL");

                entity.HasIndex(e => new { e.Charcoderef, e.Valno }, "I001_WSCHVAL_I2");

                entity.HasIndex(e => new { e.Charcoderef, e.Code }, "I001_WSCHVAL_I3")
                    .IsUnique();

                entity.HasIndex(e => new { e.Charcoderef, e.Name }, "I001_WSCHVAL_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Charcoderef).HasColumnName("CHARCODEREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Name2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("NAME2");

                entity.Property(e => e.Valno).HasColumnName("VALNO");
            });

            modelBuilder.Entity<Lg001Wsgrpass>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WSGRPASS_I1");

                entity.ToTable("LG_001_WSGRPASS");

                entity.HasIndex(e => new { e.Wsgrpref, e.Priority, e.Wsref }, "I001_WSGRPASS_I2");

                entity.HasIndex(e => new { e.Wsref, e.Wsgrpref }, "I001_WSGRPASS_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Dominshftgrp).HasColumnName("DOMINSHFTGRP");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Wsgrpref).HasColumnName("WSGRPREF");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg001Wsgrpf>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WSGRPF_I1");

                entity.ToTable("LG_001_WSGRPF");

                entity.HasIndex(e => e.Code, "I001_WSGRPF_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_WSGRPF_I3");

                entity.HasIndex(e => new { e.Active, e.Code }, "I001_WSGRPF_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Name }, "I001_WSGRPF_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Approved).HasColumnName("APPROVED");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Hourdiffaccref).HasColumnName("HOURDIFFACCREF");

                entity.Property(e => e.Hourdiffcenter).HasColumnName("HOURDIFFCENTER");

                entity.Property(e => e.Hourlystdcost).HasColumnName("HOURLYSTDCOST");

                entity.Property(e => e.Hourlystdrpcost).HasColumnName("HOURLYSTDRPCOST");

                entity.Property(e => e.Imageinc).HasColumnName("IMAGEINC");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Operationtime).HasColumnName("OPERATIONTIME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Paydiffaccref).HasColumnName("PAYDIFFACCREF");

                entity.Property(e => e.Paydiffcenter).HasColumnName("PAYDIFFCENTER");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lg001Wsovhcasgn>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WSOVHCASGN_I1");

                entity.ToTable("LG_001_WSOVHCASGN");

                entity.HasIndex(e => e.Ovhdcenterref, "I001_WSOVHCASGN_I2");

                entity.HasIndex(e => e.Wsref, "I001_WSOVHCASGN_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Hasactivityright).HasColumnName("HASACTIVITYRIGHT");

                entity.Property(e => e.Ovhdcenterref).HasColumnName("OVHDCENTERREF");

                entity.Property(e => e.Wsref).HasColumnName("WSREF");
            });

            modelBuilder.Entity<Lg001Wstatpart>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("I001_WSTATPART_I1");

                entity.ToTable("LG_001_WSTATPART");

                entity.HasIndex(e => new { e.Code, e.Workstatref }, "I001_WSTATPART_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Name, "I001_WSTATPART_I3");

                entity.HasIndex(e => new { e.Active, e.Code, e.Workstatref }, "I001_WSTATPART_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Name }, "I001_WSTATPART_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Workstatref).HasColumnName("WORKSTATREF");
            });

            modelBuilder.Entity<LgActpepl>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("ACTPEPL_I1");

                entity.ToTable("LG_ACTPEPL");

                entity.HasIndex(e => new { e.Actref, e.Name, e.Famname }, "ACTPEPL_I2");

                entity.HasIndex(e => new { e.Actref, e.Famname, e.Name }, "ACTPEPL_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Actref).HasColumnName("ACTREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Famname)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("FAMNAME");

                entity.Property(e => e.Midinit)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("MIDINIT");

                entity.Property(e => e.Name)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<LgCateglist>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CATEGLISTS_I1");

                entity.ToTable("LG_CATEGLISTS");

                entity.HasIndex(e => new { e.Categid, e.Lineno }, "CATEGLISTS_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Catdesc)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CATDESC");

                entity.Property(e => e.Categid).HasColumnName("CATEGID");

                entity.Property(e => e.Custom).HasColumnName("CUSTOM");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Recordid).HasColumnName("RECORDID");

                entity.Property(e => e.Tag).HasColumnName("TAG");
            });

            modelBuilder.Entity<LgCntslsmasg>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CNTSLSMASG_I1");

                entity.ToTable("LG_CNTSLSMASG");

                entity.HasIndex(e => new { e.Slsmref, e.Contref }, "CNTSLSMASG_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Contref).HasColumnName("CONTREF");

                entity.Property(e => e.Entryid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ENTRYID");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Slsmref).HasColumnName("SLSMREF");
            });

            modelBuilder.Entity<LgContact>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CONTACTS_I1");

                entity.ToTable("LG_CONTACTS");

                entity.HasIndex(e => new { e.Cstvndref, e.Name, e.Famname }, "CONTACTS_I2");

                entity.HasIndex(e => new { e.Cstvndref, e.Famname, e.Name }, "CONTACTS_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.Asstphcod)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("ASSTPHCOD");

                entity.Property(e => e.Asstphone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ASSTPHONE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Citycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CITYCODE");

                entity.Property(e => e.Contcat).HasColumnName("CONTCAT");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.Cstvndref).HasColumnName("CSTVNDREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.District)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Districtcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICTCODE");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Famname)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("FAMNAME");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Homephcod)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("HOMEPHCOD");

                entity.Property(e => e.Homephone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("HOMEPHONE");

                entity.Property(e => e.Jobtitle)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("JOBTITLE");

                entity.Property(e => e.Midinit)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("MIDINIT");

                entity.Property(e => e.Mobphcod)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("MOBPHCOD");

                entity.Property(e => e.Mobphone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("MOBPHONE");

                entity.Property(e => e.Name)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Offfaxcod)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("OFFFAXCOD");

                entity.Property(e => e.Officefax)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("OFFICEFAX");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Title)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("TITLE");

                entity.Property(e => e.Town)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Towncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TOWNCODE");

                entity.Property(e => e.Workphcod)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("WORKPHCOD");

                entity.Property(e => e.Workphone)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("WORKPHONE");
            });

            modelBuilder.Entity<LgContspecday>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CONTSPECDAYS_I1");

                entity.ToTable("LG_CONTSPECDAYS");

                entity.HasIndex(e => new { e.Contref, e.Specdate }, "CONTSPECDAYS_I2");

                entity.HasIndex(e => new { e.Specdate, e.Spedaycat, e.Contref }, "CONTSPECDAYS_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Contref).HasColumnName("CONTREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Persnote)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("PERSNOTE");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SPECDATE");

                entity.Property(e => e.Spedaycat).HasColumnName("SPEDAYCAT");
            });

            modelBuilder.Entity<LgCstvnd>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CSTVND_I1");

                entity.ToTable("LG_CSTVND");

                entity.HasIndex(e => new { e.Cardtype, e.Code }, "CSTVND_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Cardtype, e.Title }, "CSTVND_I3");

                entity.HasIndex(e => new { e.Active, e.Cardtype, e.Code }, "CSTVND_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Cardtype, e.Title }, "CSTVND_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Ccurrency).HasColumnName("CCURRENCY");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Citycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CITYCODE");

                entity.Property(e => e.Clanguage).HasColumnName("CLANGUAGE");

                entity.Property(e => e.Code)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.Custcat).HasColumnName("CUSTCAT");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.District)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Districtcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICTCODE");

                entity.Property(e => e.Faxcode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("FAXCODE");

                entity.Property(e => e.Faxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("FAXNR");

                entity.Property(e => e.Grouporg).HasColumnName("GROUPORG");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Origin)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("ORIGIN");

                entity.Property(e => e.Parentorg).HasColumnName("PARENTORG");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Primarycontref).HasColumnName("PRIMARYCONTREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Rivalfirm)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("RIVALFIRM");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Telcodes1)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELCODES1");

                entity.Property(e => e.Telcodes2)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELCODES2");

                entity.Property(e => e.Telnr1)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TELNR1");

                entity.Property(e => e.Telnr2)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TELNR2");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Title)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TITLE");

                entity.Property(e => e.Town)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Towncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TOWNCODE");

                entity.Property(e => e.Weburl)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("WEBURL");
            });

            modelBuilder.Entity<LgCvarpasg>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CVARPASG_I1");

                entity.ToTable("LG_CVARPASG");

                entity.HasIndex(e => new { e.Cstvndref, e.Firmno, e.Arpref }, "CVARPASG_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Arpref).HasColumnName("ARPREF");

                entity.Property(e => e.Cstvndref).HasColumnName("CSTVNDREF");

                entity.Property(e => e.Defaultflg).HasColumnName("DEFAULTFLG");

                entity.Property(e => e.Firmno).HasColumnName("FIRMNO");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<LgCvindasg>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("CVINDASG_I1");

                entity.ToTable("LG_CVINDASG");

                entity.HasIndex(e => new { e.Cstvndref, e.Indref }, "CVINDASG_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Annvolume).HasColumnName("ANNVOLUME");

                entity.Property(e => e.Annvolumerc).HasColumnName("ANNVOLUMERC");

                entity.Property(e => e.Cstvndref).HasColumnName("CSTVNDREF");

                entity.Property(e => e.Employeecnt).HasColumnName("EMPLOYEECNT");

                entity.Property(e => e.Indref).HasColumnName("INDREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Primaryflg).HasColumnName("PRIMARYFLG");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Volcurr).HasColumnName("VOLCURR");
            });

            modelBuilder.Entity<LgFirmdoc>(entity =>
            {
                entity.HasKey(e => e.Lref)
                    .HasName("FIRMDOC_I2");

                entity.ToTable("LG_FIRMDOC");

                entity.HasIndex(e => new { e.Infotyp, e.Inforef, e.Doctyp, e.Docnr }, "FIRMDOC_I1");

                entity.Property(e => e.Lref).HasColumnName("LREF");

                entity.Property(e => e.Docnr).HasColumnName("DOCNR");

                entity.Property(e => e.Doctyp).HasColumnName("DOCTYP");

                entity.Property(e => e.Inforef).HasColumnName("INFOREF");

                entity.Property(e => e.Infotyp).HasColumnName("INFOTYP");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");
            });

            modelBuilder.Entity<LgHistory>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("HISTORY_I1");

                entity.ToTable("LG_HISTORY");

                entity.HasIndex(e => new { e.Tableid, e.Dataref, e.Logicalref }, "HISTORY_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Modifieddate, e.Modifiedhour, e.Modifiedmin, e.Modifiedsec }, "HISTORY_I3");

                entity.HasIndex(e => e.Dataguid, "HISTORY_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Dataguid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("DATAGUID");

                entity.Property(e => e.Dataref).HasColumnName("DATAREF");

                entity.Property(e => e.Modifiedby).HasColumnName("MODIFIEDBY");

                entity.Property(e => e.Modifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("MODIFIEDDATE");

                entity.Property(e => e.Modifiedhour).HasColumnName("MODIFIEDHOUR");

                entity.Property(e => e.Modifiedmin).HasColumnName("MODIFIEDMIN");

                entity.Property(e => e.Modifiedsec).HasColumnName("MODIFIEDSEC");

                entity.Property(e => e.Modiftxt)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("MODIFTXT");

                entity.Property(e => e.Tableid).HasColumnName("TABLEID");

                entity.Property(e => e.Username)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("USERNAME");
            });

            modelBuilder.Entity<LgIndustry>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("INDUSTRY_I1");

                entity.ToTable("LG_INDUSTRY");

                entity.HasIndex(e => e.Code, "INDUSTRY_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Description, "INDUSTRY_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Code)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Description)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Indcat).HasColumnName("INDCAT");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");
            });

            modelBuilder.Entity<LgNtlck000>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("NTLCK_000_I1");

                entity.ToTable("LG_NTLCK_000");

                entity.HasIndex(e => e.Lockstr, "NTLCK_000_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Counter).HasColumnName("COUNTER");

                entity.Property(e => e.Lockstr)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("LOCKSTR");

                entity.Property(e => e.Programname)
                    .HasMaxLength(129)
                    .IsUnicode(false)
                    .HasColumnName("PROGRAMNAME");

                entity.Property(e => e.Sessioncode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SESSIONCODE");
            });

            modelBuilder.Entity<LgNtlck001>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("NTLCK_001_I1");

                entity.ToTable("LG_NTLCK_001");

                entity.HasIndex(e => e.Lockstr, "NTLCK_001_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Counter).HasColumnName("COUNTER");

                entity.Property(e => e.Lockstr)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("LOCKSTR");

                entity.Property(e => e.Programname)
                    .HasMaxLength(129)
                    .IsUnicode(false)
                    .HasColumnName("PROGRAMNAME");

                entity.Property(e => e.Sessioncode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SESSIONCODE");
            });

            modelBuilder.Entity<LgSati>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("SATI_I1");

                entity.ToTable("LG_SATI");

                entity.HasIndex(e => new { e.Userid, e.Itemtyp }, "SATI_I2");

                entity.HasIndex(e => new { e.Userid, e.Itemexp }, "SATI_I3")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Custom).HasColumnName("CUSTOM");

                entity.Property(e => e.Filterref).HasColumnName("FILTERREF");

                entity.Property(e => e.Haschild).HasColumnName("HASCHILD");

                entity.Property(e => e.Itemexp)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ITEMEXP");

                entity.Property(e => e.Itemtyp).HasColumnName("ITEMTYP");

                entity.Property(e => e.Parentref).HasColumnName("PARENTREF");

                entity.Property(e => e.Userid).HasColumnName("USERID");
            });

            modelBuilder.Entity<LgSatifilter>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("SATIFILTER_I1");

                entity.ToTable("LG_SATIFILTER");

                entity.HasIndex(e => new { e.Datatype, e.Ownerid, e.Instance, e.Defaultflg }, "SATIFILTER_I2");

                entity.HasIndex(e => new { e.Datatype, e.Ownerid, e.Instance, e.Tempname }, "SATIFILTER_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Authcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("AUTHCODE");

                entity.Property(e => e.Datasize).HasColumnName("DATASIZE");

                entity.Property(e => e.Datatype).HasColumnName("DATATYPE");

                entity.Property(e => e.Defaultflg).HasColumnName("DEFAULTFLG");

                entity.Property(e => e.Explanation)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("EXPLANATION");

                entity.Property(e => e.Instance).HasColumnName("INSTANCE");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Ownerid).HasColumnName("OWNERID");

                entity.Property(e => e.Tempname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEMPNAME");

                entity.Property(e => e.UpdateinfoCreatedby).HasColumnName("UPDATEINFO_CREATEDBY");

                entity.Property(e => e.UpdateinfoCreateddate).HasColumnName("UPDATEINFO_CREATEDDATE");

                entity.Property(e => e.UpdateinfoCreatedhour).HasColumnName("UPDATEINFO_CREATEDHOUR");

                entity.Property(e => e.UpdateinfoCreatedmin).HasColumnName("UPDATEINFO_CREATEDMIN");

                entity.Property(e => e.UpdateinfoCreatedsec).HasColumnName("UPDATEINFO_CREATEDSEC");

                entity.Property(e => e.UpdateinfoModifiedby).HasColumnName("UPDATEINFO_MODIFIEDBY");

                entity.Property(e => e.UpdateinfoModifieddate).HasColumnName("UPDATEINFO_MODIFIEDDATE");

                entity.Property(e => e.UpdateinfoModifiedhour).HasColumnName("UPDATEINFO_MODIFIEDHOUR");

                entity.Property(e => e.UpdateinfoModifiedmin).HasColumnName("UPDATEINFO_MODIFIEDMIN");

                entity.Property(e => e.UpdateinfoModifiedsec).HasColumnName("UPDATEINFO_MODIFIEDSEC");

                entity.Property(e => e.Userdefault).HasColumnName("USERDEFAULT");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");

                entity.Property(e => e.Webdefflg).HasColumnName("WEBDEFFLG");
            });

            modelBuilder.Entity<LgSlsactiv>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("SLSACTIV_I1");

                entity.ToTable("LG_SLSACTIV");

                entity.HasIndex(e => new { e.Opporref, e.Acttype }, "SLSACTIV_I2");

                entity.HasIndex(e => new { e.Opporref, e.Description }, "SLSACTIV_I3");

                entity.HasIndex(e => new { e.Opporref, e.Date, e.Time }, "SLSACTIV_I4");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Actorder).HasColumnName("ACTORDER");

                entity.Property(e => e.Acttype).HasColumnName("ACTTYPE");

                entity.Property(e => e.Approval).HasColumnName("APPROVAL");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cstvndref).HasColumnName("CSTVNDREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Description)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Description2)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION2");

                entity.Property(e => e.Duedate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUEDATE");

                entity.Property(e => e.Duetime).HasColumnName("DUETIME");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Lastrevision).HasColumnName("LASTREVISION");

                entity.Property(e => e.Opporref).HasColumnName("OPPORREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Priority).HasColumnName("PRIORITY");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Sendref).HasColumnName("SENDREF");

                entity.Property(e => e.Sendvia).HasColumnName("SENDVIA");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Time).HasColumnName("TIME_");
            });

            modelBuilder.Entity<LgSlsclrel>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("SLSCLREL_I1");

                entity.ToTable("LG_SLSCLREL");

                entity.HasIndex(e => new { e.Salesmanref, e.Cstvndref }, "SLSCLREL_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Cstvndref).HasColumnName("CSTVNDREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<LgSlsdoc>(entity =>
            {
                entity.HasKey(e => e.Lref)
                    .HasName("SLSDOC_I2");

                entity.ToTable("LG_SLSDOC");

                entity.HasIndex(e => new { e.Infotyp, e.Inforef, e.Doctyp, e.Docnr }, "SLSDOC_I1");

                entity.Property(e => e.Lref).HasColumnName("LREF");

                entity.Property(e => e.Docnr).HasColumnName("DOCNR");

                entity.Property(e => e.Doctyp).HasColumnName("DOCTYP");

                entity.Property(e => e.Inforef).HasColumnName("INFOREF");

                entity.Property(e => e.Infotyp).HasColumnName("INFOTYP");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");
            });

            modelBuilder.Entity<LgSlsfile>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("SLSFILES_I1");

                entity.ToTable("LG_SLSFILES");

                entity.HasIndex(e => new { e.Actref, e.Filename }, "SLSFILES_I2");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Actref).HasColumnName("ACTREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Filename)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("FILENAME_");

                entity.Property(e => e.Filetype).HasColumnName("FILETYPE");

                entity.Property(e => e.Indisk).HasColumnName("INDISK");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Path)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PATH");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");
            });

            modelBuilder.Entity<LgSlsman>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("SLSMAN_I1");

                entity.ToTable("LG_SLSMAN");

                entity.HasIndex(e => new { e.Firmnr, e.Code }, "SLSMAN_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Definition, "SLSMAN_I3");

                entity.HasIndex(e => new { e.Firmnr, e.Active, e.Code }, "SLSMAN_I4")
                    .IsUnique();

                entity.HasIndex(e => new { e.Active, e.Definition }, "SLSMAN_I5");

                entity.HasIndex(e => new { e.Siteid, e.Orglogicref }, "SLSMAN_I6");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Deptid).HasColumnName("DEPTID");

                entity.Property(e => e.Divisid).HasColumnName("DIVISID");

                entity.Property(e => e.Firmnr).HasColumnName("FIRMNR");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Position)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("POSITION_");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Telnumber)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TELNUMBER");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Userid).HasColumnName("USERID");
            });

            modelBuilder.Entity<LgSlsohistory>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("SLSOHISTORY_I1");

                entity.ToTable("LG_SLSOHISTORY");

                entity.HasIndex(e => new { e.Slsoppref, e.Recdate, e.Rectime }, "SLSOHISTORY_I2")
                    .IsUnique();

                entity.HasIndex(e => e.Explanation, "SLSOHISTORY_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Explanation)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("EXPLANATION");

                entity.Property(e => e.Recdate)
                    .HasColumnType("datetime")
                    .HasColumnName("RECDATE");

                entity.Property(e => e.Rectime).HasColumnName("RECTIME");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Slsoppref).HasColumnName("SLSOPPREF");

                entity.Property(e => e.Status).HasColumnName("STATUS");
            });

            modelBuilder.Entity<LgSlsoppor>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("SLSOPPOR_I1");

                entity.ToTable("LG_SLSOPPOR");

                entity.HasIndex(e => new { e.Date, e.Oppno }, "SLSOPPOR_I2")
                    .IsUnique();

                entity.HasIndex(e => new { e.Salesmanref, e.Date, e.Oppno }, "SLSOPPOR_I3")
                    .IsUnique();

                entity.HasIndex(e => e.Oppno, "SLSOPPOR_I4")
                    .IsUnique();

                entity.HasIndex(e => e.Description, "SLSOPPOR_I5");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Closedate)
                    .HasColumnType("datetime")
                    .HasColumnName("CLOSEDATE");

                entity.Property(e => e.Comments)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("COMMENTS");

                entity.Property(e => e.Contactref).HasColumnName("CONTACTREF");

                entity.Property(e => e.Cstvndref).HasColumnName("CSTVNDREF");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Description)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("DESCRIPTION");

                entity.Property(e => e.Expecdate)
                    .HasColumnType("datetime")
                    .HasColumnName("EXPECDATE");

                entity.Property(e => e.Expecrev).HasColumnName("EXPECREV");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Oppno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("OPPNO");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Reportrev).HasColumnName("REPORTREV");

                entity.Property(e => e.Revcamount).HasColumnName("REVCAMOUNT");

                entity.Property(e => e.Revcurr).HasColumnName("REVCURR");

                entity.Property(e => e.Revrate).HasColumnName("REVRATE");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Stage).HasColumnName("STAGE");

                entity.Property(e => e.Succprob).HasColumnName("SUCCPROB");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");
            });

            modelBuilder.Entity<LgUsagestat>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("USAGESTAT_I1");

                entity.ToTable("LG_USAGESTAT");

                entity.HasIndex(e => e.Objhashid, "USAGESTAT_I2")
                    .IsUnique();

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Objhashid).HasColumnName("OBJHASHID");

                entity.Property(e => e.Objname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("OBJNAME");

                entity.Property(e => e.Objtype).HasColumnName("OBJTYPE");

                entity.Property(e => e.Usagecount).HasColumnName("USAGECOUNT");
            });

            modelBuilder.Entity<Logrpflt>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("LOGRPFLT_I1");

                entity.ToTable("LOGRPFLT");

                entity.HasIndex(e => new { e.Datatype, e.Ownerid, e.Instance, e.Defaultflg }, "LOGRPFLT_I2");

                entity.HasIndex(e => new { e.Datatype, e.Ownerid, e.Instance, e.Tempname }, "LOGRPFLT_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Authcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("AUTHCODE");

                entity.Property(e => e.Datasize).HasColumnName("DATASIZE");

                entity.Property(e => e.Datatype).HasColumnName("DATATYPE");

                entity.Property(e => e.Defaultflg).HasColumnName("DEFAULTFLG");

                entity.Property(e => e.Explanation)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("EXPLANATION");

                entity.Property(e => e.Instance).HasColumnName("INSTANCE");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Ownerid).HasColumnName("OWNERID");

                entity.Property(e => e.Tempname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEMPNAME");

                entity.Property(e => e.UpdateinfoCreatedby).HasColumnName("UPDATEINFO_CREATEDBY");

                entity.Property(e => e.UpdateinfoCreateddate).HasColumnName("UPDATEINFO_CREATEDDATE");

                entity.Property(e => e.UpdateinfoCreatedhour).HasColumnName("UPDATEINFO_CREATEDHOUR");

                entity.Property(e => e.UpdateinfoCreatedmin).HasColumnName("UPDATEINFO_CREATEDMIN");

                entity.Property(e => e.UpdateinfoCreatedsec).HasColumnName("UPDATEINFO_CREATEDSEC");

                entity.Property(e => e.UpdateinfoModifiedby).HasColumnName("UPDATEINFO_MODIFIEDBY");

                entity.Property(e => e.UpdateinfoModifieddate).HasColumnName("UPDATEINFO_MODIFIEDDATE");

                entity.Property(e => e.UpdateinfoModifiedhour).HasColumnName("UPDATEINFO_MODIFIEDHOUR");

                entity.Property(e => e.UpdateinfoModifiedmin).HasColumnName("UPDATEINFO_MODIFIEDMIN");

                entity.Property(e => e.UpdateinfoModifiedsec).HasColumnName("UPDATEINFO_MODIFIEDSEC");

                entity.Property(e => e.Userdefault).HasColumnName("USERDEFAULT");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");

                entity.Property(e => e.Webdefflg).HasColumnName("WEBDEFFLG");
            });

            modelBuilder.Entity<Logrplay>(entity =>
            {
                entity.HasKey(e => e.Logicalref)
                    .HasName("LOGRPLAYS_I1");

                entity.ToTable("LOGRPLAYS");

                entity.HasIndex(e => new { e.Datatype, e.Ownerid, e.Instance, e.Defaultflg }, "LOGRPLAYS_I2");

                entity.HasIndex(e => new { e.Datatype, e.Ownerid, e.Instance, e.Tempname }, "LOGRPLAYS_I3");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Authcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("AUTHCODE");

                entity.Property(e => e.Datasize).HasColumnName("DATASIZE");

                entity.Property(e => e.Datatype).HasColumnName("DATATYPE");

                entity.Property(e => e.Defaultflg).HasColumnName("DEFAULTFLG");

                entity.Property(e => e.Explanation)
                    .HasMaxLength(81)
                    .IsUnicode(false)
                    .HasColumnName("EXPLANATION");

                entity.Property(e => e.Instance).HasColumnName("INSTANCE");

                entity.Property(e => e.Ldata)
                    .HasColumnType("image")
                    .HasColumnName("LDATA");

                entity.Property(e => e.Ownerid).HasColumnName("OWNERID");

                entity.Property(e => e.Tempname)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEMPNAME");

                entity.Property(e => e.UpdateinfoCreatedby).HasColumnName("UPDATEINFO_CREATEDBY");

                entity.Property(e => e.UpdateinfoCreateddate).HasColumnName("UPDATEINFO_CREATEDDATE");

                entity.Property(e => e.UpdateinfoCreatedhour).HasColumnName("UPDATEINFO_CREATEDHOUR");

                entity.Property(e => e.UpdateinfoCreatedmin).HasColumnName("UPDATEINFO_CREATEDMIN");

                entity.Property(e => e.UpdateinfoCreatedsec).HasColumnName("UPDATEINFO_CREATEDSEC");

                entity.Property(e => e.UpdateinfoModifiedby).HasColumnName("UPDATEINFO_MODIFIEDBY");

                entity.Property(e => e.UpdateinfoModifieddate).HasColumnName("UPDATEINFO_MODIFIEDDATE");

                entity.Property(e => e.UpdateinfoModifiedhour).HasColumnName("UPDATEINFO_MODIFIEDHOUR");

                entity.Property(e => e.UpdateinfoModifiedmin).HasColumnName("UPDATEINFO_MODIFIEDMIN");

                entity.Property(e => e.UpdateinfoModifiedsec).HasColumnName("UPDATEINFO_MODIFIEDSEC");

                entity.Property(e => e.Userdefault).HasColumnName("USERDEFAULT");

                entity.Property(e => e.Usernr).HasColumnName("USERNR");

                entity.Property(e => e.Webdefflg).HasColumnName("WEBDEFFLG");
            });

            modelBuilder.Entity<Lv00101Bnfline>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_BNFLINE");

                entity.Property(e => e.Bankproctype).HasColumnName("BANKPROCTYPE");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Definition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");
            });

            modelBuilder.Entity<Lv00101Clcard>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_CLCARD");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Code)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.CreditRd).HasColumnName("CREDIT_RD");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.DebitRd).HasColumnName("DEBIT_RD");

                entity.Property(e => e.Definition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Finbrws).HasColumnName("FINBRWS");

                entity.Property(e => e.Incharge)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("INCHARGE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Purchbrws).HasColumnName("PURCHBRWS");

                entity.Property(e => e.Salesbrws).HasColumnName("SALESBRWS");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Specode3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE3");

                entity.Property(e => e.Specode4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE4");

                entity.Property(e => e.Specode5)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE5");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Taxoffice)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFFICE");

                entity.Property(e => e.Tckno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TCKNO");

                entity.Property(e => e.Telnrs1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS1");

                entity.Property(e => e.Telnrs2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS2");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Wflowcrd)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("WFLOWCRD");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");
            });

            modelBuilder.Entity<Lv00101Clekstre>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_CLEKSTRE");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Docode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("DOCODE");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Logicalref)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("LOGICALREF");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Sourcefref).HasColumnName("SOURCEFREF");

                entity.Property(e => e.Tranno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRANNO");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trnet).HasColumnName("TRNET");
            });

            modelBuilder.Entity<Lv00101Clfline>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_CLFLINE");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Code)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenr).HasColumnName("LINENR");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Modulenr).HasColumnName("MODULENR");

                entity.Property(e => e.Sourcefref).HasColumnName("SOURCEFREF");

                entity.Property(e => e.Tranno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRANNO");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");
            });

            modelBuilder.Entity<Lv00101Cltotfil>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_CLTOTFIL");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Tottyp).HasColumnName("TOTTYP");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lv00101Cltotfilv1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_CLTOTFILV1");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.CreditRc).HasColumnName("CREDIT_RC");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.DebitRc).HasColumnName("DEBIT_RC");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.TrnCntBig).HasColumnName("TRN_CNT_BIG");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lv00101Cscard>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_CSCARD");

                entity.Property(e => e.Bankname)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAME");

                entity.Property(e => e.Duedate)
                    .HasColumnType("datetime")
                    .HasColumnName("DUEDATE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Newserino)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("NEWSERINO");

                entity.Property(e => e.Owing)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("OWING");

                entity.Property(e => e.Portfoyno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("PORTFOYNO");

                entity.Property(e => e.Rollref).HasColumnName("ROLLREF");

                entity.Property(e => e.Serino)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SERINO");

                entity.Property(e => e.Setdate)
                    .HasColumnType("datetime")
                    .HasColumnName("SETDATE");

                entity.Property(e => e.Total).HasColumnName("TOTAL");
            });

            modelBuilder.Entity<Lv00101Emuhtot>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_EMUHTOT");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Creditinfl).HasColumnName("CREDITINFL");

                entity.Property(e => e.Creditrem).HasColumnName("CREDITREM");

                entity.Property(e => e.Creditresrv).HasColumnName("CREDITRESRV");

                entity.Property(e => e.Currtyp).HasColumnName("CURRTYP");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Debitinfl).HasColumnName("DEBITINFL");

                entity.Property(e => e.Debitrem).HasColumnName("DEBITREM");

                entity.Property(e => e.Debitresrv).HasColumnName("DEBITRESRV");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Tottype).HasColumnName("TOTTYPE");

                entity.Property(e => e.Trancount).HasColumnName("TRANCOUNT");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lv00101Emuhtotv1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_EMUHTOTV1");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cnt).HasColumnName("CNT");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.CreditAmnt).HasColumnName("CREDIT_AMNT");

                entity.Property(e => e.CreditEmu).HasColumnName("CREDIT_EMU");

                entity.Property(e => e.CreditLc).HasColumnName("CREDIT_LC");

                entity.Property(e => e.CreditRc).HasColumnName("CREDIT_RC");

                entity.Property(e => e.Creditresrv).HasColumnName("CREDITRESRV");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.DebitAmnt).HasColumnName("DEBIT_AMNT");

                entity.Property(e => e.DebitEmu).HasColumnName("DEBIT_EMU");

                entity.Property(e => e.DebitLc).HasColumnName("DEBIT_LC");

                entity.Property(e => e.DebitRc).HasColumnName("DEBIT_RC");

                entity.Property(e => e.Debitresrv).HasColumnName("DEBITRESRV");

                entity.Property(e => e.DebitresrvRc).HasColumnName("DEBITRESRV_RC");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lv00101Emuhtotv2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_EMUHTOTV2");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cnt).HasColumnName("CNT");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.CreditAmnt).HasColumnName("CREDIT_AMNT");

                entity.Property(e => e.CreditEmu).HasColumnName("CREDIT_EMU");

                entity.Property(e => e.CreditLc).HasColumnName("CREDIT_LC");

                entity.Property(e => e.CreditRc).HasColumnName("CREDIT_RC");

                entity.Property(e => e.Creditresrv).HasColumnName("CREDITRESRV");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.DebitAmnt).HasColumnName("DEBIT_AMNT");

                entity.Property(e => e.DebitEmu).HasColumnName("DEBIT_EMU");

                entity.Property(e => e.DebitLc).HasColumnName("DEBIT_LC");

                entity.Property(e => e.DebitRc).HasColumnName("DEBIT_RC");

                entity.Property(e => e.Debitresrv).HasColumnName("DEBITRESRV");

                entity.Property(e => e.DebitresrvRc).HasColumnName("DEBITRESRV_RC");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lv00101Emuhtotv3>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_EMUHTOTV3");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cnt).HasColumnName("CNT");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.CreditAmnt).HasColumnName("CREDIT_AMNT");

                entity.Property(e => e.CreditEmu).HasColumnName("CREDIT_EMU");

                entity.Property(e => e.CreditLc).HasColumnName("CREDIT_LC");

                entity.Property(e => e.CreditRc).HasColumnName("CREDIT_RC");

                entity.Property(e => e.Creditresrv).HasColumnName("CREDITRESRV");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.DebitAmnt).HasColumnName("DEBIT_AMNT");

                entity.Property(e => e.DebitEmu).HasColumnName("DEBIT_EMU");

                entity.Property(e => e.DebitLc).HasColumnName("DEBIT_LC");

                entity.Property(e => e.DebitRc).HasColumnName("DEBIT_RC");

                entity.Property(e => e.Debitresrv).HasColumnName("DEBITRESRV");

                entity.Property(e => e.DebitresrvRc).HasColumnName("DEBITRESRV_RC");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lv00101Eximdistpeg>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_EXIMDISTPEG");

                entity.Property(e => e.Addexpense).HasColumnName("ADDEXPENSE");

                entity.Property(e => e.Itemref).HasColumnName("ITEMREF");

                entity.Property(e => e.Sttransref).HasColumnName("STTRANSREF");

                entity.Property(e => e.Totalamnt).HasColumnName("TOTALAMNT");
            });

            modelBuilder.Entity<Lv00101Gntotcl>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_GNTOTCL");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Credit).HasColumnName("CREDIT");

                entity.Property(e => e.Debit).HasColumnName("DEBIT");

                entity.Property(e => e.Department).HasColumnName("DEPARTMENT");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Tottyp).HasColumnName("TOTTYP");
            });

            modelBuilder.Entity<Lv00101Gntotst>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_GNTOTST");

                entity.Property(e => e.Actotherin).HasColumnName("ACTOTHERIN");

                entity.Property(e => e.Actotherout).HasColumnName("ACTOTHEROUT");

                entity.Property(e => e.Actporder).HasColumnName("ACTPORDER");

                entity.Property(e => e.Actprodin).HasColumnName("ACTPRODIN");

                entity.Property(e => e.Actsorder).HasColumnName("ACTSORDER");

                entity.Property(e => e.Actwaste).HasColumnName("ACTWASTE");

                entity.Property(e => e.Actwhousein).HasColumnName("ACTWHOUSEIN");

                entity.Property(e => e.Actwhouseout).HasColumnName("ACTWHOUSEOUT");

                entity.Property(e => e.Avgcurrval).HasColumnName("AVGCURRVAL");

                entity.Property(e => e.Avgvalue).HasColumnName("AVGVALUE");

                entity.Property(e => e.Countadd).HasColumnName("COUNTADD");

                entity.Property(e => e.Countdec).HasColumnName("COUNTDEC");

                entity.Property(e => e.Distreserved).HasColumnName("DISTRESERVED");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Lasttrdate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTTRDATE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Onhand).HasColumnName("ONHAND");

                entity.Property(e => e.Onvehicle).HasColumnName("ONVEHICLE");

                entity.Property(e => e.Plnotherin).HasColumnName("PLNOTHERIN");

                entity.Property(e => e.Plnotherout).HasColumnName("PLNOTHEROUT");

                entity.Property(e => e.Plnprodin).HasColumnName("PLNPRODIN");

                entity.Property(e => e.Plnprodout).HasColumnName("PLNPRODOUT");

                entity.Property(e => e.Plnrsrvprodin).HasColumnName("PLNRSRVPRODIN");

                entity.Property(e => e.Plnrsrvprodout).HasColumnName("PLNRSRVPRODOUT");

                entity.Property(e => e.Plnrsrvwhousein).HasColumnName("PLNRSRVWHOUSEIN");

                entity.Property(e => e.Plnrsrvwhouseout).HasColumnName("PLNRSRVWHOUSEOUT");

                entity.Property(e => e.Plnwhousein).HasColumnName("PLNWHOUSEIN");

                entity.Property(e => e.Plnwhouseout).HasColumnName("PLNWHOUSEOUT");

                entity.Property(e => e.Puramnt).HasColumnName("PURAMNT");

                entity.Property(e => e.Purcash).HasColumnName("PURCASH");

                entity.Property(e => e.Purcurr).HasColumnName("PURCURR");

                entity.Property(e => e.Received).HasColumnName("RECEIVED");

                entity.Property(e => e.Reserved).HasColumnName("RESERVED");

                entity.Property(e => e.Salamnt).HasColumnName("SALAMNT");

                entity.Property(e => e.Salcash).HasColumnName("SALCASH");

                entity.Property(e => e.Salcurr).HasColumnName("SALCURR");

                entity.Property(e => e.Shipped).HasColumnName("SHIPPED");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Tempin).HasColumnName("TEMPIN");

                entity.Property(e => e.Tempout).HasColumnName("TEMPOUT");

                entity.Property(e => e.Transferred).HasColumnName("TRANSFERRED");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Virtualinven).HasColumnName("VIRTUALINVEN");
            });

            modelBuilder.Entity<Lv00101Gntotvrnt>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_GNTOTVRNT");

                entity.Property(e => e.Actotherin).HasColumnName("ACTOTHERIN");

                entity.Property(e => e.Actotherout).HasColumnName("ACTOTHEROUT");

                entity.Property(e => e.Actporder).HasColumnName("ACTPORDER");

                entity.Property(e => e.Actprodin).HasColumnName("ACTPRODIN");

                entity.Property(e => e.Actsorder).HasColumnName("ACTSORDER");

                entity.Property(e => e.Actwaste).HasColumnName("ACTWASTE");

                entity.Property(e => e.Actwhousein).HasColumnName("ACTWHOUSEIN");

                entity.Property(e => e.Actwhouseout).HasColumnName("ACTWHOUSEOUT");

                entity.Property(e => e.Avgcurrval).HasColumnName("AVGCURRVAL");

                entity.Property(e => e.Avgvalue).HasColumnName("AVGVALUE");

                entity.Property(e => e.Countadd).HasColumnName("COUNTADD");

                entity.Property(e => e.Countdec).HasColumnName("COUNTDEC");

                entity.Property(e => e.Distreserved).HasColumnName("DISTRESERVED");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Lasttrdate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTTRDATE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Onhand).HasColumnName("ONHAND");

                entity.Property(e => e.Onvehicle).HasColumnName("ONVEHICLE");

                entity.Property(e => e.Plnotherin).HasColumnName("PLNOTHERIN");

                entity.Property(e => e.Plnotherout).HasColumnName("PLNOTHEROUT");

                entity.Property(e => e.Plnprodin).HasColumnName("PLNPRODIN");

                entity.Property(e => e.Plnprodout).HasColumnName("PLNPRODOUT");

                entity.Property(e => e.Plnrsrvprodin).HasColumnName("PLNRSRVPRODIN");

                entity.Property(e => e.Plnrsrvprodout).HasColumnName("PLNRSRVPRODOUT");

                entity.Property(e => e.Plnrsrvwhousein).HasColumnName("PLNRSRVWHOUSEIN");

                entity.Property(e => e.Plnrsrvwhouseout).HasColumnName("PLNRSRVWHOUSEOUT");

                entity.Property(e => e.Plnwhousein).HasColumnName("PLNWHOUSEIN");

                entity.Property(e => e.Plnwhouseout).HasColumnName("PLNWHOUSEOUT");

                entity.Property(e => e.Puramnt).HasColumnName("PURAMNT");

                entity.Property(e => e.Purcash).HasColumnName("PURCASH");

                entity.Property(e => e.Purcurr).HasColumnName("PURCURR");

                entity.Property(e => e.Received).HasColumnName("RECEIVED");

                entity.Property(e => e.Reserved).HasColumnName("RESERVED");

                entity.Property(e => e.Salamnt).HasColumnName("SALAMNT");

                entity.Property(e => e.Salcash).HasColumnName("SALCASH");

                entity.Property(e => e.Salcurr).HasColumnName("SALCURR");

                entity.Property(e => e.Shipped).HasColumnName("SHIPPED");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Tempin).HasColumnName("TEMPIN");

                entity.Property(e => e.Tempout).HasColumnName("TEMPOUT");

                entity.Property(e => e.Transferred).HasColumnName("TRANSFERRED");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Virtualinven).HasColumnName("VIRTUALINVEN");
            });

            modelBuilder.Entity<Lv00101Multiaddtaxln>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_MULTIADDTAXLN");

                entity.Property(e => e.Addtaxamount).HasColumnName("ADDTAXAMOUNT");

                entity.Property(e => e.Addtaxamountx).HasColumnName("ADDTAXAMOUNTX");

                entity.Property(e => e.Addtaxref).HasColumnName("ADDTAXREF");

                entity.Property(e => e.Ficheref).HasColumnName("FICHEREF");

                entity.Property(e => e.Lineref).HasColumnName("LINEREF");
            });

            modelBuilder.Entity<Lv00101Orfline>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_ORFLINE");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Lineno).HasColumnName("LINENO_");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Ordficheref).HasColumnName("ORDFICHEREF");

                entity.Property(e => e.Price).HasColumnName("PRICE");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");
            });

            modelBuilder.Entity<Lv00101Srvnum>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_SRVNUMS");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Duration).HasColumnName("DURATION");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Lasttrdate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTTRDATE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Ordered).HasColumnName("ORDERED");

                entity.Property(e => e.Shipped).HasColumnName("SHIPPED");
            });

            modelBuilder.Entity<Lv00101Srvtot>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_SRVTOT");

                entity.Property(e => e.Cardref).HasColumnName("CARDREF");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.TotalsAmount).HasColumnName("TOTALS_AMOUNT");

                entity.Property(e => e.TotalsCashamnt).HasColumnName("TOTALS_CASHAMNT");

                entity.Property(e => e.TotalsCurramnt).HasColumnName("TOTALS_CURRAMNT");

                entity.Property(e => e.TotalsDiscamnt).HasColumnName("TOTALS_DISCAMNT");

                entity.Property(e => e.TotalsRetamnt).HasColumnName("TOTALS_RETAMNT");

                entity.Property(e => e.TotalsVatamnt).HasColumnName("TOTALS_VATAMNT");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lv00101Stinven>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_STINVENS");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Mtrlinc).HasColumnName("MTRLINC");

                entity.Property(e => e.PurchasesAmount).HasColumnName("PURCHASES_AMOUNT");

                entity.Property(e => e.PurchasesCashamnt).HasColumnName("PURCHASES_CASHAMNT");

                entity.Property(e => e.PurchasesCurramnt).HasColumnName("PURCHASES_CURRAMNT");

                entity.Property(e => e.PurchasesDiscamnt).HasColumnName("PURCHASES_DISCAMNT");

                entity.Property(e => e.PurchasesRetamnt).HasColumnName("PURCHASES_RETAMNT");

                entity.Property(e => e.PurchasesVatamnt).HasColumnName("PURCHASES_VATAMNT");

                entity.Property(e => e.SalesAmount).HasColumnName("SALES_AMOUNT");

                entity.Property(e => e.SalesCashamnt).HasColumnName("SALES_CASHAMNT");

                entity.Property(e => e.SalesCurramnt).HasColumnName("SALES_CURRAMNT");

                entity.Property(e => e.SalesDiscamnt).HasColumnName("SALES_DISCAMNT");

                entity.Property(e => e.SalesRetamnt).HasColumnName("SALES_RETAMNT");

                entity.Property(e => e.SalesVatamnt).HasColumnName("SALES_VATAMNT");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Virtualinven).HasColumnName("VIRTUALINVEN");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lv00101Stinvtot>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_STINVTOT");

                entity.Property(e => e.Actotherin).HasColumnName("ACTOTHERIN");

                entity.Property(e => e.Actotherout).HasColumnName("ACTOTHEROUT");

                entity.Property(e => e.Actporder).HasColumnName("ACTPORDER");

                entity.Property(e => e.Actprodin).HasColumnName("ACTPRODIN");

                entity.Property(e => e.Actsorder).HasColumnName("ACTSORDER");

                entity.Property(e => e.Actwaste).HasColumnName("ACTWASTE");

                entity.Property(e => e.Actwhousein).HasColumnName("ACTWHOUSEIN");

                entity.Property(e => e.Actwhouseout).HasColumnName("ACTWHOUSEOUT");

                entity.Property(e => e.Avgcurrval).HasColumnName("AVGCURRVAL");

                entity.Property(e => e.Avgvalue).HasColumnName("AVGVALUE");

                entity.Property(e => e.Countadd).HasColumnName("COUNTADD");

                entity.Property(e => e.Countdec).HasColumnName("COUNTDEC");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Distreserved).HasColumnName("DISTRESERVED");

                entity.Property(e => e.Invencostgrp).HasColumnName("INVENCOSTGRP");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Lasttrdate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTTRDATE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Meetplanin).HasColumnName("MEETPLANIN");

                entity.Property(e => e.Onhand).HasColumnName("ONHAND");

                entity.Property(e => e.Onvehicle).HasColumnName("ONVEHICLE");

                entity.Property(e => e.Plnotherin).HasColumnName("PLNOTHERIN");

                entity.Property(e => e.Plnotherout).HasColumnName("PLNOTHEROUT");

                entity.Property(e => e.Plnprodin).HasColumnName("PLNPRODIN");

                entity.Property(e => e.Plnprodout).HasColumnName("PLNPRODOUT");

                entity.Property(e => e.Plnrsrvprodin).HasColumnName("PLNRSRVPRODIN");

                entity.Property(e => e.Plnrsrvprodout).HasColumnName("PLNRSRVPRODOUT");

                entity.Property(e => e.Plnrsrvwhousein).HasColumnName("PLNRSRVWHOUSEIN");

                entity.Property(e => e.Plnrsrvwhouseout).HasColumnName("PLNRSRVWHOUSEOUT");

                entity.Property(e => e.Plnwhousein).HasColumnName("PLNWHOUSEIN");

                entity.Property(e => e.Plnwhouseout).HasColumnName("PLNWHOUSEOUT");

                entity.Property(e => e.Puramnt).HasColumnName("PURAMNT");

                entity.Property(e => e.Purcash).HasColumnName("PURCASH");

                entity.Property(e => e.Purcurr).HasColumnName("PURCURR");

                entity.Property(e => e.Received).HasColumnName("RECEIVED");

                entity.Property(e => e.Reserved).HasColumnName("RESERVED");

                entity.Property(e => e.Salamnt).HasColumnName("SALAMNT");

                entity.Property(e => e.Salcash).HasColumnName("SALCASH");

                entity.Property(e => e.Salcurr).HasColumnName("SALCURR");

                entity.Property(e => e.Shipped).HasColumnName("SHIPPED");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Tempin).HasColumnName("TEMPIN");

                entity.Property(e => e.Tempout).HasColumnName("TEMPOUT");

                entity.Property(e => e.Transferred).HasColumnName("TRANSFERRED");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lv00101StinvtotV1>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_STINVTOT_V1");

                entity.Property(e => e.Actotherin).HasColumnName("ACTOTHERIN");

                entity.Property(e => e.Actotherout).HasColumnName("ACTOTHEROUT");

                entity.Property(e => e.Actprodin).HasColumnName("ACTPRODIN");

                entity.Property(e => e.Actwaste).HasColumnName("ACTWASTE");

                entity.Property(e => e.Actwhousein).HasColumnName("ACTWHOUSEIN");

                entity.Property(e => e.Actwhouseout).HasColumnName("ACTWHOUSEOUT");

                entity.Property(e => e.Avgcurrval).HasColumnName("AVGCURRVAL");

                entity.Property(e => e.Avgvalue).HasColumnName("AVGVALUE");

                entity.Property(e => e.Cnt).HasColumnName("CNT");

                entity.Property(e => e.Countadd).HasColumnName("COUNTADD");

                entity.Property(e => e.Countdec).HasColumnName("COUNTDEC");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Onhand).HasColumnName("ONHAND");

                entity.Property(e => e.OnhandAvg).HasColumnName("ONHAND_AVG");

                entity.Property(e => e.Onvehicle).HasColumnName("ONVEHICLE");

                entity.Property(e => e.Plnotherin).HasColumnName("PLNOTHERIN");

                entity.Property(e => e.Plnotherout).HasColumnName("PLNOTHEROUT");

                entity.Property(e => e.Plnprodin).HasColumnName("PLNPRODIN");

                entity.Property(e => e.Plnprodout).HasColumnName("PLNPRODOUT");

                entity.Property(e => e.Plnrsrvprodin).HasColumnName("PLNRSRVPRODIN");

                entity.Property(e => e.Plnrsrvprodout).HasColumnName("PLNRSRVPRODOUT");

                entity.Property(e => e.Plnrsrvwhousein).HasColumnName("PLNRSRVWHOUSEIN");

                entity.Property(e => e.Plnrsrvwhouseout).HasColumnName("PLNRSRVWHOUSEOUT");

                entity.Property(e => e.Plnwhousein).HasColumnName("PLNWHOUSEIN");

                entity.Property(e => e.Plnwhouseout).HasColumnName("PLNWHOUSEOUT");

                entity.Property(e => e.Puramnt).HasColumnName("PURAMNT");

                entity.Property(e => e.Purcash).HasColumnName("PURCASH");

                entity.Property(e => e.Purcurr).HasColumnName("PURCURR");

                entity.Property(e => e.Salamnt).HasColumnName("SALAMNT");

                entity.Property(e => e.Salcash).HasColumnName("SALCASH");

                entity.Property(e => e.Salcurr).HasColumnName("SALCURR");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Tempin).HasColumnName("TEMPIN");

                entity.Property(e => e.Tempout).HasColumnName("TEMPOUT");

                entity.Property(e => e.Transferred).HasColumnName("TRANSFERRED");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lv00101StinvtotV2>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_STINVTOT_V2");

                entity.Property(e => e.Actotherin).HasColumnName("ACTOTHERIN");

                entity.Property(e => e.Actotherout).HasColumnName("ACTOTHEROUT");

                entity.Property(e => e.Actporder).HasColumnName("ACTPORDER");

                entity.Property(e => e.Actprodin).HasColumnName("ACTPRODIN");

                entity.Property(e => e.Actsorder).HasColumnName("ACTSORDER");

                entity.Property(e => e.Actwaste).HasColumnName("ACTWASTE");

                entity.Property(e => e.Actwhousein).HasColumnName("ACTWHOUSEIN");

                entity.Property(e => e.Actwhouseout).HasColumnName("ACTWHOUSEOUT");

                entity.Property(e => e.Avgcurrval).HasColumnName("AVGCURRVAL");

                entity.Property(e => e.Avgvalue).HasColumnName("AVGVALUE");

                entity.Property(e => e.Cnt).HasColumnName("CNT");

                entity.Property(e => e.Countadd).HasColumnName("COUNTADD");

                entity.Property(e => e.Countdec).HasColumnName("COUNTDEC");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Onhand).HasColumnName("ONHAND");

                entity.Property(e => e.OnhandAvg).HasColumnName("ONHAND_AVG");

                entity.Property(e => e.Onvehicle).HasColumnName("ONVEHICLE");

                entity.Property(e => e.Orfinvenno).HasColumnName("ORFINVENNO");

                entity.Property(e => e.Plnotherin).HasColumnName("PLNOTHERIN");

                entity.Property(e => e.Plnotherout).HasColumnName("PLNOTHEROUT");

                entity.Property(e => e.Plnprodin).HasColumnName("PLNPRODIN");

                entity.Property(e => e.Plnprodout).HasColumnName("PLNPRODOUT");

                entity.Property(e => e.Plnrsrvprodin).HasColumnName("PLNRSRVPRODIN");

                entity.Property(e => e.Plnrsrvprodout).HasColumnName("PLNRSRVPRODOUT");

                entity.Property(e => e.Plnrsrvwhousein).HasColumnName("PLNRSRVWHOUSEIN");

                entity.Property(e => e.Plnrsrvwhouseout).HasColumnName("PLNRSRVWHOUSEOUT");

                entity.Property(e => e.Plnwhousein).HasColumnName("PLNWHOUSEIN");

                entity.Property(e => e.Plnwhouseout).HasColumnName("PLNWHOUSEOUT");

                entity.Property(e => e.Puramnt).HasColumnName("PURAMNT");

                entity.Property(e => e.Purcash).HasColumnName("PURCASH");

                entity.Property(e => e.Purcurr).HasColumnName("PURCURR");

                entity.Property(e => e.Received).HasColumnName("RECEIVED");

                entity.Property(e => e.Reserved).HasColumnName("RESERVED");

                entity.Property(e => e.Salamnt).HasColumnName("SALAMNT");

                entity.Property(e => e.Salcash).HasColumnName("SALCASH");

                entity.Property(e => e.Salcurr).HasColumnName("SALCURR");

                entity.Property(e => e.Shipped).HasColumnName("SHIPPED");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Tempin).HasColumnName("TEMPIN");

                entity.Property(e => e.Tempout).HasColumnName("TEMPOUT");

                entity.Property(e => e.Transferred).HasColumnName("TRANSFERRED");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lv00101StinvtotV3>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_STINVTOT_V3");

                entity.Property(e => e.Actporder).HasColumnName("ACTPORDER");

                entity.Property(e => e.Actsorder).HasColumnName("ACTSORDER");

                entity.Property(e => e.Cnt).HasColumnName("CNT");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Reserved).HasColumnName("RESERVED");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lv00101StinvtotV4>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_STINVTOT_V4");

                entity.Property(e => e.Cnt).HasColumnName("CNT");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Distreserved1).HasColumnName("DISTRESERVED1");

                entity.Property(e => e.Distreserved2).HasColumnName("DISTRESERVED2");

                entity.Property(e => e.Distreserved3).HasColumnName("DISTRESERVED3");

                entity.Property(e => e.Dordgodate)
                    .HasColumnType("datetime")
                    .HasColumnName("DORDGODATE");

                entity.Property(e => e.Dordreturndate)
                    .HasColumnType("datetime")
                    .HasColumnName("DORDRETURNDATE");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Onvehicle1).HasColumnName("ONVEHICLE1");

                entity.Property(e => e.Onvehicle2).HasColumnName("ONVEHICLE2");

                entity.Property(e => e.Onvehicle3).HasColumnName("ONVEHICLE3");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lv00101StinvtotV5>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_STINVTOT_V5");

                entity.Property(e => e.Actporder).HasColumnName("ACTPORDER");

                entity.Property(e => e.Actsorder).HasColumnName("ACTSORDER");

                entity.Property(e => e.Cnt).HasColumnName("CNT");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Reserved).HasColumnName("RESERVED");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Typ).HasColumnName("TYP");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lv00101Stline>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_STLINE");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Code)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Invoicelnno).HasColumnName("INVOICELNNO");

                entity.Property(e => e.Invoiceref).HasColumnName("INVOICEREF");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Price).HasColumnName("PRICE");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");
            });

            modelBuilder.Entity<Lv00101Stlineforinvcalc>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_STLINEFORINVCALC");

                entity.Property(e => e.Abvatamount).HasColumnName("ABVATAMOUNT");

                entity.Property(e => e.Abvatstatus).HasColumnName("ABVATSTATUS");

                entity.Property(e => e.Accountref).HasColumnName("ACCOUNTREF");

                entity.Property(e => e.Addtaxaccref).HasColumnName("ADDTAXACCREF");

                entity.Property(e => e.Addtaxamntisupd).HasColumnName("ADDTAXAMNTISUPD");

                entity.Property(e => e.Addtaxamount).HasColumnName("ADDTAXAMOUNT");

                entity.Property(e => e.Addtaxcenterref).HasColumnName("ADDTAXCENTERREF");

                entity.Property(e => e.Addtaxconvfact).HasColumnName("ADDTAXCONVFACT");

                entity.Property(e => e.Addtaxcosaccref).HasColumnName("ADDTAXCOSACCREF");

                entity.Property(e => e.Addtaxcoscntref).HasColumnName("ADDTAXCOSCNTREF");

                entity.Property(e => e.Addtaxdiscamount).HasColumnName("ADDTAXDISCAMOUNT");

                entity.Property(e => e.Addtaxprcost).HasColumnName("ADDTAXPRCOST");

                entity.Property(e => e.Addtaxprcostcurr).HasColumnName("ADDTAXPRCOSTCURR");

                entity.Property(e => e.Addtaxrate).HasColumnName("ADDTAXRATE");

                entity.Property(e => e.Addtaxretcost).HasColumnName("ADDTAXRETCOST");

                entity.Property(e => e.Addtaxretcostcurr).HasColumnName("ADDTAXRETCOSTCURR");

                entity.Property(e => e.Addtaxvatmatrah).HasColumnName("ADDTAXVATMATRAH");

                entity.Property(e => e.Adjprcostufrs).HasColumnName("ADJPRCOSTUFRS");

                entity.Property(e => e.Adjprcrcostufrs).HasColumnName("ADJPRCRCOSTUFRS");

                entity.Property(e => e.Adjpriceufrs).HasColumnName("ADJPRICEUFRS");

                entity.Property(e => e.Adjreppriceufrs).HasColumnName("ADJREPPRICEUFRS");

                entity.Property(e => e.Affectcollatrl).HasColumnName("AFFECTCOLLATRL");

                entity.Property(e => e.Affectrisk).HasColumnName("AFFECTRISK");

                entity.Property(e => e.Altpromflag).HasColumnName("ALTPROMFLAG");

                entity.Property(e => e.Amount).HasColumnName("AMOUNT");

                entity.Property(e => e.Ataxexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTCODE");

                entity.Property(e => e.Ataxexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ATAXEXCEPTREASON");

                entity.Property(e => e.Billed).HasColumnName("BILLED");

                entity.Property(e => e.Billeditem).HasColumnName("BILLEDITEM");

                entity.Property(e => e.Calctype).HasColumnName("CALCTYPE");

                entity.Property(e => e.Campaignrefs1).HasColumnName("CAMPAIGNREFS1");

                entity.Property(e => e.Campaignrefs2).HasColumnName("CAMPAIGNREFS2");

                entity.Property(e => e.Campaignrefs3).HasColumnName("CAMPAIGNREFS3");

                entity.Property(e => e.Campaignrefs4).HasColumnName("CAMPAIGNREFS4");

                entity.Property(e => e.Campaignrefs5).HasColumnName("CAMPAIGNREFS5");

                entity.Property(e => e.Camppaydefref).HasColumnName("CAMPPAYDEFREF");

                entity.Property(e => e.Camppoint).HasColumnName("CAMPPOINT");

                entity.Property(e => e.Camppoints1).HasColumnName("CAMPPOINTS1");

                entity.Property(e => e.Camppoints2).HasColumnName("CAMPPOINTS2");

                entity.Property(e => e.Camppoints3).HasColumnName("CAMPPOINTS3");

                entity.Property(e => e.Camppoints4).HasColumnName("CAMPPOINTS4");

                entity.Property(e => e.Cancelled).HasColumnName("CANCELLED");

                entity.Property(e => e.Candeduct).HasColumnName("CANDEDUCT");

                entity.Property(e => e.Centerref).HasColumnName("CENTERREF");

                entity.Property(e => e.Clientref).HasColumnName("CLIENTREF");

                entity.Property(e => e.Cmpglineref).HasColumnName("CMPGLINEREF");

                entity.Property(e => e.Cmpglinerefs1).HasColumnName("CMPGLINEREFS1");

                entity.Property(e => e.Cmpglinerefs2).HasColumnName("CMPGLINEREFS2");

                entity.Property(e => e.Cmpglinerefs3).HasColumnName("CMPGLINEREFS3");

                entity.Property(e => e.Cmpglinerefs4).HasColumnName("CMPGLINEREFS4");

                entity.Property(e => e.Conditionref).HasColumnName("CONDITIONREF");

                entity.Property(e => e.Cosaccrefufrs).HasColumnName("COSACCREFUFRS");

                entity.Property(e => e.Coscntrefufrs).HasColumnName("COSCNTREFUFRS");

                entity.Property(e => e.Costdiffaccref).HasColumnName("COSTDIFFACCREF");

                entity.Property(e => e.Costdiffcenref).HasColumnName("COSTDIFFCENREF");

                entity.Property(e => e.Costdistprice).HasColumnName("COSTDISTPRICE");

                entity.Property(e => e.Costdistpriceufrs).HasColumnName("COSTDISTPRICEUFRS");

                entity.Property(e => e.Costdistrepprice).HasColumnName("COSTDISTREPPRICE");

                entity.Property(e => e.Costdistreppriceufrs).HasColumnName("COSTDISTREPPRICEUFRS");

                entity.Property(e => e.Costofsaleaccref).HasColumnName("COSTOFSALEACCREF");

                entity.Property(e => e.Costofsalecntref).HasColumnName("COSTOFSALECNTREF");

                entity.Property(e => e.Costrate).HasColumnName("COSTRATE");

                entity.Property(e => e.Cpstflag).HasColumnName("CPSTFLAG");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Decprdiff).HasColumnName("DECPRDIFF");

                entity.Property(e => e.Deductcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DEDUCTCODE");

                entity.Property(e => e.Deductionpart1).HasColumnName("DEDUCTIONPART1");

                entity.Property(e => e.Deductionpart2).HasColumnName("DEDUCTIONPART2");

                entity.Property(e => e.Delvrycode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("DELVRYCODE");

                entity.Property(e => e.Dempeggedamnt).HasColumnName("DEMPEGGEDAMNT");

                entity.Property(e => e.Destcostgrp).HasColumnName("DESTCOSTGRP");

                entity.Property(e => e.Destindex).HasColumnName("DESTINDEX");

                entity.Property(e => e.Destpolnref).HasColumnName("DESTPOLNREF");

                entity.Property(e => e.Deststatus).HasColumnName("DESTSTATUS");

                entity.Property(e => e.Desttype).HasColumnName("DESTTYPE");

                entity.Property(e => e.Destwsref).HasColumnName("DESTWSREF");

                entity.Property(e => e.Detline).HasColumnName("DETLINE");

                entity.Property(e => e.Diffprcost).HasColumnName("DIFFPRCOST");

                entity.Property(e => e.Diffprcostufrs).HasColumnName("DIFFPRCOSTUFRS");

                entity.Property(e => e.Diffprcrcost).HasColumnName("DIFFPRCRCOST");

                entity.Property(e => e.Diffprcrcostufrs).HasColumnName("DIFFPRCRCOSTUFRS");

                entity.Property(e => e.Diffprice).HasColumnName("DIFFPRICE");

                entity.Property(e => e.Diffpriceufrs).HasColumnName("DIFFPRICEUFRS");

                entity.Property(e => e.Diffrepprice).HasColumnName("DIFFREPPRICE");

                entity.Property(e => e.Diffreppriceufrs).HasColumnName("DIFFREPPRICEUFRS");

                entity.Property(e => e.Discper).HasColumnName("DISCPER");

                entity.Property(e => e.Distaddexp).HasColumnName("DISTADDEXP");

                entity.Property(e => e.Distcoef).HasColumnName("DISTCOEF");

                entity.Property(e => e.Distcost).HasColumnName("DISTCOST");

                entity.Property(e => e.Distdisc).HasColumnName("DISTDISC");

                entity.Property(e => e.Distexp).HasColumnName("DISTEXP");

                entity.Property(e => e.Distorderref).HasColumnName("DISTORDERREF");

                entity.Property(e => e.Distordlineref).HasColumnName("DISTORDLINEREF");

                entity.Property(e => e.Distprom).HasColumnName("DISTPROM");

                entity.Property(e => e.Doreserve).HasColumnName("DORESERVE");

                entity.Property(e => e.Dref).HasColumnName("DREF");

                entity.Property(e => e.Eidistflnnr).HasColumnName("EIDISTFLNNR");

                entity.Property(e => e.Eisrvdsttyp).HasColumnName("EISRVDSTTYP");

                entity.Property(e => e.Exaddtaxamnt).HasColumnName("EXADDTAXAMNT");

                entity.Property(e => e.Exaddtaxaref).HasColumnName("EXADDTAXAREF");

                entity.Property(e => e.Exaddtaxconvf).HasColumnName("EXADDTAXCONVF");

                entity.Property(e => e.Exaddtaxcref).HasColumnName("EXADDTAXCREF");

                entity.Property(e => e.Exaddtaxrate).HasColumnName("EXADDTAXRATE");

                entity.Property(e => e.Eximfctype).HasColumnName("EXIMFCTYPE");

                entity.Property(e => e.Eximficheno)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("EXIMFICHENO");

                entity.Property(e => e.Eximfileref).HasColumnName("EXIMFILEREF");

                entity.Property(e => e.Eximprocnr).HasColumnName("EXIMPROCNR");

                entity.Property(e => e.Eximtype).HasColumnName("EXIMTYPE");

                entity.Property(e => e.Eximwhfcref).HasColumnName("EXIMWHFCREF");

                entity.Property(e => e.Eximwhlnref).HasColumnName("EXIMWHLNREF");

                entity.Property(e => e.Faattrib).HasColumnName("FAATTRIB");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Fadaccref).HasColumnName("FADACCREF");

                entity.Property(e => e.Fadcenterref).HasColumnName("FADCENTERREF");

                entity.Property(e => e.Falinktype).HasColumnName("FALINKTYPE");

                entity.Property(e => e.Falossaccref).HasColumnName("FALOSSACCREF");

                entity.Property(e => e.Falosscentref).HasColumnName("FALOSSCENTREF");

                entity.Property(e => e.Faplaccref).HasColumnName("FAPLACCREF");

                entity.Property(e => e.Faplcenterref).HasColumnName("FAPLCENTERREF");

                entity.Property(e => e.Faprofitaccref).HasColumnName("FAPROFITACCREF");

                entity.Property(e => e.Faprofitcentref).HasColumnName("FAPROFITCENTREF");

                entity.Property(e => e.Faraccref).HasColumnName("FARACCREF");

                entity.Property(e => e.Farcenterref).HasColumnName("FARCENTERREF");

                entity.Property(e => e.Faregbinddate)
                    .HasColumnType("datetime")
                    .HasColumnName("FAREGBINDDATE");

                entity.Property(e => e.Faregref).HasColumnName("FAREGREF");

                entity.Property(e => e.Fromordwithpay).HasColumnName("FROMORDWITHPAY");

                entity.Property(e => e.Fromtransfer).HasColumnName("FROMTRANSFER");

                entity.Property(e => e.Ftime).HasColumnName("FTIME");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Globtrans).HasColumnName("GLOBTRANS");

                entity.Property(e => e.Grossuinfo1).HasColumnName("GROSSUINFO1");

                entity.Property(e => e.Grossuinfo2).HasColumnName("GROSSUINFO2");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Ineffectivecost).HasColumnName("INEFFECTIVECOST");

                entity.Property(e => e.Infdate)
                    .HasColumnType("datetime")
                    .HasColumnName("INFDATE");

                entity.Property(e => e.Infidx).HasColumnName("INFIDX");

                entity.Property(e => e.Infidxufrs).HasColumnName("INFIDXUFRS");

                entity.Property(e => e.Insexpline).HasColumnName("INSEXPLINE");

                entity.Property(e => e.Invoicelnno).HasColumnName("INVOICELNNO");

                entity.Property(e => e.Invoiceref).HasColumnName("INVOICEREF");

                entity.Property(e => e.Iocode).HasColumnName("IOCODE");

                entity.Property(e => e.Lineexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("LINEEXP");

                entity.Property(e => e.Linenet).HasColumnName("LINENET");

                entity.Property(e => e.Linetype).HasColumnName("LINETYPE");

                entity.Property(e => e.Logicalref)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("LOGICALREF");

                entity.Property(e => e.Lprodrsrvstat).HasColumnName("LPRODRSRVSTAT");

                entity.Property(e => e.Lprodstat).HasColumnName("LPRODSTAT");

                entity.Property(e => e.Madeofshred).HasColumnName("MADEOFSHRED");

                entity.Property(e => e.Mainstlnref).HasColumnName("MAINSTLNREF");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Netdiscamnt).HasColumnName("NETDISCAMNT");

                entity.Property(e => e.Netdiscflag).HasColumnName("NETDISCFLAG");

                entity.Property(e => e.Netdiscperc).HasColumnName("NETDISCPERC");

                entity.Property(e => e.Offerref).HasColumnName("OFFERREF");

                entity.Property(e => e.Offtransref).HasColumnName("OFFTRANSREF");

                entity.Property(e => e.Ordficheref).HasColumnName("ORDFICHEREF");

                entity.Property(e => e.Ordtransref).HasColumnName("ORDTRANSREF");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Othraddtaxaref).HasColumnName("OTHRADDTAXAREF");

                entity.Property(e => e.Othraddtaxcref).HasColumnName("OTHRADDTAXCREF");

                entity.Property(e => e.Outcost).HasColumnName("OUTCOST");

                entity.Property(e => e.Outcostcurr).HasColumnName("OUTCOSTCURR");

                entity.Property(e => e.Outcostcurrufrs).HasColumnName("OUTCOSTCURRUFRS");

                entity.Property(e => e.Outcostufrs).HasColumnName("OUTCOSTUFRS");

                entity.Property(e => e.Outputidcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("OUTPUTIDCODE");

                entity.Property(e => e.Outremamnt).HasColumnName("OUTREMAMNT");

                entity.Property(e => e.Outremcost).HasColumnName("OUTREMCOST");

                entity.Property(e => e.Outremcostcurr).HasColumnName("OUTREMCOSTCURR");

                entity.Property(e => e.Outremcostcurrufrs).HasColumnName("OUTREMCOSTCURRUFRS");

                entity.Property(e => e.Outremcostufrs).HasColumnName("OUTREMCOSTUFRS");

                entity.Property(e => e.Parentlnref).HasColumnName("PARENTLNREF");

                entity.Property(e => e.Paydefref).HasColumnName("PAYDEFREF");

                entity.Property(e => e.Plnamount).HasColumnName("PLNAMOUNT");

                entity.Property(e => e.Plndefserilotno)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PLNDEFSERILOTNO");

                entity.Property(e => e.Plnsttranspernr).HasColumnName("PLNSTTRANSPERNR");

                entity.Property(e => e.Plnsttransref).HasColumnName("PLNSTTRANSREF");

                entity.Property(e => e.Plnunrsrvamount).HasColumnName("PLNUNRSRVAMOUNT");

                entity.Property(e => e.Pointcampref).HasColumnName("POINTCAMPREF");

                entity.Property(e => e.Pointcamprefs1).HasColumnName("POINTCAMPREFS1");

                entity.Property(e => e.Pointcamprefs2).HasColumnName("POINTCAMPREFS2");

                entity.Property(e => e.Pointcamprefs3).HasColumnName("POINTCAMPREFS3");

                entity.Property(e => e.Pointcamprefs4).HasColumnName("POINTCAMPREFS4");

                entity.Property(e => e.Polineref).HasColumnName("POLINEREF");

                entity.Property(e => e.Pordclsplnamnt).HasColumnName("PORDCLSPLNAMNT");

                entity.Property(e => e.Pordclsplnunrsrvamnt).HasColumnName("PORDCLSPLNUNRSRVAMNT");

                entity.Property(e => e.Porderficheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("PORDERFICHENO");

                entity.Property(e => e.Pordsymoutln).HasColumnName("PORDSYMOUTLN");

                entity.Property(e => e.Praccref).HasColumnName("PRACCREF");

                entity.Property(e => e.Prcenterref).HasColumnName("PRCENTERREF");

                entity.Property(e => e.Prclistref).HasColumnName("PRCLISTREF");

                entity.Property(e => e.Prcurr).HasColumnName("PRCURR");

                entity.Property(e => e.Prdexptotal).HasColumnName("PRDEXPTOTAL");

                entity.Property(e => e.Prdordslplnreserve).HasColumnName("PRDORDSLPLNRESERVE");

                entity.Property(e => e.Prdordtotcoef).HasColumnName("PRDORDTOTCOEF");

                entity.Property(e => e.Prevataxprcostcurr).HasColumnName("PREVATAXPRCOSTCURR");

                entity.Property(e => e.Previousataxprcost).HasColumnName("PREVIOUSATAXPRCOST");

                entity.Property(e => e.Previousoutcost).HasColumnName("PREVIOUSOUTCOST");

                entity.Property(e => e.Prevlineno).HasColumnName("PREVLINENO");

                entity.Property(e => e.Prevlineref).HasColumnName("PREVLINEREF");

                entity.Property(e => e.Prevoutcostcurr).HasColumnName("PREVOUTCOSTCURR");

                entity.Property(e => e.Price).HasColumnName("PRICE");

                entity.Property(e => e.Prodorderref).HasColumnName("PRODORDERREF");

                entity.Property(e => e.Prodordertyp).HasColumnName("PRODORDERTYP");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Promclasitemref).HasColumnName("PROMCLASITEMREF");

                entity.Property(e => e.Promref).HasColumnName("PROMREF");

                entity.Property(e => e.Proutcostcrufrsdiff).HasColumnName("PROUTCOSTCRUFRSDIFF");

                entity.Property(e => e.Proutcostufrsdiff).HasColumnName("PROUTCOSTUFRSDIFF");

                entity.Property(e => e.Prprice).HasColumnName("PRPRICE");

                entity.Property(e => e.Prrate).HasColumnName("PRRATE");

                entity.Property(e => e.Prvataccref).HasColumnName("PRVATACCREF");

                entity.Property(e => e.Prvatcenref).HasColumnName("PRVATCENREF");

                entity.Property(e => e.Purchaccref).HasColumnName("PURCHACCREF");

                entity.Property(e => e.Purchaccrefufrs).HasColumnName("PURCHACCREFUFRS");

                entity.Property(e => e.Purchcentref).HasColumnName("PURCHCENTREF");

                entity.Property(e => e.Purchcentrefufrs).HasColumnName("PURCHCENTREFUFRS");

                entity.Property(e => e.Qprodfcref).HasColumnName("QPRODFCREF");

                entity.Property(e => e.Qprodfctyp).HasColumnName("QPRODFCTYP");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Reflaccref).HasColumnName("REFLACCREF");

                entity.Property(e => e.Reflothaccref).HasColumnName("REFLOTHACCREF");

                entity.Property(e => e.Reflvataccref).HasColumnName("REFLVATACCREF");

                entity.Property(e => e.Reflvatothaccref).HasColumnName("REFLVATOTHACCREF");

                entity.Property(e => e.Regtypref).HasColumnName("REGTYPREF");

                entity.Property(e => e.Reltransfcref).HasColumnName("RELTRANSFCREF");

                entity.Property(e => e.Reltranslnref).HasColumnName("RELTRANSLNREF");

                entity.Property(e => e.Reportrate).HasColumnName("REPORTRATE");

                entity.Property(e => e.Retamount).HasColumnName("RETAMOUNT");

                entity.Property(e => e.Retcost).HasColumnName("RETCOST");

                entity.Property(e => e.Retcostcurr).HasColumnName("RETCOSTCURR");

                entity.Property(e => e.Retcostcurrufrs).HasColumnName("RETCOSTCURRUFRS");

                entity.Property(e => e.Retcosttype).HasColumnName("RETCOSTTYPE");

                entity.Property(e => e.Retcostufrs).HasColumnName("RETCOSTUFRS");

                entity.Property(e => e.Salesmanref).HasColumnName("SALESMANREF");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Sourcecostgrp).HasColumnName("SOURCECOSTGRP");

                entity.Property(e => e.Sourceindex).HasColumnName("SOURCEINDEX");

                entity.Property(e => e.Sourcelink).HasColumnName("SOURCELINK");

                entity.Property(e => e.Sourcepolnref).HasColumnName("SOURCEPOLNREF");

                entity.Property(e => e.Sourcetype).HasColumnName("SOURCETYPE");

                entity.Property(e => e.Sourcewsref).HasColumnName("SOURCEWSREF");

                entity.Property(e => e.Specode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Status).HasColumnName("STATUS");

                entity.Property(e => e.Stdrpunitcost).HasColumnName("STDRPUNITCOST");

                entity.Property(e => e.Stdunitcost).HasColumnName("STDUNITCOST");

                entity.Property(e => e.Stfichelnno).HasColumnName("STFICHELNNO");

                entity.Property(e => e.Stficheref).HasColumnName("STFICHEREF");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Subcontorderref).HasColumnName("SUBCONTORDERREF");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Total).HasColumnName("TOTAL");

                entity.Property(e => e.Transexpline).HasColumnName("TRANSEXPLINE");

                entity.Property(e => e.Transqcok).HasColumnName("TRANSQCOK");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");

                entity.Property(e => e.Trcurr).HasColumnName("TRCURR");

                entity.Property(e => e.Trrate).HasColumnName("TRRATE");

                entity.Property(e => e.Uinfo1).HasColumnName("UINFO1");

                entity.Property(e => e.Uinfo2).HasColumnName("UINFO2");

                entity.Property(e => e.Uinfo3).HasColumnName("UINFO3");

                entity.Property(e => e.Uinfo4).HasColumnName("UINFO4");

                entity.Property(e => e.Uinfo5).HasColumnName("UINFO5");

                entity.Property(e => e.Uinfo6).HasColumnName("UINFO6");

                entity.Property(e => e.Uinfo7).HasColumnName("UINFO7");

                entity.Property(e => e.Uinfo8).HasColumnName("UINFO8");

                entity.Property(e => e.Underdeductlimit).HasColumnName("UNDERDEDUCTLIMIT");

                entity.Property(e => e.Uomref).HasColumnName("UOMREF");

                entity.Property(e => e.Updthisline).HasColumnName("UPDTHISLINE");

                entity.Property(e => e.Usref).HasColumnName("USREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Vat).HasColumnName("VAT");

                entity.Property(e => e.Vataccref).HasColumnName("VATACCREF");

                entity.Property(e => e.Vatamnt).HasColumnName("VATAMNT");

                entity.Property(e => e.Vatcalcdiff).HasColumnName("VATCALCDIFF");

                entity.Property(e => e.Vatcenterref).HasColumnName("VATCENTERREF");

                entity.Property(e => e.Vatexceptcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTCODE");

                entity.Property(e => e.Vatexceptreason)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("VATEXCEPTREASON");

                entity.Property(e => e.Vatinc).HasColumnName("VATINC");

                entity.Property(e => e.Vatmatrah).HasColumnName("VATMATRAH");

                entity.Property(e => e.Vendcomm).HasColumnName("VENDCOMM");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");

                entity.Property(e => e.Xprice).HasColumnName("XPRICE");

                entity.Property(e => e.Xpriceupd).HasColumnName("XPRICEUPD");

                entity.Property(e => e.Xreprate).HasColumnName("XREPRATE");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lv00101Trdgrp>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_TRDGRP");

                entity.Property(e => e.Alacak).HasColumnName("ALACAK");

                entity.Property(e => e.Bakiye).HasColumnName("BAKIYE");

                entity.Property(e => e.Borc).HasColumnName("BORC");

                entity.Property(e => e.Branch).HasColumnName("BRANCH");

                entity.Property(e => e.CariKodu)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CARI_KODU");

                entity.Property(e => e.CariRef).HasColumnName("CARI_REF");

                entity.Property(e => e.CariUnvani)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("CARI_UNVANI");

                entity.Property(e => e.CepTelefonu)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("CEP_TELEFONU");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Ilce)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ILCE");

                entity.Property(e => e.Kullanim).HasColumnName("KULLANIM");

                entity.Property(e => e.OzelKod)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("OZEL_KOD");

                entity.Property(e => e.OzelKod2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("OZEL_KOD2");

                entity.Property(e => e.OzelKod3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("OZEL_KOD3");

                entity.Property(e => e.OzelKod4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("OZEL_KOD4");

                entity.Property(e => e.OzelKod5)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("OZEL_KOD5");

                entity.Property(e => e.Sehir)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("SEHIR");

                entity.Property(e => e.Tarih)
                    .HasColumnType("smalldatetime")
                    .HasColumnName("TARIH");

                entity.Property(e => e.TelNo1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEL_NO1");

                entity.Property(e => e.TelNo2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TEL_NO2");

                entity.Property(e => e.TigAciklama)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TIG_ACIKLAMA");

                entity.Property(e => e.TigKodu)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TIG_KODU");

                entity.Property(e => e.TigSayi).HasColumnName("TIG_SAYI");

                entity.Property(e => e.Ulke)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("ULKE");

                entity.Property(e => e.YetkiKodu)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("YETKI_KODU");
            });

            modelBuilder.Entity<Lv00101Vrntinven>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_VRNTINVENS");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Month).HasColumnName("MONTH_");

                entity.Property(e => e.Mtrlinc).HasColumnName("MTRLINC");

                entity.Property(e => e.PurchasesAmount).HasColumnName("PURCHASES_AMOUNT");

                entity.Property(e => e.PurchasesCashamnt).HasColumnName("PURCHASES_CASHAMNT");

                entity.Property(e => e.PurchasesCurramnt).HasColumnName("PURCHASES_CURRAMNT");

                entity.Property(e => e.PurchasesDiscamnt).HasColumnName("PURCHASES_DISCAMNT");

                entity.Property(e => e.PurchasesRetamnt).HasColumnName("PURCHASES_RETAMNT");

                entity.Property(e => e.PurchasesVatamnt).HasColumnName("PURCHASES_VATAMNT");

                entity.Property(e => e.SalesAmount).HasColumnName("SALES_AMOUNT");

                entity.Property(e => e.SalesCashamnt).HasColumnName("SALES_CASHAMNT");

                entity.Property(e => e.SalesCurramnt).HasColumnName("SALES_CURRAMNT");

                entity.Property(e => e.SalesDiscamnt).HasColumnName("SALES_DISCAMNT");

                entity.Property(e => e.SalesRetamnt).HasColumnName("SALES_RETAMNT");

                entity.Property(e => e.SalesVatamnt).HasColumnName("SALES_VATAMNT");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");

                entity.Property(e => e.Virtualinven).HasColumnName("VIRTUALINVEN");

                entity.Property(e => e.Year).HasColumnName("YEAR_");
            });

            modelBuilder.Entity<Lv00101Vrntinvtot>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_01_VRNTINVTOT");

                entity.Property(e => e.Actotherin).HasColumnName("ACTOTHERIN");

                entity.Property(e => e.Actotherout).HasColumnName("ACTOTHEROUT");

                entity.Property(e => e.Actporder).HasColumnName("ACTPORDER");

                entity.Property(e => e.Actprodin).HasColumnName("ACTPRODIN");

                entity.Property(e => e.Actsorder).HasColumnName("ACTSORDER");

                entity.Property(e => e.Actwaste).HasColumnName("ACTWASTE");

                entity.Property(e => e.Actwhousein).HasColumnName("ACTWHOUSEIN");

                entity.Property(e => e.Actwhouseout).HasColumnName("ACTWHOUSEOUT");

                entity.Property(e => e.Avgcurrval).HasColumnName("AVGCURRVAL");

                entity.Property(e => e.Avgvalue).HasColumnName("AVGVALUE");

                entity.Property(e => e.Countadd).HasColumnName("COUNTADD");

                entity.Property(e => e.Countdec).HasColumnName("COUNTDEC");

                entity.Property(e => e.Date)
                    .HasColumnType("datetime")
                    .HasColumnName("DATE_");

                entity.Property(e => e.Distreserved).HasColumnName("DISTRESERVED");

                entity.Property(e => e.Invencostgrp).HasColumnName("INVENCOSTGRP");

                entity.Property(e => e.Invenno).HasColumnName("INVENNO");

                entity.Property(e => e.Lasttrdate)
                    .HasColumnType("datetime")
                    .HasColumnName("LASTTRDATE");

                entity.Property(e => e.Logicalref).HasColumnName("LOGICALREF");

                entity.Property(e => e.Meetplanin).HasColumnName("MEETPLANIN");

                entity.Property(e => e.Onhand).HasColumnName("ONHAND");

                entity.Property(e => e.Onvehicle).HasColumnName("ONVEHICLE");

                entity.Property(e => e.Plnotherin).HasColumnName("PLNOTHERIN");

                entity.Property(e => e.Plnotherout).HasColumnName("PLNOTHEROUT");

                entity.Property(e => e.Plnprodin).HasColumnName("PLNPRODIN");

                entity.Property(e => e.Plnprodout).HasColumnName("PLNPRODOUT");

                entity.Property(e => e.Plnrsrvprodin).HasColumnName("PLNRSRVPRODIN");

                entity.Property(e => e.Plnrsrvprodout).HasColumnName("PLNRSRVPRODOUT");

                entity.Property(e => e.Plnrsrvwhousein).HasColumnName("PLNRSRVWHOUSEIN");

                entity.Property(e => e.Plnrsrvwhouseout).HasColumnName("PLNRSRVWHOUSEOUT");

                entity.Property(e => e.Plnwhousein).HasColumnName("PLNWHOUSEIN");

                entity.Property(e => e.Plnwhouseout).HasColumnName("PLNWHOUSEOUT");

                entity.Property(e => e.Puramnt).HasColumnName("PURAMNT");

                entity.Property(e => e.Purcash).HasColumnName("PURCASH");

                entity.Property(e => e.Purcurr).HasColumnName("PURCURR");

                entity.Property(e => e.Received).HasColumnName("RECEIVED");

                entity.Property(e => e.Reserved).HasColumnName("RESERVED");

                entity.Property(e => e.Salamnt).HasColumnName("SALAMNT");

                entity.Property(e => e.Salcash).HasColumnName("SALCASH");

                entity.Property(e => e.Salcurr).HasColumnName("SALCURR");

                entity.Property(e => e.Shipped).HasColumnName("SHIPPED");

                entity.Property(e => e.Stockref).HasColumnName("STOCKREF");

                entity.Property(e => e.Tempin).HasColumnName("TEMPIN");

                entity.Property(e => e.Tempout).HasColumnName("TEMPOUT");

                entity.Property(e => e.Transferred).HasColumnName("TRANSFERRED");

                entity.Property(e => e.Variantref).HasColumnName("VARIANTREF");
            });

            modelBuilder.Entity<Lv001Clcard>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_CLCARD");

                entity.Property(e => e.Acceptedesp).HasColumnName("ACCEPTEDESP");

                entity.Property(e => e.Accepteinv).HasColumnName("ACCEPTEINV");

                entity.Property(e => e.Accepteinvpublic).HasColumnName("ACCEPTEINVPUBLIC");

                entity.Property(e => e.Active).HasColumnName("ACTIVE");

                entity.Property(e => e.Addr1)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR1");

                entity.Property(e => e.Addr2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("ADDR2");

                entity.Property(e => e.Addtoreflist).HasColumnName("ADDTOREFLIST");

                entity.Property(e => e.Adressno)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ADRESSNO");

                entity.Property(e => e.Appleid)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("APPLEID");

                entity.Property(e => e.Arpquoteinc).HasColumnName("ARPQUOTEINC");

                entity.Property(e => e.Autopaidbank)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("AUTOPAIDBANK");

                entity.Property(e => e.Bankaccounts1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS1");

                entity.Property(e => e.Bankaccounts2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS2");

                entity.Property(e => e.Bankaccounts3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS3");

                entity.Property(e => e.Bankaccounts4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS4");

                entity.Property(e => e.Bankaccounts5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS5");

                entity.Property(e => e.Bankaccounts6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS6");

                entity.Property(e => e.Bankaccounts7)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKACCOUNTS7");

                entity.Property(e => e.Bankbcurrency1)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BANKBCURRENCY1");

                entity.Property(e => e.Bankbcurrency2)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BANKBCURRENCY2");

                entity.Property(e => e.Bankbcurrency3)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BANKBCURRENCY3");

                entity.Property(e => e.Bankbcurrency4)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BANKBCURRENCY4");

                entity.Property(e => e.Bankbcurrency5)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BANKBCURRENCY5");

                entity.Property(e => e.Bankbcurrency6)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BANKBCURRENCY6");

                entity.Property(e => e.Bankbcurrency7)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .HasColumnName("BANKBCURRENCY7");

                entity.Property(e => e.Bankbics1)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKBICS1");

                entity.Property(e => e.Bankbics2)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKBICS2");

                entity.Property(e => e.Bankbics3)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKBICS3");

                entity.Property(e => e.Bankbics4)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKBICS4");

                entity.Property(e => e.Bankbics5)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKBICS5");

                entity.Property(e => e.Bankbics6)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKBICS6");

                entity.Property(e => e.Bankbics7)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("BANKBICS7");

                entity.Property(e => e.Bankbranchs1)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS1");

                entity.Property(e => e.Bankbranchs2)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS2");

                entity.Property(e => e.Bankbranchs3)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS3");

                entity.Property(e => e.Bankbranchs4)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS4");

                entity.Property(e => e.Bankbranchs5)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS5");

                entity.Property(e => e.Bankbranchs6)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS6");

                entity.Property(e => e.Bankbranchs7)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("BANKBRANCHS7");

                entity.Property(e => e.Bankcorrpacc1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKCORRPACC1");

                entity.Property(e => e.Bankcorrpacc2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKCORRPACC2");

                entity.Property(e => e.Bankcorrpacc3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKCORRPACC3");

                entity.Property(e => e.Bankcorrpacc4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKCORRPACC4");

                entity.Property(e => e.Bankcorrpacc5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKCORRPACC5");

                entity.Property(e => e.Bankcorrpacc6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKCORRPACC6");

                entity.Property(e => e.Bankcorrpacc7)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKCORRPACC7");

                entity.Property(e => e.Bankibans1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKIBANS1");

                entity.Property(e => e.Bankibans2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKIBANS2");

                entity.Property(e => e.Bankibans3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKIBANS3");

                entity.Property(e => e.Bankibans4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKIBANS4");

                entity.Property(e => e.Bankibans5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKIBANS5");

                entity.Property(e => e.Bankibans6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKIBANS6");

                entity.Property(e => e.Bankibans7)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKIBANS7");

                entity.Property(e => e.Banknames1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAMES1");

                entity.Property(e => e.Banknames2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAMES2");

                entity.Property(e => e.Banknames3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAMES3");

                entity.Property(e => e.Banknames4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAMES4");

                entity.Property(e => e.Banknames5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAMES5");

                entity.Property(e => e.Banknames6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAMES6");

                entity.Property(e => e.Banknames7)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKNAMES7");

                entity.Property(e => e.Bankvoen1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKVOEN1");

                entity.Property(e => e.Bankvoen2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKVOEN2");

                entity.Property(e => e.Bankvoen3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKVOEN3");

                entity.Property(e => e.Bankvoen4)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKVOEN4");

                entity.Property(e => e.Bankvoen5)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKVOEN5");

                entity.Property(e => e.Bankvoen6)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKVOEN6");

                entity.Property(e => e.Bankvoen7)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("BANKVOEN7");

                entity.Property(e => e.Blocked).HasColumnName("BLOCKED");

                entity.Property(e => e.Brokercomp).HasColumnName("BROKERCOMP");

                entity.Property(e => e.CapiblockCreadeddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_CREADEDDATE");

                entity.Property(e => e.CapiblockCreatedby).HasColumnName("CAPIBLOCK_CREATEDBY");

                entity.Property(e => e.CapiblockCreatedhour).HasColumnName("CAPIBLOCK_CREATEDHOUR");

                entity.Property(e => e.CapiblockCreatedmin).HasColumnName("CAPIBLOCK_CREATEDMIN");

                entity.Property(e => e.CapiblockCreatedsec).HasColumnName("CAPIBLOCK_CREATEDSEC");

                entity.Property(e => e.CapiblockModifiedby).HasColumnName("CAPIBLOCK_MODIFIEDBY");

                entity.Property(e => e.CapiblockModifieddate)
                    .HasColumnType("datetime")
                    .HasColumnName("CAPIBLOCK_MODIFIEDDATE");

                entity.Property(e => e.CapiblockModifiedhour).HasColumnName("CAPIBLOCK_MODIFIEDHOUR");

                entity.Property(e => e.CapiblockModifiedmin).HasColumnName("CAPIBLOCK_MODIFIEDMIN");

                entity.Property(e => e.CapiblockModifiedsec).HasColumnName("CAPIBLOCK_MODIFIEDSEC");

                entity.Property(e => e.Cardtype).HasColumnName("CARDTYPE");

                entity.Property(e => e.Cashref).HasColumnName("CASHREF");

                entity.Property(e => e.Ccurrency).HasColumnName("CCURRENCY");

                entity.Property(e => e.Cellphone)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("CELLPHONE");

                entity.Property(e => e.City)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CITY");

                entity.Property(e => e.Citycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("CITYCODE");

                entity.Property(e => e.Cityid)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("CITYID");

                entity.Property(e => e.Clanguage).HasColumnName("CLANGUAGE");

                entity.Property(e => e.Clccandeduct).HasColumnName("CLCCANDEDUCT");

                entity.Property(e => e.Clcrm).HasColumnName("CLCRM");

                entity.Property(e => e.Clordfreq).HasColumnName("CLORDFREQ");

                entity.Property(e => e.Closedatecount).HasColumnName("CLOSEDATECOUNT");

                entity.Property(e => e.Closedatetrack).HasColumnName("CLOSEDATETRACK");

                entity.Property(e => e.Code)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CODE");

                entity.Property(e => e.Collectinvoicing).HasColumnName("COLLECTINVOICING");

                entity.Property(e => e.Conscoderef).HasColumnName("CONSCODEREF");

                entity.Property(e => e.Country)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRY");

                entity.Property(e => e.Countrycode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("COUNTRYCODE");

                entity.Property(e => e.Cratediffproc).HasColumnName("CRATEDIFFPROC");

                entity.Property(e => e.Createwhfiche).HasColumnName("CREATEWHFICHE");

                entity.Property(e => e.Curratetype).HasColumnName("CURRATETYPE");

                entity.Property(e => e.Cyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CYPHCODE");

                entity.Property(e => e.Dbsbankcurrency1).HasColumnName("DBSBANKCURRENCY1");

                entity.Property(e => e.Dbsbankcurrency2).HasColumnName("DBSBANKCURRENCY2");

                entity.Property(e => e.Dbsbankcurrency3).HasColumnName("DBSBANKCURRENCY3");

                entity.Property(e => e.Dbsbankcurrency4).HasColumnName("DBSBANKCURRENCY4");

                entity.Property(e => e.Dbsbankcurrency5).HasColumnName("DBSBANKCURRENCY5");

                entity.Property(e => e.Dbsbankcurrency6).HasColumnName("DBSBANKCURRENCY6");

                entity.Property(e => e.Dbsbankcurrency7).HasColumnName("DBSBANKCURRENCY7");

                entity.Property(e => e.Dbsbankno1).HasColumnName("DBSBANKNO1");

                entity.Property(e => e.Dbsbankno2).HasColumnName("DBSBANKNO2");

                entity.Property(e => e.Dbsbankno3).HasColumnName("DBSBANKNO3");

                entity.Property(e => e.Dbsbankno4).HasColumnName("DBSBANKNO4");

                entity.Property(e => e.Dbsbankno5).HasColumnName("DBSBANKNO5");

                entity.Property(e => e.Dbsbankno6).HasColumnName("DBSBANKNO6");

                entity.Property(e => e.Dbsbankno7).HasColumnName("DBSBANKNO7");

                entity.Property(e => e.Dbslimit1).HasColumnName("DBSLIMIT1");

                entity.Property(e => e.Dbslimit2).HasColumnName("DBSLIMIT2");

                entity.Property(e => e.Dbslimit3).HasColumnName("DBSLIMIT3");

                entity.Property(e => e.Dbslimit4).HasColumnName("DBSLIMIT4");

                entity.Property(e => e.Dbslimit5).HasColumnName("DBSLIMIT5");

                entity.Property(e => e.Dbslimit6).HasColumnName("DBSLIMIT6");

                entity.Property(e => e.Dbslimit7).HasColumnName("DBSLIMIT7");

                entity.Property(e => e.Dbsriskcntrl1).HasColumnName("DBSRISKCNTRL1");

                entity.Property(e => e.Dbsriskcntrl2).HasColumnName("DBSRISKCNTRL2");

                entity.Property(e => e.Dbsriskcntrl3).HasColumnName("DBSRISKCNTRL3");

                entity.Property(e => e.Dbsriskcntrl4).HasColumnName("DBSRISKCNTRL4");

                entity.Property(e => e.Dbsriskcntrl5).HasColumnName("DBSRISKCNTRL5");

                entity.Property(e => e.Dbsriskcntrl6).HasColumnName("DBSRISKCNTRL6");

                entity.Property(e => e.Dbsriskcntrl7).HasColumnName("DBSRISKCNTRL7");

                entity.Property(e => e.Dbstotal1).HasColumnName("DBSTOTAL1");

                entity.Property(e => e.Dbstotal2).HasColumnName("DBSTOTAL2");

                entity.Property(e => e.Dbstotal3).HasColumnName("DBSTOTAL3");

                entity.Property(e => e.Dbstotal4).HasColumnName("DBSTOTAL4");

                entity.Property(e => e.Dbstotal5).HasColumnName("DBSTOTAL5");

                entity.Property(e => e.Dbstotal6).HasColumnName("DBSTOTAL6");

                entity.Property(e => e.Dbstotal7).HasColumnName("DBSTOTAL7");

                entity.Property(e => e.Defbnaccref).HasColumnName("DEFBNACCREF");

                entity.Property(e => e.Definition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION_");

                entity.Property(e => e.Definition2)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("DEFINITION2");

                entity.Property(e => e.Degactive).HasColumnName("DEGACTIVE");

                entity.Property(e => e.Degcurr).HasColumnName("DEGCURR");

                entity.Property(e => e.Deliveryfirm)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DELIVERYFIRM");

                entity.Property(e => e.Deliverymethod)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DELIVERYMETHOD");

                entity.Property(e => e.Discrate).HasColumnName("DISCRATE");

                entity.Property(e => e.Disctype).HasColumnName("DISCTYPE");

                entity.Property(e => e.Dispprintcnt).HasColumnName("DISPPRINTCNT");

                entity.Property(e => e.District)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICT");

                entity.Property(e => e.Districtcode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("DISTRICTCODE");

                entity.Property(e => e.Driverref).HasColumnName("DRIVERREF");

                entity.Property(e => e.Dspsendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("DSPSENDEMAILADDR");

                entity.Property(e => e.Dspsendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("DSPSENDFAXNR");

                entity.Property(e => e.Dspsendformat).HasColumnName("DSPSENDFORMAT");

                entity.Property(e => e.Dspsendmethod).HasColumnName("DSPSENDMETHOD");

                entity.Property(e => e.Duedatecontrol1).HasColumnName("DUEDATECONTROL1");

                entity.Property(e => e.Duedatecontrol10).HasColumnName("DUEDATECONTROL10");

                entity.Property(e => e.Duedatecontrol11).HasColumnName("DUEDATECONTROL11");

                entity.Property(e => e.Duedatecontrol12).HasColumnName("DUEDATECONTROL12");

                entity.Property(e => e.Duedatecontrol13).HasColumnName("DUEDATECONTROL13");

                entity.Property(e => e.Duedatecontrol14).HasColumnName("DUEDATECONTROL14");

                entity.Property(e => e.Duedatecontrol15).HasColumnName("DUEDATECONTROL15");

                entity.Property(e => e.Duedatecontrol2).HasColumnName("DUEDATECONTROL2");

                entity.Property(e => e.Duedatecontrol3).HasColumnName("DUEDATECONTROL3");

                entity.Property(e => e.Duedatecontrol4).HasColumnName("DUEDATECONTROL4");

                entity.Property(e => e.Duedatecontrol5).HasColumnName("DUEDATECONTROL5");

                entity.Property(e => e.Duedatecontrol6).HasColumnName("DUEDATECONTROL6");

                entity.Property(e => e.Duedatecontrol7).HasColumnName("DUEDATECONTROL7");

                entity.Property(e => e.Duedatecontrol8).HasColumnName("DUEDATECONTROL8");

                entity.Property(e => e.Duedatecontrol9).HasColumnName("DUEDATECONTROL9");

                entity.Property(e => e.Duedatecount).HasColumnName("DUEDATECOUNT");

                entity.Property(e => e.Duedatelimit).HasColumnName("DUEDATELIMIT");

                entity.Property(e => e.Duedatetrack).HasColumnName("DUEDATETRACK");

                entity.Property(e => e.Earcemailaddr1)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EARCEMAILADDR1");

                entity.Property(e => e.Earcemailaddr2)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EARCEMAILADDR2");

                entity.Property(e => e.Earcemailaddr3)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EARCEMAILADDR3");

                entity.Property(e => e.Ebankno).HasColumnName("EBANKNO");

                entity.Property(e => e.Ebusdatasendtype).HasColumnName("EBUSDATASENDTYPE");

                entity.Property(e => e.Edino)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EDINO");

                entity.Property(e => e.Einvcustom).HasColumnName("EINVCUSTOM");

                entity.Property(e => e.Einvoiceid)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("EINVOICEID");

                entity.Property(e => e.Einvoicetyp).HasColumnName("EINVOICETYP");

                entity.Property(e => e.Einvoicetype).HasColumnName("EINVOICETYPE");

                entity.Property(e => e.Emailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR");

                entity.Property(e => e.Emailaddr2)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR2");

                entity.Property(e => e.Emailaddr3)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EMAILADDR3");

                entity.Property(e => e.Excntryref).HasColumnName("EXCNTRYREF");

                entity.Property(e => e.Excntrytyp).HasColumnName("EXCNTRYTYP");

                entity.Property(e => e.Eximbrbankref).HasColumnName("EXIMBRBANKREF");

                entity.Property(e => e.Eximcnsltclref).HasColumnName("EXIMCNSLTCLREF");

                entity.Property(e => e.Eximcustomref).HasColumnName("EXIMCUSTOMREF");

                entity.Property(e => e.Eximfrghtclref).HasColumnName("EXIMFRGHTCLREF");

                entity.Property(e => e.Eximntfyclref).HasColumnName("EXIMNTFYCLREF");

                entity.Property(e => e.Eximpaytypref).HasColumnName("EXIMPAYTYPREF");

                entity.Property(e => e.Eximregtypref).HasColumnName("EXIMREGTYPREF");

                entity.Property(e => e.Eximsendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EXIMSENDEMAILADDR");

                entity.Property(e => e.Eximsendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("EXIMSENDFAXNR");

                entity.Property(e => e.Eximsendformat).HasColumnName("EXIMSENDFORMAT");

                entity.Property(e => e.Eximsendmethod).HasColumnName("EXIMSENDMETHOD");

                entity.Property(e => e.Expbrws).HasColumnName("EXPBRWS");

                entity.Property(e => e.Expbustypref).HasColumnName("EXPBUSTYPREF");

                entity.Property(e => e.Expdocno)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("EXPDOCNO");

                entity.Property(e => e.Expregno)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("EXPREGNO");

                entity.Property(e => e.Extaccessflags).HasColumnName("EXTACCESSFLAGS");

                entity.Property(e => e.Extenref).HasColumnName("EXTENREF");

                entity.Property(e => e.Extsendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("EXTSENDEMAILADDR");

                entity.Property(e => e.Extsendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("EXTSENDFAXNR");

                entity.Property(e => e.Extsendformat).HasColumnName("EXTSENDFORMAT");

                entity.Property(e => e.Extsendmethod).HasColumnName("EXTSENDMETHOD");

                entity.Property(e => e.Facebookurl)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("FACEBOOKURL");

                entity.Property(e => e.Factorydivnr).HasColumnName("FACTORYDIVNR");

                entity.Property(e => e.Factorynr).HasColumnName("FACTORYNR");

                entity.Property(e => e.Faxcode)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("FAXCODE");

                entity.Property(e => e.Faxextnum)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("FAXEXTNUM");

                entity.Property(e => e.Faxnr)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("FAXNR");

                entity.Property(e => e.Fbasendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("FBASENDEMAILADDR");

                entity.Property(e => e.Fbasendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("FBASENDFAXNR");

                entity.Property(e => e.Fbasendformat).HasColumnName("FBASENDFORMAT");

                entity.Property(e => e.Fbasendmethod).HasColumnName("FBASENDMETHOD");

                entity.Property(e => e.Fbssendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("FBSSENDEMAILADDR");

                entity.Property(e => e.Fbssendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("FBSSENDFAXNR");

                entity.Property(e => e.Fbssendformat).HasColumnName("FBSSENDFORMAT");

                entity.Property(e => e.Fbssendmethod).HasColumnName("FBSSENDMETHOD");

                entity.Property(e => e.Finbrws).HasColumnName("FINBRWS");

                entity.Property(e => e.Globalid)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("GLOBALID");

                entity.Property(e => e.Grpfirmnr).HasColumnName("GRPFIRMNR");

                entity.Property(e => e.Guid)
                    .HasMaxLength(37)
                    .IsUnicode(false)
                    .HasColumnName("GUID");

                entity.Property(e => e.Imageinc).HasColumnName("IMAGEINC");

                entity.Property(e => e.Imcntryref).HasColumnName("IMCNTRYREF");

                entity.Property(e => e.Imcntrytyp).HasColumnName("IMCNTRYTYP");

                entity.Property(e => e.Impbrws).HasColumnName("IMPBRWS");

                entity.Property(e => e.Incharge)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("INCHARGE");

                entity.Property(e => e.Incharge2)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("INCHARGE2");

                entity.Property(e => e.Incharge3)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("INCHARGE3");

                entity.Property(e => e.Inchtelcodes1)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELCODES1");

                entity.Property(e => e.Inchtelcodes2)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELCODES2");

                entity.Property(e => e.Inchtelcodes3)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELCODES3");

                entity.Property(e => e.Inchtelextnums1)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELEXTNUMS1");

                entity.Property(e => e.Inchtelextnums2)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELEXTNUMS2");

                entity.Property(e => e.Inchtelextnums3)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELEXTNUMS3");

                entity.Property(e => e.Inchtelnrs1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELNRS1");

                entity.Property(e => e.Inchtelnrs2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELNRS2");

                entity.Property(e => e.Inchtelnrs3)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("INCHTELNRS3");

                entity.Property(e => e.Ininvennr).HasColumnName("ININVENNR");

                entity.Property(e => e.Inistatusflags).HasColumnName("INISTATUSFLAGS");

                entity.Property(e => e.Insteadofdesp).HasColumnName("INSTEADOFDESP");

                entity.Property(e => e.Invprintcnt).HasColumnName("INVPRINTCNT");

                entity.Property(e => e.Invsendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("INVSENDEMAILADDR");

                entity.Property(e => e.Invsendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("INVSENDFAXNR");

                entity.Property(e => e.Invsendformat).HasColumnName("INVSENDFORMAT");

                entity.Property(e => e.Invsendmethod).HasColumnName("INVSENDMETHOD");

                entity.Property(e => e.Isforeign).HasColumnName("ISFOREIGN");

                entity.Property(e => e.Ispercurr).HasColumnName("ISPERCURR");

                entity.Property(e => e.Isperscomp).HasColumnName("ISPERSCOMP");

                entity.Property(e => e.Kvkkanonydate)
                    .HasColumnType("datetime")
                    .HasColumnName("KVKKANONYDATE");

                entity.Property(e => e.Kvkkanonystatus).HasColumnName("KVKKANONYSTATUS");

                entity.Property(e => e.Kvkkbegdate)
                    .HasColumnType("datetime")
                    .HasColumnName("KVKKBEGDATE");

                entity.Property(e => e.Kvkkcanceldate)
                    .HasColumnType("datetime")
                    .HasColumnName("KVKKCANCELDATE");

                entity.Property(e => e.Kvkkenddate)
                    .HasColumnType("datetime")
                    .HasColumnName("KVKKENDDATE");

                entity.Property(e => e.Kvkkpermstatus).HasColumnName("KVKKPERMSTATUS");

                entity.Property(e => e.Labelinfo).HasColumnName("LABELINFO");

                entity.Property(e => e.Labelinfodesp).HasColumnName("LABELINFODESP");

                entity.Property(e => e.Lastsendremlev).HasColumnName("LASTSENDREMLEV");

                entity.Property(e => e.Latitute)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("LATITUTE");

                entity.Property(e => e.Ldxfirmnr).HasColumnName("LDXFIRMNR");

                entity.Property(e => e.Lidconfirmed).HasColumnName("LIDCONFIRMED");

                entity.Property(e => e.Loangrpctrl).HasColumnName("LOANGRPCTRL");

                entity.Property(e => e.Logicalref)
                    .ValueGeneratedOnAdd()
                    .HasColumnName("LOGICALREF");

                entity.Property(e => e.Logoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("LOGOID");

                entity.Property(e => e.Longitude)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("LONGITUDE");

                entity.Property(e => e.Lowlevelcodes1).HasColumnName("LOWLEVELCODES1");

                entity.Property(e => e.Lowlevelcodes10).HasColumnName("LOWLEVELCODES10");

                entity.Property(e => e.Lowlevelcodes2).HasColumnName("LOWLEVELCODES2");

                entity.Property(e => e.Lowlevelcodes3).HasColumnName("LOWLEVELCODES3");

                entity.Property(e => e.Lowlevelcodes4).HasColumnName("LOWLEVELCODES4");

                entity.Property(e => e.Lowlevelcodes5).HasColumnName("LOWLEVELCODES5");

                entity.Property(e => e.Lowlevelcodes6).HasColumnName("LOWLEVELCODES6");

                entity.Property(e => e.Lowlevelcodes7).HasColumnName("LOWLEVELCODES7");

                entity.Property(e => e.Lowlevelcodes8).HasColumnName("LOWLEVELCODES8");

                entity.Property(e => e.Lowlevelcodes9).HasColumnName("LOWLEVELCODES9");

                entity.Property(e => e.Ltrsendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("LTRSENDEMAILADDR");

                entity.Property(e => e.Ltrsendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("LTRSENDFAXNR");

                entity.Property(e => e.Ltrsendformat).HasColumnName("LTRSENDFORMAT");

                entity.Property(e => e.Ltrsendmethod).HasColumnName("LTRSENDMETHOD");

                entity.Property(e => e.Mapid)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("MAPID");

                entity.Property(e => e.Name)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("NAME");

                entity.Property(e => e.Notifycrdref).HasColumnName("NOTIFYCRDREF");

                entity.Property(e => e.Offsendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("OFFSENDEMAILADDR");

                entity.Property(e => e.Offsendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("OFFSENDFAXNR");

                entity.Property(e => e.Offsendformat).HasColumnName("OFFSENDFORMAT");

                entity.Property(e => e.Offsendmethod).HasColumnName("OFFSENDMETHOD");

                entity.Property(e => e.Ordday).HasColumnName("ORDDAY");

                entity.Property(e => e.Ordprintcnt).HasColumnName("ORDPRINTCNT");

                entity.Property(e => e.Ordpriority).HasColumnName("ORDPRIORITY");

                entity.Property(e => e.Ordsendemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("ORDSENDEMAILADDR");

                entity.Property(e => e.Ordsendfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("ORDSENDFAXNR");

                entity.Property(e => e.Ordsendformat).HasColumnName("ORDSENDFORMAT");

                entity.Property(e => e.Ordsendmethod).HasColumnName("ORDSENDMETHOD");

                entity.Property(e => e.Orglogicref).HasColumnName("ORGLOGICREF");

                entity.Property(e => e.Orglogoid)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ORGLOGOID");

                entity.Property(e => e.Outinvennr).HasColumnName("OUTINVENNR");

                entity.Property(e => e.Overlapamnt).HasColumnName("OVERLAPAMNT");

                entity.Property(e => e.Overlapperc).HasColumnName("OVERLAPPERC");

                entity.Property(e => e.Overlaptype).HasColumnName("OVERLAPTYPE");

                entity.Property(e => e.Parentclref).HasColumnName("PARENTCLREF");

                entity.Property(e => e.Paymentproc).HasColumnName("PAYMENTPROC");

                entity.Property(e => e.Paymentprocbranch).HasColumnName("PAYMENTPROCBRANCH");

                entity.Property(e => e.Paymentref).HasColumnName("PAYMENTREF");

                entity.Property(e => e.Paymenttype).HasColumnName("PAYMENTTYPE");

                entity.Property(e => e.Personelcosts).HasColumnName("PERSONELCOSTS");

                entity.Property(e => e.Pieceordinflict).HasColumnName("PIECEORDINFLICT");

                entity.Property(e => e.Postcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("POSTCODE");

                entity.Property(e => e.Postlabelcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("POSTLABELCODE");

                entity.Property(e => e.Postlabelcodedesp)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("POSTLABELCODEDESP");

                entity.Property(e => e.Ppgroupcode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("PPGROUPCODE");

                entity.Property(e => e.Ppgroupref).HasColumnName("PPGROUPREF");

                entity.Property(e => e.Profileid).HasColumnName("PROFILEID");

                entity.Property(e => e.Profileiddesp).HasColumnName("PROFILEIDDESP");

                entity.Property(e => e.Projectref).HasColumnName("PROJECTREF");

                entity.Property(e => e.Publicbnaccref).HasColumnName("PUBLICBNACCREF");

                entity.Property(e => e.Purchbrws).HasColumnName("PURCHBRWS");

                entity.Property(e => e.Purcorderprice).HasColumnName("PURCORDERPRICE");

                entity.Property(e => e.Purcorderstatus).HasColumnName("PURCORDERSTATUS");

                entity.Property(e => e.Qtydepduration).HasColumnName("QTYDEPDURATION");

                entity.Property(e => e.Qtyindepduration).HasColumnName("QTYINDEPDURATION");

                entity.Property(e => e.Recstatus).HasColumnName("RECSTATUS");

                entity.Property(e => e.Remsendformat).HasColumnName("REMSENDFORMAT");

                entity.Property(e => e.Rskagingcr).HasColumnName("RSKAGINGCR");

                entity.Property(e => e.Rskagingday).HasColumnName("RSKAGINGDAY");

                entity.Property(e => e.Rskduedatecr).HasColumnName("RSKDUEDATECR");

                entity.Property(e => e.Rsklimcr).HasColumnName("RSKLIMCR");

                entity.Property(e => e.Salesbrws).HasColumnName("SALESBRWS");

                entity.Property(e => e.Sameitemcodeuse).HasColumnName("SAMEITEMCODEUSE");

                entity.Property(e => e.Sectormainref).HasColumnName("SECTORMAINREF");

                entity.Property(e => e.Sectorsubref).HasColumnName("SECTORSUBREF");

                entity.Property(e => e.Senderlabelcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("SENDERLABELCODE");

                entity.Property(e => e.Senderlabelcodedesp)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("SENDERLABELCODEDESP");

                entity.Property(e => e.Sendmod).HasColumnName("SENDMOD");

                entity.Property(e => e.Shipbegtime1).HasColumnName("SHIPBEGTIME1");

                entity.Property(e => e.Shipbegtime2).HasColumnName("SHIPBEGTIME2");

                entity.Property(e => e.Shipbegtime3).HasColumnName("SHIPBEGTIME3");

                entity.Property(e => e.Shipendtime1).HasColumnName("SHIPENDTIME1");

                entity.Property(e => e.Shipendtime2).HasColumnName("SHIPENDTIME2");

                entity.Property(e => e.Shipendtime3).HasColumnName("SHIPENDTIME3");

                entity.Property(e => e.Siteid).HasColumnName("SITEID");

                entity.Property(e => e.Skypeid)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("SKYPEID");

                entity.Property(e => e.Slsorderprice).HasColumnName("SLSORDERPRICE");

                entity.Property(e => e.Slsorderstatus).HasColumnName("SLSORDERSTATUS");

                entity.Property(e => e.Specode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE");

                entity.Property(e => e.Specode2)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE2");

                entity.Property(e => e.Specode3)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE3");

                entity.Property(e => e.Specode4)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE4");

                entity.Property(e => e.Specode5)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SPECODE5");

                entity.Property(e => e.Statecode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("STATECODE");

                entity.Property(e => e.Statename)
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("STATENAME");

                entity.Property(e => e.Storecreditcardno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("STORECREDITCARDNO");

                entity.Property(e => e.Subcont).HasColumnName("SUBCONT");

                entity.Property(e => e.Subscriberext)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("SUBSCRIBEREXT");

                entity.Property(e => e.Subscriberstat).HasColumnName("SUBSCRIBERSTAT");

                entity.Property(e => e.Surname)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("SURNAME");

                entity.Property(e => e.Taxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TAXNR");

                entity.Property(e => e.Taxoffcode)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFFCODE");

                entity.Property(e => e.Taxoffice)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("TAXOFFICE");

                entity.Property(e => e.Tckno)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("TCKNO");

                entity.Property(e => e.Telcodes1)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELCODES1");

                entity.Property(e => e.Telcodes2)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELCODES2");

                entity.Property(e => e.Telextnums1)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELEXTNUMS1");

                entity.Property(e => e.Telextnums2)
                    .HasMaxLength(9)
                    .IsUnicode(false)
                    .HasColumnName("TELEXTNUMS2");

                entity.Property(e => e.Telnrs1)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS1");

                entity.Property(e => e.Telnrs2)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TELNRS2");

                entity.Property(e => e.Textinc).HasColumnName("TEXTINC");

                entity.Property(e => e.Textrefen).HasColumnName("TEXTREFEN");

                entity.Property(e => e.Textreftr).HasColumnName("TEXTREFTR");

                entity.Property(e => e.Town)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("TOWN");

                entity.Property(e => e.Towncode)
                    .HasMaxLength(13)
                    .IsUnicode(false)
                    .HasColumnName("TOWNCODE");

                entity.Property(e => e.Townid)
                    .HasMaxLength(18)
                    .IsUnicode(false)
                    .HasColumnName("TOWNID");

                entity.Property(e => e.Tradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("TRADINGGRP");

                entity.Property(e => e.Twitterurl)
                    .HasMaxLength(121)
                    .IsUnicode(false)
                    .HasColumnName("TWITTERURL");

                entity.Property(e => e.Usedinperiods).HasColumnName("USEDINPERIODS");

                entity.Property(e => e.Vatnr)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("VATNR");

                entity.Property(e => e.Warnemailaddr)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("WARNEMAILADDR");

                entity.Property(e => e.Warnfaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("WARNFAXNR");

                entity.Property(e => e.Warnmethod).HasColumnName("WARNMETHOD");

                entity.Property(e => e.Webaddr)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("WEBADDR");

                entity.Property(e => e.Wflowcrd)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .HasColumnName("WFLOWCRD");

                entity.Property(e => e.Wflowcrdref).HasColumnName("WFLOWCRDREF");

                entity.Property(e => e.Wfstatus).HasColumnName("WFSTATUS");
            });

            modelBuilder.Entity<Lv001Item>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_ITEMS");

                entity.Property(e => e.AreaCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("AREA_CODE");

                entity.Property(e => e.ClassActive).HasColumnName("CLASS_ACTIVE");

                entity.Property(e => e.ClassActiveAdi)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_ACTIVE_ADI");

                entity.Property(e => e.ClassCardtype).HasColumnName("CLASS_CARDTYPE");

                entity.Property(e => e.ClassCardtypeTipi)
                    .IsRequired()
                    .HasMaxLength(49)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_CARDTYPE_TIPI");

                entity.Property(e => e.ClassCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_CODE");

                entity.Property(e => e.ClassCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_CYPHCODE");

                entity.Property(e => e.ClassName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_NAME");

                entity.Property(e => e.ClassProducercode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_PRODUCERCODE");

                entity.Property(e => e.ClassSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_SPECODE");

                entity.Property(e => e.ClassStgrpcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_STGRPCODE");

                entity.Property(e => e.GrossvolumeCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("GROSSVOLUME_CODE");

                entity.Property(e => e.GrossweightCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("GROSSWEIGHT_CODE");

                entity.Property(e => e.HeightCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("HEIGHT_CODE");

                entity.Property(e => e.ItemsActive).HasColumnName("ITEMS_ACTIVE");

                entity.Property(e => e.ItemsActiveAdi)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_ACTIVE_ADI");

                entity.Property(e => e.ItemsCardtype).HasColumnName("ITEMS_CARDTYPE");

                entity.Property(e => e.ItemsCardtypeTipi)
                    .IsRequired()
                    .HasMaxLength(49)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_CARDTYPE_TIPI");

                entity.Property(e => e.ItemsCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_CODE");

                entity.Property(e => e.ItemsCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_CYPHCODE");

                entity.Property(e => e.ItemsIzlemeTuru)
                    .IsRequired()
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_IZLEME_TURU");

                entity.Property(e => e.ItemsName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_NAME");

                entity.Property(e => e.ItemsProducercode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_PRODUCERCODE");

                entity.Property(e => e.ItemsSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_SPECODE");

                entity.Property(e => e.ItemsStgrpcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_STGRPCODE");

                entity.Property(e => e.ItemsTracktype).HasColumnName("ITEMS_TRACKTYPE");

                entity.Property(e => e.Itmunita2Katsayi).HasColumnName("ITMUNITA_2_KATSAYI");

                entity.Property(e => e.Itmunita3Katsayi).HasColumnName("ITMUNITA_3_KATSAYI");

                entity.Property(e => e.ItmunitaArea).HasColumnName("ITMUNITA_AREA");

                entity.Property(e => e.ItmunitaBarcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ITMUNITA_BARCODE");

                entity.Property(e => e.ItmunitaConvfact1).HasColumnName("ITMUNITA_CONVFACT1");

                entity.Property(e => e.ItmunitaConvfact2).HasColumnName("ITMUNITA_CONVFACT2");

                entity.Property(e => e.ItmunitaGrossvolume).HasColumnName("ITMUNITA_GROSSVOLUME");

                entity.Property(e => e.ItmunitaGrossweight).HasColumnName("ITMUNITA_GROSSWEIGHT");

                entity.Property(e => e.ItmunitaHeight).HasColumnName("ITMUNITA_HEIGHT");

                entity.Property(e => e.ItmunitaLength).HasColumnName("ITMUNITA_LENGTH");

                entity.Property(e => e.ItmunitaLinenr).HasColumnName("ITMUNITA_LINENR");

                entity.Property(e => e.ItmunitaVolume).HasColumnName("ITMUNITA_VOLUME_");

                entity.Property(e => e.ItmunitaWeight).HasColumnName("ITMUNITA_WEIGHT");

                entity.Property(e => e.ItmunitaWidth).HasColumnName("ITMUNITA_WIDTH");

                entity.Property(e => e.LengthCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("LENGTH_CODE");

                entity.Property(e => e.UnitsetfCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_CODE");

                entity.Property(e => e.UnitsetfCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_CYPHCODE");

                entity.Property(e => e.UnitsetfName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_NAME");

                entity.Property(e => e.UnitsetfSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_SPECODE");

                entity.Property(e => e.Unitsetl2Code)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_2_CODE");

                entity.Property(e => e.Unitsetl2Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_2_NAME");

                entity.Property(e => e.Unitsetl3Code)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_3_CODE");

                entity.Property(e => e.Unitsetl3Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_3_NAME");

                entity.Property(e => e.UnitsetlCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_CODE");

                entity.Property(e => e.UnitsetlName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_NAME");

                entity.Property(e => e.VolumeCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("VOLUME_CODE");

                entity.Property(e => e.WeightCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("WEIGHT_CODE");

                entity.Property(e => e.WidthCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("WIDTH_CODE");
            });

            modelBuilder.Entity<Lv001OrderItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_ORDER_ITEMS");

                entity.Property(e => e.AreaCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("AREA_CODE");

                entity.Property(e => e.CapideptName)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("CAPIDEPT_NAME");

                entity.Property(e => e.CapideptNr).HasColumnName("CAPIDEPT_NR");

                entity.Property(e => e.CapidivName)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("CAPIDIV_NAME");

                entity.Property(e => e.CapidivNr).HasColumnName("CAPIDIV_NR");

                entity.Property(e => e.CapiwhouseName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CAPIWHOUSE_NAME");

                entity.Property(e => e.CapiwhouseNr).HasColumnName("CAPIWHOUSE_NR");

                entity.Property(e => e.ClassActive).HasColumnName("CLASS_ACTIVE");

                entity.Property(e => e.ClassActiveAdi)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_ACTIVE_ADI");

                entity.Property(e => e.ClassCardtype).HasColumnName("CLASS_CARDTYPE");

                entity.Property(e => e.ClassCardtypeTipi)
                    .IsRequired()
                    .HasMaxLength(49)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_CARDTYPE_TIPI");

                entity.Property(e => e.ClassCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_CODE");

                entity.Property(e => e.ClassCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_CYPHCODE");

                entity.Property(e => e.ClassName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_NAME");

                entity.Property(e => e.ClassProducercode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_PRODUCERCODE");

                entity.Property(e => e.ClassSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_SPECODE");

                entity.Property(e => e.ClassStgrpcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_STGRPCODE");

                entity.Property(e => e.ClcardActive).HasColumnName("CLCARD_ACTIVE");

                entity.Property(e => e.ClcardActiveAdi)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_ACTIVE_ADI");

                entity.Property(e => e.ClcardCardtype).HasColumnName("CLCARD_CARDTYPE");

                entity.Property(e => e.ClcardCardtypeAdi)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CARDTYPE_ADI");

                entity.Property(e => e.ClcardCity)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CITY");

                entity.Property(e => e.ClcardCode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CODE");

                entity.Property(e => e.ClcardCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CYPHCODE");

                entity.Property(e => e.ClcardDefinition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_DEFINITION_");

                entity.Property(e => e.ClcardIncharge)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_INCHARGE");

                entity.Property(e => e.ClcardSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_SPECODE");

                entity.Property(e => e.ClcardTaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_TAXNR");

                entity.Property(e => e.ClcardTaxoffice)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_TAXOFFICE");

                entity.Property(e => e.ClcardTradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_TRADINGGRP");

                entity.Property(e => e.EmcenterCode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("EMCENTER_CODE");

                entity.Property(e => e.EmcenterDefinition)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("EMCENTER_DEFINITION_");

                entity.Property(e => e.ForficheClientref).HasColumnName("FORFICHE_CLIENTREF");

                entity.Property(e => e.GrossvolumeCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("GROSSVOLUME_CODE");

                entity.Property(e => e.GrossweightCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("GROSSWEIGHT_CODE");

                entity.Property(e => e.HeightCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("HEIGHT_CODE");

                entity.Property(e => e.ItemsActive).HasColumnName("ITEMS_ACTIVE");

                entity.Property(e => e.ItemsActiveAdi)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_ACTIVE_ADI");

                entity.Property(e => e.ItemsCardtype).HasColumnName("ITEMS_CARDTYPE");

                entity.Property(e => e.ItemsCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_CODE");

                entity.Property(e => e.ItemsCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_CYPHCODE");

                entity.Property(e => e.ItemsIzlemeTuru)
                    .IsRequired()
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_IZLEME_TURU");

                entity.Property(e => e.ItemsMalzemeTipi)
                    .IsRequired()
                    .HasMaxLength(49)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_MALZEME_TIPI");

                entity.Property(e => e.ItemsName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_NAME");

                entity.Property(e => e.ItemsProducercode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_PRODUCERCODE");

                entity.Property(e => e.ItemsSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_SPECODE");

                entity.Property(e => e.ItemsStgrpcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_STGRPCODE");

                entity.Property(e => e.ItemsTracktype).HasColumnName("ITEMS_TRACKTYPE");

                entity.Property(e => e.Itmunita2Katsayi).HasColumnName("ITMUNITA_2_KATSAYI");

                entity.Property(e => e.Itmunita3Katsayi).HasColumnName("ITMUNITA_3_KATSAYI");

                entity.Property(e => e.ItmunitaArea).HasColumnName("ITMUNITA_AREA");

                entity.Property(e => e.ItmunitaBarcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ITMUNITA_BARCODE");

                entity.Property(e => e.ItmunitaConvfact1).HasColumnName("ITMUNITA_CONVFACT1");

                entity.Property(e => e.ItmunitaConvfact2).HasColumnName("ITMUNITA_CONVFACT2");

                entity.Property(e => e.ItmunitaGrossvolume).HasColumnName("ITMUNITA_GROSSVOLUME");

                entity.Property(e => e.ItmunitaGrossweight).HasColumnName("ITMUNITA_GROSSWEIGHT");

                entity.Property(e => e.ItmunitaHeight).HasColumnName("ITMUNITA_HEIGHT");

                entity.Property(e => e.ItmunitaLength).HasColumnName("ITMUNITA_LENGTH");

                entity.Property(e => e.ItmunitaLinenr).HasColumnName("ITMUNITA_LINENR");

                entity.Property(e => e.ItmunitaVolume).HasColumnName("ITMUNITA_VOLUME_");

                entity.Property(e => e.ItmunitaWeight).HasColumnName("ITMUNITA_WEIGHT");

                entity.Property(e => e.ItmunitaWidth).HasColumnName("ITMUNITA_WIDTH");

                entity.Property(e => e.LengthCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("LENGTH_CODE");

                entity.Property(e => e.OrficheCancelled).HasColumnName("ORFICHE_CANCELLED");

                entity.Property(e => e.OrficheCancelledAçiklama)
                    .IsRequired()
                    .HasMaxLength(43)
                    .IsUnicode(false)
                    .HasColumnName("ORFICHE_CANCELLED_AÇIKLAMA");

                entity.Property(e => e.OrficheCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ORFICHE_CYPHCODE");

                entity.Property(e => e.OrficheDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ORFICHE_DATE_");

                entity.Property(e => e.OrficheDocode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("ORFICHE_DOCODE");

                entity.Property(e => e.OrficheFicheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("ORFICHE_FICHENO");

                entity.Property(e => e.OrficheInputAdddiscounts).HasColumnName("ORFICHE_INPUT_ADDDISCOUNTS");

                entity.Property(e => e.OrficheInputAddexpenses).HasColumnName("ORFICHE_INPUT_ADDEXPENSES");

                entity.Property(e => e.OrficheInputGrosstotal).HasColumnName("ORFICHE_INPUT_GROSSTOTAL");

                entity.Property(e => e.OrficheInputNettotal).HasColumnName("ORFICHE_INPUT_NETTOTAL");

                entity.Property(e => e.OrficheInputReportnet).HasColumnName("ORFICHE_INPUT_REPORTNET");

                entity.Property(e => e.OrficheInputTotaldiscounted).HasColumnName("ORFICHE_INPUT_TOTALDISCOUNTED");

                entity.Property(e => e.OrficheInputTotaldiscounts).HasColumnName("ORFICHE_INPUT_TOTALDISCOUNTS");

                entity.Property(e => e.OrficheInputTotalexpenses).HasColumnName("ORFICHE_INPUT_TOTALEXPENSES");

                entity.Property(e => e.OrficheInputTotalpromotions).HasColumnName("ORFICHE_INPUT_TOTALPROMOTIONS");

                entity.Property(e => e.OrficheInputTotalvat).HasColumnName("ORFICHE_INPUT_TOTALVAT");

                entity.Property(e => e.OrficheInputTrnet).HasColumnName("ORFICHE_INPUT_TRNET");

                entity.Property(e => e.OrficheOutputAdddiscounts).HasColumnName("ORFICHE_OUTPUT_ADDDISCOUNTS");

                entity.Property(e => e.OrficheOutputAddexpenses).HasColumnName("ORFICHE_OUTPUT_ADDEXPENSES");

                entity.Property(e => e.OrficheOutputGrosstotal).HasColumnName("ORFICHE_OUTPUT_GROSSTOTAL");

                entity.Property(e => e.OrficheOutputNettotal).HasColumnName("ORFICHE_OUTPUT_NETTOTAL");

                entity.Property(e => e.OrficheOutputReportnet).HasColumnName("ORFICHE_OUTPUT_REPORTNET");

                entity.Property(e => e.OrficheOutputTotaldiscounted).HasColumnName("ORFICHE_OUTPUT_TOTALDISCOUNTED");

                entity.Property(e => e.OrficheOutputTotaldiscounts).HasColumnName("ORFICHE_OUTPUT_TOTALDISCOUNTS");

                entity.Property(e => e.OrficheOutputTotalexpenses).HasColumnName("ORFICHE_OUTPUT_TOTALEXPENSES");

                entity.Property(e => e.OrficheOutputTotalpromotions).HasColumnName("ORFICHE_OUTPUT_TOTALPROMOTIONS");

                entity.Property(e => e.OrficheOutputTotalvat).HasColumnName("ORFICHE_OUTPUT_TOTALVAT");

                entity.Property(e => e.OrficheOutputTrnet).HasColumnName("ORFICHE_OUTPUT_TRNET");

                entity.Property(e => e.OrficheRecvref).HasColumnName("ORFICHE_RECVREF");

                entity.Property(e => e.OrficheReportrate).HasColumnName("ORFICHE_REPORTRATE");

                entity.Property(e => e.OrficheSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ORFICHE_SPECODE");

                entity.Property(e => e.OrficheStatus).HasColumnName("ORFICHE_STATUS");

                entity.Property(e => e.OrficheStatusAdi)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("ORFICHE_STATUS_ADI");

                entity.Property(e => e.OrficheTime).HasColumnName("ORFICHE_TIME_");

                entity.Property(e => e.OrficheTrcode).HasColumnName("ORFICHE_TRCODE");

                entity.Property(e => e.OrficheTrcodeAdi)
                    .IsRequired()
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("ORFICHE_TRCODE_ADI");

                entity.Property(e => e.OrficheTrcurr).HasColumnName("ORFICHE_TRCURR");

                entity.Property(e => e.OrficheTrrate).HasColumnName("ORFICHE_TRRATE");

                entity.Property(e => e.OrflineCancelled).HasColumnName("ORFLINE_CANCELLED");

                entity.Property(e => e.OrflineClientref).HasColumnName("ORFLINE_CLIENTREF");

                entity.Property(e => e.OrflineDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ORFLINE_DATE_");

                entity.Property(e => e.OrflineDay).HasColumnName("ORFLINE_DAY");

                entity.Property(e => e.OrflineDelvrycode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ORFLINE_DELVRYCODE");

                entity.Property(e => e.OrflineDiscper).HasColumnName("ORFLINE_DISCPER");

                entity.Property(e => e.OrflineGlobtrans).HasColumnName("ORFLINE_GLOBTRANS");

                entity.Property(e => e.OrflineHalf).HasColumnName("ORFLINE_HALF");

                entity.Property(e => e.OrflineInputAmount).HasColumnName("ORFLINE_INPUT_AMOUNT");

                entity.Property(e => e.OrflineInputDistcost).HasColumnName("ORFLINE_INPUT_DISTCOST");

                entity.Property(e => e.OrflineInputDistdisc).HasColumnName("ORFLINE_INPUT_DISTDISC");

                entity.Property(e => e.OrflineInputDistexp).HasColumnName("ORFLINE_INPUT_DISTEXP");

                entity.Property(e => e.OrflineInputDistprom).HasColumnName("ORFLINE_INPUT_DISTPROM");

                entity.Property(e => e.OrflineInputLinenet).HasColumnName("ORFLINE_INPUT_LINENET");

                entity.Property(e => e.OrflineInputPrice).HasColumnName("ORFLINE_INPUT_PRICE");

                entity.Property(e => e.OrflineInputPrprice).HasColumnName("ORFLINE_INPUT_PRPRICE");

                entity.Property(e => e.OrflineInputTotal).HasColumnName("ORFLINE_INPUT_TOTAL");

                entity.Property(e => e.OrflineInputVatamnt).HasColumnName("ORFLINE_INPUT_VATAMNT");

                entity.Property(e => e.OrflineInputVatmatrah).HasColumnName("ORFLINE_INPUT_VATMATRAH");

                entity.Property(e => e.OrflineLineexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("ORFLINE_LINEEXP");

                entity.Property(e => e.OrflineLineno).HasColumnName("ORFLINE_LINENO_");

                entity.Property(e => e.OrflineLinetype).HasColumnName("ORFLINE_LINETYPE");

                entity.Property(e => e.OrflineLogicalref).HasColumnName("ORFLINE_LOGICALREF");

                entity.Property(e => e.OrflineMonth).HasColumnName("ORFLINE_MONTH");

                entity.Property(e => e.OrflineOrdficheref).HasColumnName("ORFLINE_ORDFICHEREF");

                entity.Property(e => e.OrflineOutputAmount).HasColumnName("ORFLINE_OUTPUT_AMOUNT");

                entity.Property(e => e.OrflineOutputDistcost).HasColumnName("ORFLINE_OUTPUT_DISTCOST");

                entity.Property(e => e.OrflineOutputDistdisc).HasColumnName("ORFLINE_OUTPUT_DISTDISC");

                entity.Property(e => e.OrflineOutputDistexp).HasColumnName("ORFLINE_OUTPUT_DISTEXP");

                entity.Property(e => e.OrflineOutputDistprom).HasColumnName("ORFLINE_OUTPUT_DISTPROM");

                entity.Property(e => e.OrflineOutputLinenet).HasColumnName("ORFLINE_OUTPUT_LINENET");

                entity.Property(e => e.OrflineOutputPrice).HasColumnName("ORFLINE_OUTPUT_PRICE");

                entity.Property(e => e.OrflineOutputPrprice).HasColumnName("ORFLINE_OUTPUT_PRPRICE");

                entity.Property(e => e.OrflineOutputTotal).HasColumnName("ORFLINE_OUTPUT_TOTAL");

                entity.Property(e => e.OrflineOutputVatamnt).HasColumnName("ORFLINE_OUTPUT_VATAMNT");

                entity.Property(e => e.OrflineOutputVatmatrah).HasColumnName("ORFLINE_OUTPUT_VATMATRAH");

                entity.Property(e => e.OrflinePrcurr).HasColumnName("ORFLINE_PRCURR");

                entity.Property(e => e.OrflinePrevlineno).HasColumnName("ORFLINE_PREVLINENO");

                entity.Property(e => e.OrflinePrevlineref).HasColumnName("ORFLINE_PREVLINEREF");

                entity.Property(e => e.OrflineQuarter).HasColumnName("ORFLINE_QUARTER");

                entity.Property(e => e.OrflineReportrate).HasColumnName("ORFLINE_REPORTRATE");

                entity.Property(e => e.OrflineSatirTuru)
                    .IsRequired()
                    .HasMaxLength(39)
                    .IsUnicode(false)
                    .HasColumnName("ORFLINE_SATIR_TURU");

                entity.Property(e => e.OrflineSourcecostgrp).HasColumnName("ORFLINE_SOURCECOSTGRP");

                entity.Property(e => e.OrflineSourceindex).HasColumnName("ORFLINE_SOURCEINDEX");

                entity.Property(e => e.OrflineSpecode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("ORFLINE_SPECODE");

                entity.Property(e => e.OrflineTime).HasColumnName("ORFLINE_TIME_");

                entity.Property(e => e.OrflineTrcode).HasColumnName("ORFLINE_TRCODE");

                entity.Property(e => e.OrflineTrcurr).HasColumnName("ORFLINE_TRCURR");

                entity.Property(e => e.OrflineTrrate).HasColumnName("ORFLINE_TRRATE");

                entity.Property(e => e.OrflineUinfo1).HasColumnName("ORFLINE_UINFO1");

                entity.Property(e => e.OrflineUinfo2).HasColumnName("ORFLINE_UINFO2");

                entity.Property(e => e.OrflineUomref).HasColumnName("ORFLINE_UOMREF");

                entity.Property(e => e.OrflineUsref).HasColumnName("ORFLINE_USREF");

                entity.Property(e => e.OrflineVat).HasColumnName("ORFLINE_VAT");

                entity.Property(e => e.OrflineVatinc).HasColumnName("ORFLINE_VATINC");

                entity.Property(e => e.OrflineWeek).HasColumnName("ORFLINE_WEEK");

                entity.Property(e => e.OrflineYear).HasColumnName("ORFLINE_YEAR");

                entity.Property(e => e.PayplansCode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_CODE");

                entity.Property(e => e.PayplansCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_CYPHCODE");

                entity.Property(e => e.PayplansDefinition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_DEFINITION_");

                entity.Property(e => e.PayplansSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_SPECODE");

                entity.Property(e => e.Period).HasColumnName("PERIOD");

                entity.Property(e => e.ProjectCode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PROJECT_CODE");

                entity.Property(e => e.ProjectName)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PROJECT_NAME");

                entity.Property(e => e.ShipinfoCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_CODE");

                entity.Property(e => e.ShipinfoCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_CYPHCODE");

                entity.Property(e => e.ShipinfoName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_NAME");

                entity.Property(e => e.ShipinfoSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_SPECODE");

                entity.Property(e => e.SlsmanCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SLSMAN_CODE");

                entity.Property(e => e.SlsmanDefinition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SLSMAN_DEFINITION_");

                entity.Property(e => e.UnitsetfCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_CODE");

                entity.Property(e => e.UnitsetfCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_CYPHCODE");

                entity.Property(e => e.UnitsetfName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_NAME");

                entity.Property(e => e.UnitsetfSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_SPECODE");

                entity.Property(e => e.Unitsetl2Code)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_2_CODE");

                entity.Property(e => e.Unitsetl2Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_2_NAME");

                entity.Property(e => e.Unitsetl3Code)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_3_CODE");

                entity.Property(e => e.Unitsetl3Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_3_NAME");

                entity.Property(e => e.UnitsetlCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_CODE");

                entity.Property(e => e.UnitsetlName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_NAME");

                entity.Property(e => e.VolumeCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("VOLUME_CODE");

                entity.Property(e => e.WeightCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("WEIGHT_CODE");

                entity.Property(e => e.WidthCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("WIDTH_CODE");
            });

            modelBuilder.Entity<Lv001OrderService>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_ORDER_SERVICE");

                entity.Property(e => e.CapideptName)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("CAPIDEPT_NAME");

                entity.Property(e => e.CapideptNr).HasColumnName("CAPIDEPT_NR");

                entity.Property(e => e.CapidivName)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("CAPIDIV_NAME");

                entity.Property(e => e.CapidivNr).HasColumnName("CAPIDIV_NR");

                entity.Property(e => e.CapiwhouseName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CAPIWHOUSE_NAME");

                entity.Property(e => e.CapiwhouseNr).HasColumnName("CAPIWHOUSE_NR");

                entity.Property(e => e.ClcardActive).HasColumnName("CLCARD_ACTIVE");

                entity.Property(e => e.ClcardActiveAdi)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_ACTIVE_ADI");

                entity.Property(e => e.ClcardCardtype).HasColumnName("CLCARD_CARDTYPE");

                entity.Property(e => e.ClcardCardtypeAdi)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CARDTYPE_ADI");

                entity.Property(e => e.ClcardCity)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CITY");

                entity.Property(e => e.ClcardCode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CODE");

                entity.Property(e => e.ClcardCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CYPHCODE");

                entity.Property(e => e.ClcardDefinition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_DEFINITION_");

                entity.Property(e => e.ClcardIncharge)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_INCHARGE");

                entity.Property(e => e.ClcardSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_SPECODE");

                entity.Property(e => e.ClcardTaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_TAXNR");

                entity.Property(e => e.ClcardTaxoffice)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_TAXOFFICE");

                entity.Property(e => e.ClcardTradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_TRADINGGRP");

                entity.Property(e => e.EmcenterCode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("EMCENTER_CODE");

                entity.Property(e => e.EmcenterDefinition)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("EMCENTER_DEFINITION_");

                entity.Property(e => e.ForficheClientref).HasColumnName("FORFICHE_CLIENTREF");

                entity.Property(e => e.OrficheCancelled).HasColumnName("ORFICHE_CANCELLED");

                entity.Property(e => e.OrficheCancelledAçiklama)
                    .IsRequired()
                    .HasMaxLength(43)
                    .IsUnicode(false)
                    .HasColumnName("ORFICHE_CANCELLED_AÇIKLAMA");

                entity.Property(e => e.OrficheCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ORFICHE_CYPHCODE");

                entity.Property(e => e.OrficheDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ORFICHE_DATE_");

                entity.Property(e => e.OrficheDocode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("ORFICHE_DOCODE");

                entity.Property(e => e.OrficheFicheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("ORFICHE_FICHENO");

                entity.Property(e => e.OrficheInputAdddiscounts).HasColumnName("ORFICHE_INPUT_ADDDISCOUNTS");

                entity.Property(e => e.OrficheInputAddexpenses).HasColumnName("ORFICHE_INPUT_ADDEXPENSES");

                entity.Property(e => e.OrficheInputGrosstotal).HasColumnName("ORFICHE_INPUT_GROSSTOTAL");

                entity.Property(e => e.OrficheInputNettotal).HasColumnName("ORFICHE_INPUT_NETTOTAL");

                entity.Property(e => e.OrficheInputReportnet).HasColumnName("ORFICHE_INPUT_REPORTNET");

                entity.Property(e => e.OrficheInputTotaldiscounted).HasColumnName("ORFICHE_INPUT_TOTALDISCOUNTED");

                entity.Property(e => e.OrficheInputTotaldiscounts).HasColumnName("ORFICHE_INPUT_TOTALDISCOUNTS");

                entity.Property(e => e.OrficheInputTotalexpenses).HasColumnName("ORFICHE_INPUT_TOTALEXPENSES");

                entity.Property(e => e.OrficheInputTotalpromotions).HasColumnName("ORFICHE_INPUT_TOTALPROMOTIONS");

                entity.Property(e => e.OrficheInputTotalvat).HasColumnName("ORFICHE_INPUT_TOTALVAT");

                entity.Property(e => e.OrficheInputTrnet).HasColumnName("ORFICHE_INPUT_TRNET");

                entity.Property(e => e.OrficheOutputAdddiscounts).HasColumnName("ORFICHE_OUTPUT_ADDDISCOUNTS");

                entity.Property(e => e.OrficheOutputAddexpenses).HasColumnName("ORFICHE_OUTPUT_ADDEXPENSES");

                entity.Property(e => e.OrficheOutputGrosstotal).HasColumnName("ORFICHE_OUTPUT_GROSSTOTAL");

                entity.Property(e => e.OrficheOutputNettotal).HasColumnName("ORFICHE_OUTPUT_NETTOTAL");

                entity.Property(e => e.OrficheOutputReportnet).HasColumnName("ORFICHE_OUTPUT_REPORTNET");

                entity.Property(e => e.OrficheOutputTotaldiscounted).HasColumnName("ORFICHE_OUTPUT_TOTALDISCOUNTED");

                entity.Property(e => e.OrficheOutputTotaldiscounts).HasColumnName("ORFICHE_OUTPUT_TOTALDISCOUNTS");

                entity.Property(e => e.OrficheOutputTotalexpenses).HasColumnName("ORFICHE_OUTPUT_TOTALEXPENSES");

                entity.Property(e => e.OrficheOutputTotalpromotions).HasColumnName("ORFICHE_OUTPUT_TOTALPROMOTIONS");

                entity.Property(e => e.OrficheOutputTotalvat).HasColumnName("ORFICHE_OUTPUT_TOTALVAT");

                entity.Property(e => e.OrficheOutputTrnet).HasColumnName("ORFICHE_OUTPUT_TRNET");

                entity.Property(e => e.OrficheRecvref).HasColumnName("ORFICHE_RECVREF");

                entity.Property(e => e.OrficheReportrate).HasColumnName("ORFICHE_REPORTRATE");

                entity.Property(e => e.OrficheSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ORFICHE_SPECODE");

                entity.Property(e => e.OrficheStatus).HasColumnName("ORFICHE_STATUS");

                entity.Property(e => e.OrficheStatusAdi)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("ORFICHE_STATUS_ADI");

                entity.Property(e => e.OrficheTime).HasColumnName("ORFICHE_TIME_");

                entity.Property(e => e.OrficheTrcode).HasColumnName("ORFICHE_TRCODE");

                entity.Property(e => e.OrficheTrcodeAdi)
                    .IsRequired()
                    .HasMaxLength(45)
                    .IsUnicode(false)
                    .HasColumnName("ORFICHE_TRCODE_ADI");

                entity.Property(e => e.OrficheTrcurr).HasColumnName("ORFICHE_TRCURR");

                entity.Property(e => e.OrficheTrrate).HasColumnName("ORFICHE_TRRATE");

                entity.Property(e => e.OrflineCancelled).HasColumnName("ORFLINE_CANCELLED");

                entity.Property(e => e.OrflineClientref).HasColumnName("ORFLINE_CLIENTREF");

                entity.Property(e => e.OrflineDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ORFLINE_DATE_");

                entity.Property(e => e.OrflineDay).HasColumnName("ORFLINE_DAY");

                entity.Property(e => e.OrflineDelvrycode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ORFLINE_DELVRYCODE");

                entity.Property(e => e.OrflineDiscper).HasColumnName("ORFLINE_DISCPER");

                entity.Property(e => e.OrflineGlobtrans).HasColumnName("ORFLINE_GLOBTRANS");

                entity.Property(e => e.OrflineHalf).HasColumnName("ORFLINE_HALF");

                entity.Property(e => e.OrflineInputAmount).HasColumnName("ORFLINE_INPUT_AMOUNT");

                entity.Property(e => e.OrflineInputDistcost).HasColumnName("ORFLINE_INPUT_DISTCOST");

                entity.Property(e => e.OrflineInputDistdisc).HasColumnName("ORFLINE_INPUT_DISTDISC");

                entity.Property(e => e.OrflineInputDistexp).HasColumnName("ORFLINE_INPUT_DISTEXP");

                entity.Property(e => e.OrflineInputDistprom).HasColumnName("ORFLINE_INPUT_DISTPROM");

                entity.Property(e => e.OrflineInputLinenet).HasColumnName("ORFLINE_INPUT_LINENET");

                entity.Property(e => e.OrflineInputPrice).HasColumnName("ORFLINE_INPUT_PRICE");

                entity.Property(e => e.OrflineInputPrprice).HasColumnName("ORFLINE_INPUT_PRPRICE");

                entity.Property(e => e.OrflineInputTotal).HasColumnName("ORFLINE_INPUT_TOTAL");

                entity.Property(e => e.OrflineInputVatamnt).HasColumnName("ORFLINE_INPUT_VATAMNT");

                entity.Property(e => e.OrflineInputVatmatrah).HasColumnName("ORFLINE_INPUT_VATMATRAH");

                entity.Property(e => e.OrflineLineexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("ORFLINE_LINEEXP");

                entity.Property(e => e.OrflineLineno).HasColumnName("ORFLINE_LINENO_");

                entity.Property(e => e.OrflineLinetype).HasColumnName("ORFLINE_LINETYPE");

                entity.Property(e => e.OrflineLogicalref).HasColumnName("ORFLINE_LOGICALREF");

                entity.Property(e => e.OrflineMonth).HasColumnName("ORFLINE_MONTH");

                entity.Property(e => e.OrflineOrdficheref).HasColumnName("ORFLINE_ORDFICHEREF");

                entity.Property(e => e.OrflineOutputAmount).HasColumnName("ORFLINE_OUTPUT_AMOUNT");

                entity.Property(e => e.OrflineOutputDistcost).HasColumnName("ORFLINE_OUTPUT_DISTCOST");

                entity.Property(e => e.OrflineOutputDistdisc).HasColumnName("ORFLINE_OUTPUT_DISTDISC");

                entity.Property(e => e.OrflineOutputDistexp).HasColumnName("ORFLINE_OUTPUT_DISTEXP");

                entity.Property(e => e.OrflineOutputDistprom).HasColumnName("ORFLINE_OUTPUT_DISTPROM");

                entity.Property(e => e.OrflineOutputLinenet).HasColumnName("ORFLINE_OUTPUT_LINENET");

                entity.Property(e => e.OrflineOutputPrice).HasColumnName("ORFLINE_OUTPUT_PRICE");

                entity.Property(e => e.OrflineOutputPrprice).HasColumnName("ORFLINE_OUTPUT_PRPRICE");

                entity.Property(e => e.OrflineOutputTotal).HasColumnName("ORFLINE_OUTPUT_TOTAL");

                entity.Property(e => e.OrflineOutputVatamnt).HasColumnName("ORFLINE_OUTPUT_VATAMNT");

                entity.Property(e => e.OrflineOutputVatmatrah).HasColumnName("ORFLINE_OUTPUT_VATMATRAH");

                entity.Property(e => e.OrflinePrcurr).HasColumnName("ORFLINE_PRCURR");

                entity.Property(e => e.OrflinePrevlineno).HasColumnName("ORFLINE_PREVLINENO");

                entity.Property(e => e.OrflinePrevlineref).HasColumnName("ORFLINE_PREVLINEREF");

                entity.Property(e => e.OrflineQuarter).HasColumnName("ORFLINE_QUARTER");

                entity.Property(e => e.OrflineReportrate).HasColumnName("ORFLINE_REPORTRATE");

                entity.Property(e => e.OrflineSatirTuru)
                    .IsRequired()
                    .HasMaxLength(39)
                    .IsUnicode(false)
                    .HasColumnName("ORFLINE_SATIR_TURU");

                entity.Property(e => e.OrflineSourcecostgrp).HasColumnName("ORFLINE_SOURCECOSTGRP");

                entity.Property(e => e.OrflineSourceindex).HasColumnName("ORFLINE_SOURCEINDEX");

                entity.Property(e => e.OrflineSpecode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("ORFLINE_SPECODE");

                entity.Property(e => e.OrflineTime).HasColumnName("ORFLINE_TIME_");

                entity.Property(e => e.OrflineTrcode).HasColumnName("ORFLINE_TRCODE");

                entity.Property(e => e.OrflineTrcurr).HasColumnName("ORFLINE_TRCURR");

                entity.Property(e => e.OrflineTrrate).HasColumnName("ORFLINE_TRRATE");

                entity.Property(e => e.OrflineUinfo1).HasColumnName("ORFLINE_UINFO1");

                entity.Property(e => e.OrflineUinfo2).HasColumnName("ORFLINE_UINFO2");

                entity.Property(e => e.OrflineUomref).HasColumnName("ORFLINE_UOMREF");

                entity.Property(e => e.OrflineUsref).HasColumnName("ORFLINE_USREF");

                entity.Property(e => e.OrflineVat).HasColumnName("ORFLINE_VAT");

                entity.Property(e => e.OrflineVatinc).HasColumnName("ORFLINE_VATINC");

                entity.Property(e => e.OrflineWeek).HasColumnName("ORFLINE_WEEK");

                entity.Property(e => e.OrflineYear).HasColumnName("ORFLINE_YEAR");

                entity.Property(e => e.PayplansCode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_CODE");

                entity.Property(e => e.PayplansCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_CYPHCODE");

                entity.Property(e => e.PayplansDefinition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_DEFINITION_");

                entity.Property(e => e.PayplansSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_SPECODE");

                entity.Property(e => e.Period).HasColumnName("PERIOD");

                entity.Property(e => e.ProjectCode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PROJECT_CODE");

                entity.Property(e => e.ProjectName)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PROJECT_NAME");

                entity.Property(e => e.ShipinfoCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_CODE");

                entity.Property(e => e.ShipinfoCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_CYPHCODE");

                entity.Property(e => e.ShipinfoName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_NAME");

                entity.Property(e => e.ShipinfoSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_SPECODE");

                entity.Property(e => e.SlsmanCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SLSMAN_CODE");

                entity.Property(e => e.SlsmanDefinition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SLSMAN_DEFINITION_");

                entity.Property(e => e.SrvcardActive).HasColumnName("SRVCARD_ACTIVE");

                entity.Property(e => e.SrvcardActiveAdi)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("SRVCARD_ACTIVE_ADI");

                entity.Property(e => e.SrvcardCardtype).HasColumnName("SRVCARD_CARDTYPE");

                entity.Property(e => e.SrvcardCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SRVCARD_CODE");

                entity.Property(e => e.SrvcardCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SRVCARD_CYPHCODE");

                entity.Property(e => e.SrvcardDefinition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SRVCARD_DEFINITION_");

                entity.Property(e => e.SrvcardSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SRVCARD_SPECODE");

                entity.Property(e => e.SrvunitaLinenr).HasColumnName("SRVUNITA_LINENR");

                entity.Property(e => e.UnitsetfCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_CODE");

                entity.Property(e => e.UnitsetfCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_CYPHCODE");

                entity.Property(e => e.UnitsetfName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_NAME");

                entity.Property(e => e.UnitsetfSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_SPECODE");

                entity.Property(e => e.Unitsetl2Code)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_2_CODE");

                entity.Property(e => e.Unitsetl2Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_2_NAME");

                entity.Property(e => e.Unitsetl3Code)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_3_CODE");

                entity.Property(e => e.Unitsetl3Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_3_NAME");

                entity.Property(e => e.UnitsetlCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_CODE");

                entity.Property(e => e.UnitsetlName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_NAME");
            });

            modelBuilder.Entity<Lv001Qcfichecheck>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_QCFICHECHECK");

                entity.Property(e => e.Asgnref).HasColumnName("ASGNREF");

                entity.Property(e => e.Asgntype).HasColumnName("ASGNTYPE");

                entity.Property(e => e.Okay1).HasColumnName("OKAY1");

                entity.Property(e => e.Okay2).HasColumnName("OKAY2");

                entity.Property(e => e.Revisionno).HasColumnName("REVISIONNO");

                entity.Property(e => e.Setref).HasColumnName("SETREF");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");
            });

            modelBuilder.Entity<Lv001Qcparamcheck>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_QCPARAMCHECK");

                entity.Property(e => e.Grpcode).HasColumnName("GRPCODE");

                entity.Property(e => e.Invoice).HasColumnName("INVOICE");

                entity.Property(e => e.Paramok)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("PARAMOK");

                entity.Property(e => e.Trcode).HasColumnName("TRCODE");
            });

            modelBuilder.Entity<Lv001SalesItem>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_SALES_ITEMS");

                entity.Property(e => e.AreaCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("AREA_CODE");

                entity.Property(e => e.CapideptName)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("CAPIDEPT_NAME");

                entity.Property(e => e.CapideptNr).HasColumnName("CAPIDEPT_NR");

                entity.Property(e => e.CapidivName)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("CAPIDIV_NAME");

                entity.Property(e => e.CapidivNr).HasColumnName("CAPIDIV_NR");

                entity.Property(e => e.CapiwhouseName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CAPIWHOUSE_NAME");

                entity.Property(e => e.CapiwhouseNr).HasColumnName("CAPIWHOUSE_NR");

                entity.Property(e => e.ClassActive).HasColumnName("CLASS_ACTIVE");

                entity.Property(e => e.ClassActiveAdi)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_ACTIVE_ADI");

                entity.Property(e => e.ClassCardtype).HasColumnName("CLASS_CARDTYPE");

                entity.Property(e => e.ClassCardtypeTipi)
                    .IsRequired()
                    .HasMaxLength(49)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_CARDTYPE_TIPI");

                entity.Property(e => e.ClassCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_CODE");

                entity.Property(e => e.ClassCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_CYPHCODE");

                entity.Property(e => e.ClassName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_NAME");

                entity.Property(e => e.ClassProducercode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_PRODUCERCODE");

                entity.Property(e => e.ClassSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_SPECODE");

                entity.Property(e => e.ClassStgrpcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_STGRPCODE");

                entity.Property(e => e.ClcardActive).HasColumnName("CLCARD_ACTIVE");

                entity.Property(e => e.ClcardActiveAdi)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_ACTIVE_ADI");

                entity.Property(e => e.ClcardCardtype).HasColumnName("CLCARD_CARDTYPE");

                entity.Property(e => e.ClcardCardtypeAdi)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CARDTYPE_ADI");

                entity.Property(e => e.ClcardCity)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CITY");

                entity.Property(e => e.ClcardCode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CODE");

                entity.Property(e => e.ClcardCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CYPHCODE");

                entity.Property(e => e.ClcardDefinition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_DEFINITION_");

                entity.Property(e => e.ClcardIncharge)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_INCHARGE");

                entity.Property(e => e.ClcardSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_SPECODE");

                entity.Property(e => e.ClcardTaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_TAXNR");

                entity.Property(e => e.ClcardTaxoffice)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_TAXOFFICE");

                entity.Property(e => e.ClcardTradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_TRADINGGRP");

                entity.Property(e => e.EmcenterCode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("EMCENTER_CODE");

                entity.Property(e => e.EmcenterDefinition)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("EMCENTER_DEFINITION_");

                entity.Property(e => e.FstficheClientref).HasColumnName("FSTFICHE_CLIENTREF");

                entity.Property(e => e.GrossvolumeCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("GROSSVOLUME_CODE");

                entity.Property(e => e.GrossweightCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("GROSSWEIGHT_CODE");

                entity.Property(e => e.HeightCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("HEIGHT_CODE");

                entity.Property(e => e.InvoiceClientref).HasColumnName("INVOICE_CLIENTREF");

                entity.Property(e => e.InvoiceCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("INVOICE_CYPHCODE");

                entity.Property(e => e.InvoiceDate)
                    .HasColumnType("datetime")
                    .HasColumnName("INVOICE_DATE_");

                entity.Property(e => e.InvoiceDocode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("INVOICE_DOCODE");

                entity.Property(e => e.InvoiceFicheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("INVOICE_FICHENO");

                entity.Property(e => e.InvoiceGrpcode).HasColumnName("INVOICE_GRPCODE");

                entity.Property(e => e.InvoiceGrpcodeAçiklama)
                    .IsRequired()
                    .HasMaxLength(44)
                    .IsUnicode(false)
                    .HasColumnName("INVOICE_GRPCODE_AÇIKLAMA");

                entity.Property(e => e.InvoiceInputAdddiscounts).HasColumnName("INVOICE_INPUT_ADDDISCOUNTS");

                entity.Property(e => e.InvoiceInputAddexpenses).HasColumnName("INVOICE_INPUT_ADDEXPENSES");

                entity.Property(e => e.InvoiceInputGrosstotal).HasColumnName("INVOICE_INPUT_GROSSTOTAL");

                entity.Property(e => e.InvoiceInputNettotal).HasColumnName("INVOICE_INPUT_NETTOTAL");

                entity.Property(e => e.InvoiceInputReportnet).HasColumnName("INVOICE_INPUT_REPORTNET");

                entity.Property(e => e.InvoiceInputTotaldepozito).HasColumnName("INVOICE_INPUT_TOTALDEPOZITO");

                entity.Property(e => e.InvoiceInputTotaldiscounted).HasColumnName("INVOICE_INPUT_TOTALDISCOUNTED");

                entity.Property(e => e.InvoiceInputTotaldiscounts).HasColumnName("INVOICE_INPUT_TOTALDISCOUNTS");

                entity.Property(e => e.InvoiceInputTotalexpenses).HasColumnName("INVOICE_INPUT_TOTALEXPENSES");

                entity.Property(e => e.InvoiceInputTotalpromotions).HasColumnName("INVOICE_INPUT_TOTALPROMOTIONS");

                entity.Property(e => e.InvoiceInputTotalvat).HasColumnName("INVOICE_INPUT_TOTALVAT");

                entity.Property(e => e.InvoiceInputTrnet).HasColumnName("INVOICE_INPUT_TRNET");

                entity.Property(e => e.InvoiceOutputAdddiscounts).HasColumnName("INVOICE_OUTPUT_ADDDISCOUNTS");

                entity.Property(e => e.InvoiceOutputAddexpenses).HasColumnName("INVOICE_OUTPUT_ADDEXPENSES");

                entity.Property(e => e.InvoiceOutputGrosstotal).HasColumnName("INVOICE_OUTPUT_GROSSTOTAL");

                entity.Property(e => e.InvoiceOutputNettotal).HasColumnName("INVOICE_OUTPUT_NETTOTAL");

                entity.Property(e => e.InvoiceOutputReportnet).HasColumnName("INVOICE_OUTPUT_REPORTNET");

                entity.Property(e => e.InvoiceOutputTotaldepozito).HasColumnName("INVOICE_OUTPUT_TOTALDEPOZITO");

                entity.Property(e => e.InvoiceOutputTotaldiscounted).HasColumnName("INVOICE_OUTPUT_TOTALDISCOUNTED");

                entity.Property(e => e.InvoiceOutputTotaldiscounts).HasColumnName("INVOICE_OUTPUT_TOTALDISCOUNTS");

                entity.Property(e => e.InvoiceOutputTotalexpenses).HasColumnName("INVOICE_OUTPUT_TOTALEXPENSES");

                entity.Property(e => e.InvoiceOutputTotalpromotions).HasColumnName("INVOICE_OUTPUT_TOTALPROMOTIONS");

                entity.Property(e => e.InvoiceOutputTotalvat).HasColumnName("INVOICE_OUTPUT_TOTALVAT");

                entity.Property(e => e.InvoiceOutputTrnet).HasColumnName("INVOICE_OUTPUT_TRNET");

                entity.Property(e => e.InvoiceRecvref).HasColumnName("INVOICE_RECVREF");

                entity.Property(e => e.InvoiceReportrate).HasColumnName("INVOICE_REPORTRATE");

                entity.Property(e => e.InvoiceSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("INVOICE_SPECODE");

                entity.Property(e => e.InvoiceTime).HasColumnName("INVOICE_TIME_");

                entity.Property(e => e.InvoiceTrcode).HasColumnName("INVOICE_TRCODE");

                entity.Property(e => e.InvoiceTrcodeAdi)
                    .IsRequired()
                    .HasMaxLength(54)
                    .IsUnicode(false)
                    .HasColumnName("INVOICE_TRCODE_ADI");

                entity.Property(e => e.InvoiceTrcurr).HasColumnName("INVOICE_TRCURR");

                entity.Property(e => e.InvoiceTrrate).HasColumnName("INVOICE_TRRATE");

                entity.Property(e => e.ItemsActive).HasColumnName("ITEMS_ACTIVE");

                entity.Property(e => e.ItemsActiveAdi)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_ACTIVE_ADI");

                entity.Property(e => e.ItemsCardtype).HasColumnName("ITEMS_CARDTYPE");

                entity.Property(e => e.ItemsCardtypeTipi)
                    .IsRequired()
                    .HasMaxLength(49)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_CARDTYPE_TIPI");

                entity.Property(e => e.ItemsCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_CODE");

                entity.Property(e => e.ItemsCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_CYPHCODE");

                entity.Property(e => e.ItemsIzlemeTuru)
                    .IsRequired()
                    .HasMaxLength(41)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_IZLEME_TURU");

                entity.Property(e => e.ItemsName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_NAME");

                entity.Property(e => e.ItemsProducercode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_PRODUCERCODE");

                entity.Property(e => e.ItemsSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_SPECODE");

                entity.Property(e => e.ItemsStgrpcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_STGRPCODE");

                entity.Property(e => e.ItemsTracktype).HasColumnName("ITEMS_TRACKTYPE");

                entity.Property(e => e.Itmunita2Katsayi).HasColumnName("ITMUNITA_2_KATSAYI");

                entity.Property(e => e.Itmunita3Katsayi).HasColumnName("ITMUNITA_3_KATSAYI");

                entity.Property(e => e.ItmunitaArea).HasColumnName("ITMUNITA_AREA");

                entity.Property(e => e.ItmunitaBarcode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("ITMUNITA_BARCODE");

                entity.Property(e => e.ItmunitaConvfact1).HasColumnName("ITMUNITA_CONVFACT1");

                entity.Property(e => e.ItmunitaConvfact2).HasColumnName("ITMUNITA_CONVFACT2");

                entity.Property(e => e.ItmunitaGrossvolume).HasColumnName("ITMUNITA_GROSSVOLUME");

                entity.Property(e => e.ItmunitaGrossweight).HasColumnName("ITMUNITA_GROSSWEIGHT");

                entity.Property(e => e.ItmunitaHeight).HasColumnName("ITMUNITA_HEIGHT");

                entity.Property(e => e.ItmunitaLength).HasColumnName("ITMUNITA_LENGTH");

                entity.Property(e => e.ItmunitaLinenr).HasColumnName("ITMUNITA_LINENR");

                entity.Property(e => e.ItmunitaVolume).HasColumnName("ITMUNITA_VOLUME_");

                entity.Property(e => e.ItmunitaWeight).HasColumnName("ITMUNITA_WEIGHT");

                entity.Property(e => e.ItmunitaWidth).HasColumnName("ITMUNITA_WIDTH");

                entity.Property(e => e.LengthCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("LENGTH_CODE");

                entity.Property(e => e.PayplansCode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_CODE");

                entity.Property(e => e.PayplansCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_CYPHCODE");

                entity.Property(e => e.PayplansDefinition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_DEFINITION_");

                entity.Property(e => e.PayplansSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_SPECODE");

                entity.Property(e => e.Period).HasColumnName("PERIOD");

                entity.Property(e => e.ProjectCode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PROJECT_CODE");

                entity.Property(e => e.ProjectName)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PROJECT_NAME");

                entity.Property(e => e.ShipinfoCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_CODE");

                entity.Property(e => e.ShipinfoCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_CYPHCODE");

                entity.Property(e => e.ShipinfoName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_NAME");

                entity.Property(e => e.ShipinfoSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_SPECODE");

                entity.Property(e => e.SlsmanCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SLSMAN_CODE");

                entity.Property(e => e.SlsmanDefinition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SLSMAN_DEFINITION_");

                entity.Property(e => e.StficheBilled).HasColumnName("STFICHE_BILLED");

                entity.Property(e => e.StficheBilledTipi)
                    .IsRequired()
                    .HasMaxLength(36)
                    .IsUnicode(false)
                    .HasColumnName("STFICHE_BILLED_TIPI");

                entity.Property(e => e.StficheCancelled).HasColumnName("STFICHE_CANCELLED");

                entity.Property(e => e.StficheCancelledAçiklama)
                    .IsRequired()
                    .HasMaxLength(43)
                    .IsUnicode(false)
                    .HasColumnName("STFICHE_CANCELLED_AÇIKLAMA");

                entity.Property(e => e.StficheCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("STFICHE_CYPHCODE");

                entity.Property(e => e.StficheDate)
                    .HasColumnType("datetime")
                    .HasColumnName("STFICHE_DATE_");

                entity.Property(e => e.StficheDocode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("STFICHE_DOCODE");

                entity.Property(e => e.StficheFicheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("STFICHE_FICHENO");

                entity.Property(e => e.StficheFtime).HasColumnName("STFICHE_FTIME");

                entity.Property(e => e.StficheGrpcode).HasColumnName("STFICHE_GRPCODE");

                entity.Property(e => e.StficheGrpcodeTipi)
                    .IsRequired()
                    .HasMaxLength(46)
                    .IsUnicode(false)
                    .HasColumnName("STFICHE_GRPCODE_TIPI");

                entity.Property(e => e.StficheInputAdddiscounts).HasColumnName("STFICHE_INPUT_ADDDISCOUNTS");

                entity.Property(e => e.StficheInputAddexpenses).HasColumnName("STFICHE_INPUT_ADDEXPENSES");

                entity.Property(e => e.StficheInputGrosstotal).HasColumnName("STFICHE_INPUT_GROSSTOTAL");

                entity.Property(e => e.StficheInputNettotal).HasColumnName("STFICHE_INPUT_NETTOTAL");

                entity.Property(e => e.StficheInputReportnet).HasColumnName("STFICHE_INPUT_REPORTNET");

                entity.Property(e => e.StficheInputTotaldepozito).HasColumnName("STFICHE_INPUT_TOTALDEPOZITO");

                entity.Property(e => e.StficheInputTotaldiscounted).HasColumnName("STFICHE_INPUT_TOTALDISCOUNTED");

                entity.Property(e => e.StficheInputTotaldiscounts).HasColumnName("STFICHE_INPUT_TOTALDISCOUNTS");

                entity.Property(e => e.StficheInputTotalexpenses).HasColumnName("STFICHE_INPUT_TOTALEXPENSES");

                entity.Property(e => e.StficheInputTotalpromotions).HasColumnName("STFICHE_INPUT_TOTALPROMOTIONS");

                entity.Property(e => e.StficheInputTotalvat).HasColumnName("STFICHE_INPUT_TOTALVAT");

                entity.Property(e => e.StficheInputTrnet).HasColumnName("STFICHE_INPUT_TRNET");

                entity.Property(e => e.StficheInvno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("STFICHE_INVNO");

                entity.Property(e => e.StficheInvoiceref).HasColumnName("STFICHE_INVOICEREF");

                entity.Property(e => e.StficheIocode).HasColumnName("STFICHE_IOCODE");

                entity.Property(e => e.StficheOutputAdddiscounts).HasColumnName("STFICHE_OUTPUT_ADDDISCOUNTS");

                entity.Property(e => e.StficheOutputAddexpenses).HasColumnName("STFICHE_OUTPUT_ADDEXPENSES");

                entity.Property(e => e.StficheOutputGrosstotal).HasColumnName("STFICHE_OUTPUT_GROSSTOTAL");

                entity.Property(e => e.StficheOutputNettotal).HasColumnName("STFICHE_OUTPUT_NETTOTAL");

                entity.Property(e => e.StficheOutputReportnet).HasColumnName("STFICHE_OUTPUT_REPORTNET");

                entity.Property(e => e.StficheOutputTotaldepozito).HasColumnName("STFICHE_OUTPUT_TOTALDEPOZITO");

                entity.Property(e => e.StficheOutputTotaldiscounted).HasColumnName("STFICHE_OUTPUT_TOTALDISCOUNTED");

                entity.Property(e => e.StficheOutputTotaldiscounts).HasColumnName("STFICHE_OUTPUT_TOTALDISCOUNTS");

                entity.Property(e => e.StficheOutputTotalexpenses).HasColumnName("STFICHE_OUTPUT_TOTALEXPENSES");

                entity.Property(e => e.StficheOutputTotalpromotions).HasColumnName("STFICHE_OUTPUT_TOTALPROMOTIONS");

                entity.Property(e => e.StficheOutputTotalvat).HasColumnName("STFICHE_OUTPUT_TOTALVAT");

                entity.Property(e => e.StficheOutputTrnet).HasColumnName("STFICHE_OUTPUT_TRNET");

                entity.Property(e => e.StficheProdstat).HasColumnName("STFICHE_PRODSTAT");

                entity.Property(e => e.StficheProdstatAçiklama)
                    .IsRequired()
                    .HasMaxLength(34)
                    .IsUnicode(false)
                    .HasColumnName("STFICHE_PRODSTAT_AÇIKLAMA");

                entity.Property(e => e.StficheRecvref).HasColumnName("STFICHE_RECVREF");

                entity.Property(e => e.StficheReportrate).HasColumnName("STFICHE_REPORTRATE");

                entity.Property(e => e.StficheSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("STFICHE_SPECODE");

                entity.Property(e => e.StficheTrcode).HasColumnName("STFICHE_TRCODE");

                entity.Property(e => e.StficheTrcodeAdi)
                    .IsRequired()
                    .HasMaxLength(59)
                    .IsUnicode(false)
                    .HasColumnName("STFICHE_TRCODE_ADI");

                entity.Property(e => e.StficheTrcurr).HasColumnName("STFICHE_TRCURR");

                entity.Property(e => e.StficheTrrate).HasColumnName("STFICHE_TRRATE");

                entity.Property(e => e.StlineBilled).HasColumnName("STLINE_BILLED");

                entity.Property(e => e.StlineBilledTipi)
                    .IsRequired()
                    .HasMaxLength(49)
                    .IsUnicode(false)
                    .HasColumnName("STLINE_BILLED_TIPI");

                entity.Property(e => e.StlineCancelled).HasColumnName("STLINE_CANCELLED");

                entity.Property(e => e.StlineClientref).HasColumnName("STLINE_CLIENTREF");

                entity.Property(e => e.StlineDate)
                    .HasColumnType("datetime")
                    .HasColumnName("STLINE_DATE_");

                entity.Property(e => e.StlineDay).HasColumnName("STLINE_DAY");

                entity.Property(e => e.StlineDelvrycode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("STLINE_DELVRYCODE");

                entity.Property(e => e.StlineDestcostgrp).HasColumnName("STLINE_DESTCOSTGRP");

                entity.Property(e => e.StlineDestindex).HasColumnName("STLINE_DESTINDEX");

                entity.Property(e => e.StlineDiscper).HasColumnName("STLINE_DISCPER");

                entity.Property(e => e.StlineFtime).HasColumnName("STLINE_FTIME");

                entity.Property(e => e.StlineGlobtrans).HasColumnName("STLINE_GLOBTRANS");

                entity.Property(e => e.StlineHalf).HasColumnName("STLINE_HALF");

                entity.Property(e => e.StlineInputAmount).HasColumnName("STLINE_INPUT_AMOUNT");

                entity.Property(e => e.StlineInputDiffprcost).HasColumnName("STLINE_INPUT_DIFFPRCOST");

                entity.Property(e => e.StlineInputDiffprcrcost).HasColumnName("STLINE_INPUT_DIFFPRCRCOST");

                entity.Property(e => e.StlineInputDiffrepprice).HasColumnName("STLINE_INPUT_DIFFREPPRICE");

                entity.Property(e => e.StlineInputDistcost).HasColumnName("STLINE_INPUT_DISTCOST");

                entity.Property(e => e.StlineInputDistdisc).HasColumnName("STLINE_INPUT_DISTDISC");

                entity.Property(e => e.StlineInputDistexp).HasColumnName("STLINE_INPUT_DISTEXP");

                entity.Property(e => e.StlineInputDistprom).HasColumnName("STLINE_INPUT_DISTPROM");

                entity.Property(e => e.StlineInputLinenet).HasColumnName("STLINE_INPUT_LINENET");

                entity.Property(e => e.StlineInputOutcost).HasColumnName("STLINE_INPUT_OUTCOST");

                entity.Property(e => e.StlineInputPrice).HasColumnName("STLINE_INPUT_PRICE");

                entity.Property(e => e.StlineInputPrprice).HasColumnName("STLINE_INPUT_PRPRICE");

                entity.Property(e => e.StlineInputTotal).HasColumnName("STLINE_INPUT_TOTAL");

                entity.Property(e => e.StlineInputVatamnt).HasColumnName("STLINE_INPUT_VATAMNT");

                entity.Property(e => e.StlineInputVatmatrah).HasColumnName("STLINE_INPUT_VATMATRAH");

                entity.Property(e => e.StlineInvoicelnno).HasColumnName("STLINE_INVOICELNNO");

                entity.Property(e => e.StlineInvoiceref).HasColumnName("STLINE_INVOICEREF");

                entity.Property(e => e.StlineIocode).HasColumnName("STLINE_IOCODE");

                entity.Property(e => e.StlineIocodeTuru)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("STLINE_IOCODE_TURU");

                entity.Property(e => e.StlineLineexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("STLINE_LINEEXP");

                entity.Property(e => e.StlineLinetype).HasColumnName("STLINE_LINETYPE");

                entity.Property(e => e.StlineLogicalref).HasColumnName("STLINE_LOGICALREF");

                entity.Property(e => e.StlineMonth).HasColumnName("STLINE_MONTH");

                entity.Property(e => e.StlineOrdficheref).HasColumnName("STLINE_ORDFICHEREF");

                entity.Property(e => e.StlineOrdtransref).HasColumnName("STLINE_ORDTRANSREF");

                entity.Property(e => e.StlineOutputAmount).HasColumnName("STLINE_OUTPUT_AMOUNT");

                entity.Property(e => e.StlineOutputDiffprcost).HasColumnName("STLINE_OUTPUT_DIFFPRCOST");

                entity.Property(e => e.StlineOutputDiffprcrcost).HasColumnName("STLINE_OUTPUT_DIFFPRCRCOST");

                entity.Property(e => e.StlineOutputDiffrepprice).HasColumnName("STLINE_OUTPUT_DIFFREPPRICE");

                entity.Property(e => e.StlineOutputDistcost).HasColumnName("STLINE_OUTPUT_DISTCOST");

                entity.Property(e => e.StlineOutputDistdisc).HasColumnName("STLINE_OUTPUT_DISTDISC");

                entity.Property(e => e.StlineOutputDistexp).HasColumnName("STLINE_OUTPUT_DISTEXP");

                entity.Property(e => e.StlineOutputDistprom).HasColumnName("STLINE_OUTPUT_DISTPROM");

                entity.Property(e => e.StlineOutputLinenet).HasColumnName("STLINE_OUTPUT_LINENET");

                entity.Property(e => e.StlineOutputOutcost).HasColumnName("STLINE_OUTPUT_OUTCOST");

                entity.Property(e => e.StlineOutputPrice).HasColumnName("STLINE_OUTPUT_PRICE");

                entity.Property(e => e.StlineOutputPrprice).HasColumnName("STLINE_OUTPUT_PRPRICE");

                entity.Property(e => e.StlineOutputTotal).HasColumnName("STLINE_OUTPUT_TOTAL");

                entity.Property(e => e.StlineOutputVatamnt).HasColumnName("STLINE_OUTPUT_VATAMNT");

                entity.Property(e => e.StlineOutputVatmatrah).HasColumnName("STLINE_OUTPUT_VATMATRAH");

                entity.Property(e => e.StlinePrcurr).HasColumnName("STLINE_PRCURR");

                entity.Property(e => e.StlinePrevlineno).HasColumnName("STLINE_PREVLINENO");

                entity.Property(e => e.StlinePrevlineref).HasColumnName("STLINE_PREVLINEREF");

                entity.Property(e => e.StlineQuarter).HasColumnName("STLINE_QUARTER");

                entity.Property(e => e.StlineReportrate).HasColumnName("STLINE_REPORTRATE");

                entity.Property(e => e.StlineSatirTuru)
                    .IsRequired()
                    .HasMaxLength(39)
                    .IsUnicode(false)
                    .HasColumnName("STLINE_SATIR_TURU");

                entity.Property(e => e.StlineSourcecostgrp).HasColumnName("STLINE_SOURCECOSTGRP");

                entity.Property(e => e.StlineSourceindex).HasColumnName("STLINE_SOURCEINDEX");

                entity.Property(e => e.StlineSpecode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("STLINE_SPECODE");

                entity.Property(e => e.StlineStfichelnno).HasColumnName("STLINE_STFICHELNNO");

                entity.Property(e => e.StlineStficheref).HasColumnName("STLINE_STFICHEREF");

                entity.Property(e => e.StlineTrcode).HasColumnName("STLINE_TRCODE");

                entity.Property(e => e.StlineTrcurr).HasColumnName("STLINE_TRCURR");

                entity.Property(e => e.StlineTrrate).HasColumnName("STLINE_TRRATE");

                entity.Property(e => e.StlineUinfo1).HasColumnName("STLINE_UINFO1");

                entity.Property(e => e.StlineUinfo2).HasColumnName("STLINE_UINFO2");

                entity.Property(e => e.StlineUomref).HasColumnName("STLINE_UOMREF");

                entity.Property(e => e.StlineUsref).HasColumnName("STLINE_USREF");

                entity.Property(e => e.StlineVat).HasColumnName("STLINE_VAT");

                entity.Property(e => e.StlineVatinc).HasColumnName("STLINE_VATINC");

                entity.Property(e => e.StlineWeek).HasColumnName("STLINE_WEEK");

                entity.Property(e => e.StlineYear).HasColumnName("STLINE_YEAR");

                entity.Property(e => e.UnitsetfCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_CODE");

                entity.Property(e => e.UnitsetfCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_CYPHCODE");

                entity.Property(e => e.UnitsetfName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_NAME");

                entity.Property(e => e.UnitsetfSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_SPECODE");

                entity.Property(e => e.Unitsetl2Code)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_2_CODE");

                entity.Property(e => e.Unitsetl2Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_2_NAME");

                entity.Property(e => e.Unitsetl3Code)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_3_CODE");

                entity.Property(e => e.Unitsetl3Name)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_3_NAME");

                entity.Property(e => e.UnitsetlCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_CODE");

                entity.Property(e => e.UnitsetlName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_NAME");

                entity.Property(e => e.VolumeCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("VOLUME_CODE");

                entity.Property(e => e.WeightCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("WEIGHT_CODE");

                entity.Property(e => e.WidthCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("WIDTH_CODE");
            });

            modelBuilder.Entity<Lv001SalesItemsTotal>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_SALES_ITEMS_TOTAL");

                entity.Property(e => e.CapideptNr).HasColumnName("CAPIDEPT_NR");

                entity.Property(e => e.CapidivNr).HasColumnName("CAPIDIV_NR");

                entity.Property(e => e.CapiwhouseNr).HasColumnName("CAPIWHOUSE_NR");

                entity.Property(e => e.ClassCode)
                    .IsRequired()
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("CLASS_CODE");

                entity.Property(e => e.InvoiceGrpcode).HasColumnName("INVOICE_GRPCODE");

                entity.Property(e => e.InvoiceGrpcodeTipi)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("INVOICE_GRPCODE_TIPI");

                entity.Property(e => e.ItemsStgrpcode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("ITEMS_STGRPCODE");

                entity.Property(e => e.Period).HasColumnName("PERIOD");

                entity.Property(e => e.SlsmanCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SLSMAN_CODE");

                entity.Property(e => e.StlineBilled).HasColumnName("STLINE_BILLED");

                entity.Property(e => e.StlineBilledTipi)
                    .IsRequired()
                    .HasMaxLength(49)
                    .IsUnicode(false)
                    .HasColumnName("STLINE_BILLED_TIPI");

                entity.Property(e => e.StlineCancelled).HasColumnName("STLINE_CANCELLED");

                entity.Property(e => e.StlineCancelledAçiklama)
                    .IsRequired()
                    .HasMaxLength(43)
                    .IsUnicode(false)
                    .HasColumnName("STLINE_CANCELLED_AÇIKLAMA");

                entity.Property(e => e.StlineDay).HasColumnName("STLINE_DAY");

                entity.Property(e => e.StlineHalf).HasColumnName("STLINE_HALF");

                entity.Property(e => e.StlineInputAmount).HasColumnName("STLINE_INPUT_AMOUNT");

                entity.Property(e => e.StlineInputDiffprcost).HasColumnName("STLINE_INPUT_DIFFPRCOST");

                entity.Property(e => e.StlineInputDiffprcrcost).HasColumnName("STLINE_INPUT_DIFFPRCRCOST");

                entity.Property(e => e.StlineInputDiffrepprice).HasColumnName("STLINE_INPUT_DIFFREPPRICE");

                entity.Property(e => e.StlineInputDistcost).HasColumnName("STLINE_INPUT_DISTCOST");

                entity.Property(e => e.StlineInputDistdisc).HasColumnName("STLINE_INPUT_DISTDISC");

                entity.Property(e => e.StlineInputDistexp).HasColumnName("STLINE_INPUT_DISTEXP");

                entity.Property(e => e.StlineInputDistprom).HasColumnName("STLINE_INPUT_DISTPROM");

                entity.Property(e => e.StlineInputLinenet).HasColumnName("STLINE_INPUT_LINENET");

                entity.Property(e => e.StlineInputOutcost).HasColumnName("STLINE_INPUT_OUTCOST");

                entity.Property(e => e.StlineInputPrice).HasColumnName("STLINE_INPUT_PRICE");

                entity.Property(e => e.StlineInputTotal).HasColumnName("STLINE_INPUT_TOTAL");

                entity.Property(e => e.StlineInputVatamnt).HasColumnName("STLINE_INPUT_VATAMNT");

                entity.Property(e => e.StlineInputVatmatrah).HasColumnName("STLINE_INPUT_VATMATRAH");

                entity.Property(e => e.StlineMonth).HasColumnName("STLINE_MONTH");

                entity.Property(e => e.StlineOutputAmount).HasColumnName("STLINE_OUTPUT_AMOUNT");

                entity.Property(e => e.StlineOutputDiffprcost).HasColumnName("STLINE_OUTPUT_DIFFPRCOST");

                entity.Property(e => e.StlineOutputDiffprcrcost).HasColumnName("STLINE_OUTPUT_DIFFPRCRCOST");

                entity.Property(e => e.StlineOutputDiffrepprice).HasColumnName("STLINE_OUTPUT_DIFFREPPRICE");

                entity.Property(e => e.StlineOutputDistcost).HasColumnName("STLINE_OUTPUT_DISTCOST");

                entity.Property(e => e.StlineOutputDistdisc).HasColumnName("STLINE_OUTPUT_DISTDISC");

                entity.Property(e => e.StlineOutputDistexp).HasColumnName("STLINE_OUTPUT_DISTEXP");

                entity.Property(e => e.StlineOutputDistprom).HasColumnName("STLINE_OUTPUT_DISTPROM");

                entity.Property(e => e.StlineOutputLinenet).HasColumnName("STLINE_OUTPUT_LINENET");

                entity.Property(e => e.StlineOutputOutcost).HasColumnName("STLINE_OUTPUT_OUTCOST");

                entity.Property(e => e.StlineOutputPrice).HasColumnName("STLINE_OUTPUT_PRICE");

                entity.Property(e => e.StlineOutputTotal).HasColumnName("STLINE_OUTPUT_TOTAL");

                entity.Property(e => e.StlineOutputVatamnt).HasColumnName("STLINE_OUTPUT_VATAMNT");

                entity.Property(e => e.StlineOutputVatmatrah).HasColumnName("STLINE_OUTPUT_VATMATRAH");

                entity.Property(e => e.StlineQuarter).HasColumnName("STLINE_QUARTER");

                entity.Property(e => e.StlineWeek).HasColumnName("STLINE_WEEK");

                entity.Property(e => e.StlineYear).HasColumnName("STLINE_YEAR");
            });

            modelBuilder.Entity<Lv001SalesService>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_SALES_SERVICE");

                entity.Property(e => e.CapideptName)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("CAPIDEPT_NAME");

                entity.Property(e => e.CapideptNr).HasColumnName("CAPIDEPT_NR");

                entity.Property(e => e.CapidivName)
                    .HasMaxLength(61)
                    .IsUnicode(false)
                    .HasColumnName("CAPIDIV_NAME");

                entity.Property(e => e.CapidivNr).HasColumnName("CAPIDIV_NR");

                entity.Property(e => e.CapiwhouseName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("CAPIWHOUSE_NAME");

                entity.Property(e => e.CapiwhouseNr).HasColumnName("CAPIWHOUSE_NR");

                entity.Property(e => e.ClcardActive).HasColumnName("CLCARD_ACTIVE");

                entity.Property(e => e.ClcardActiveAdi)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_ACTIVE_ADI");

                entity.Property(e => e.ClcardCardtype).HasColumnName("CLCARD_CARDTYPE");

                entity.Property(e => e.ClcardCardtypeAdi)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CARDTYPE_ADI");

                entity.Property(e => e.ClcardCity)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CITY");

                entity.Property(e => e.ClcardCode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CODE");

                entity.Property(e => e.ClcardCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_CYPHCODE");

                entity.Property(e => e.ClcardDefinition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_DEFINITION_");

                entity.Property(e => e.ClcardIncharge)
                    .HasMaxLength(21)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_INCHARGE");

                entity.Property(e => e.ClcardSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_SPECODE");

                entity.Property(e => e.ClcardTaxnr)
                    .HasMaxLength(16)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_TAXNR");

                entity.Property(e => e.ClcardTaxoffice)
                    .HasMaxLength(31)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_TAXOFFICE");

                entity.Property(e => e.ClcardTradinggrp)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("CLCARD_TRADINGGRP");

                entity.Property(e => e.EmcenterCode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("EMCENTER_CODE");

                entity.Property(e => e.EmcenterDefinition)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("EMCENTER_DEFINITION_");

                entity.Property(e => e.InvoiceCancelled).HasColumnName("INVOICE_CANCELLED");

                entity.Property(e => e.InvoiceCancelledAçiklama)
                    .IsRequired()
                    .HasMaxLength(49)
                    .IsUnicode(false)
                    .HasColumnName("INVOICE_CANCELLED_AÇIKLAMA");

                entity.Property(e => e.InvoiceClientref).HasColumnName("INVOICE_CLIENTREF");

                entity.Property(e => e.InvoiceCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("INVOICE_CYPHCODE");

                entity.Property(e => e.InvoiceDate)
                    .HasColumnType("datetime")
                    .HasColumnName("INVOICE_DATE_");

                entity.Property(e => e.InvoiceDocode)
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("INVOICE_DOCODE");

                entity.Property(e => e.InvoiceFicheno)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("INVOICE_FICHENO");

                entity.Property(e => e.InvoiceGrpcode).HasColumnName("INVOICE_GRPCODE");

                entity.Property(e => e.InvoiceGrpcodeAçiklama)
                    .IsRequired()
                    .HasMaxLength(44)
                    .IsUnicode(false)
                    .HasColumnName("INVOICE_GRPCODE_AÇIKLAMA");

                entity.Property(e => e.InvoiceInputAdddiscounts).HasColumnName("INVOICE_INPUT_ADDDISCOUNTS");

                entity.Property(e => e.InvoiceInputAddexpenses).HasColumnName("INVOICE_INPUT_ADDEXPENSES");

                entity.Property(e => e.InvoiceInputGrosstotal).HasColumnName("INVOICE_INPUT_GROSSTOTAL");

                entity.Property(e => e.InvoiceInputNettotal).HasColumnName("INVOICE_INPUT_NETTOTAL");

                entity.Property(e => e.InvoiceInputReportnet).HasColumnName("INVOICE_INPUT_REPORTNET");

                entity.Property(e => e.InvoiceInputTotaldepozito).HasColumnName("INVOICE_INPUT_TOTALDEPOZITO");

                entity.Property(e => e.InvoiceInputTotaldiscounted).HasColumnName("INVOICE_INPUT_TOTALDISCOUNTED");

                entity.Property(e => e.InvoiceInputTotaldiscounts).HasColumnName("INVOICE_INPUT_TOTALDISCOUNTS");

                entity.Property(e => e.InvoiceInputTotalexpenses).HasColumnName("INVOICE_INPUT_TOTALEXPENSES");

                entity.Property(e => e.InvoiceInputTotalpromotions).HasColumnName("INVOICE_INPUT_TOTALPROMOTIONS");

                entity.Property(e => e.InvoiceInputTotalvat).HasColumnName("INVOICE_INPUT_TOTALVAT");

                entity.Property(e => e.InvoiceInputTrnet).HasColumnName("INVOICE_INPUT_TRNET");

                entity.Property(e => e.InvoiceOutputAdddiscounts).HasColumnName("INVOICE_OUTPUT_ADDDISCOUNTS");

                entity.Property(e => e.InvoiceOutputAddexpenses).HasColumnName("INVOICE_OUTPUT_ADDEXPENSES");

                entity.Property(e => e.InvoiceOutputGrosstotal).HasColumnName("INVOICE_OUTPUT_GROSSTOTAL");

                entity.Property(e => e.InvoiceOutputNettotal).HasColumnName("INVOICE_OUTPUT_NETTOTAL");

                entity.Property(e => e.InvoiceOutputReportnet).HasColumnName("INVOICE_OUTPUT_REPORTNET");

                entity.Property(e => e.InvoiceOutputTotaldepozito).HasColumnName("INVOICE_OUTPUT_TOTALDEPOZITO");

                entity.Property(e => e.InvoiceOutputTotaldiscounted).HasColumnName("INVOICE_OUTPUT_TOTALDISCOUNTED");

                entity.Property(e => e.InvoiceOutputTotaldiscounts).HasColumnName("INVOICE_OUTPUT_TOTALDISCOUNTS");

                entity.Property(e => e.InvoiceOutputTotalexpenses).HasColumnName("INVOICE_OUTPUT_TOTALEXPENSES");

                entity.Property(e => e.InvoiceOutputTotalpromotions).HasColumnName("INVOICE_OUTPUT_TOTALPROMOTIONS");

                entity.Property(e => e.InvoiceOutputTotalvat).HasColumnName("INVOICE_OUTPUT_TOTALVAT");

                entity.Property(e => e.InvoiceOutputTrnet).HasColumnName("INVOICE_OUTPUT_TRNET");

                entity.Property(e => e.InvoiceRecvref).HasColumnName("INVOICE_RECVREF");

                entity.Property(e => e.InvoiceReportrate).HasColumnName("INVOICE_REPORTRATE");

                entity.Property(e => e.InvoiceSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("INVOICE_SPECODE");

                entity.Property(e => e.InvoiceTime).HasColumnName("INVOICE_TIME_");

                entity.Property(e => e.InvoiceTrcode).HasColumnName("INVOICE_TRCODE");

                entity.Property(e => e.InvoiceTrcodeAdi)
                    .IsRequired()
                    .HasMaxLength(54)
                    .IsUnicode(false)
                    .HasColumnName("INVOICE_TRCODE_ADI");

                entity.Property(e => e.InvoiceTrcurr).HasColumnName("INVOICE_TRCURR");

                entity.Property(e => e.InvoiceTrrate).HasColumnName("INVOICE_TRRATE");

                entity.Property(e => e.PayplansCode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_CODE");

                entity.Property(e => e.PayplansCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_CYPHCODE");

                entity.Property(e => e.PayplansDefinition)
                    .HasMaxLength(201)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_DEFINITION_");

                entity.Property(e => e.PayplansSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("PAYPLANS_SPECODE");

                entity.Property(e => e.Period).HasColumnName("PERIOD");

                entity.Property(e => e.ProjectCode)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PROJECT_CODE");

                entity.Property(e => e.ProjectName)
                    .HasMaxLength(101)
                    .IsUnicode(false)
                    .HasColumnName("PROJECT_NAME");

                entity.Property(e => e.ShipinfoCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_CODE");

                entity.Property(e => e.ShipinfoCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_CYPHCODE");

                entity.Property(e => e.ShipinfoName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_NAME");

                entity.Property(e => e.ShipinfoSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SHIPINFO_SPECODE");

                entity.Property(e => e.SlsmanCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SLSMAN_CODE");

                entity.Property(e => e.SlsmanDefinition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SLSMAN_DEFINITION_");

                entity.Property(e => e.SrvcardActive).HasColumnName("SRVCARD_ACTIVE");

                entity.Property(e => e.SrvcardActiveAdi)
                    .IsRequired()
                    .HasMaxLength(35)
                    .IsUnicode(false)
                    .HasColumnName("SRVCARD_ACTIVE_ADI");

                entity.Property(e => e.SrvcardCardtype).HasColumnName("SRVCARD_CARDTYPE");

                entity.Property(e => e.SrvcardCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SRVCARD_CODE");

                entity.Property(e => e.SrvcardCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SRVCARD_CYPHCODE");

                entity.Property(e => e.SrvcardDefinition)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("SRVCARD_DEFINITION_");

                entity.Property(e => e.SrvcardSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("SRVCARD_SPECODE");

                entity.Property(e => e.StlineCancelled).HasColumnName("STLINE_CANCELLED");

                entity.Property(e => e.StlineClientref).HasColumnName("STLINE_CLIENTREF");

                entity.Property(e => e.StlineDate)
                    .HasColumnType("datetime")
                    .HasColumnName("STLINE_DATE_");

                entity.Property(e => e.StlineDay).HasColumnName("STLINE_DAY");

                entity.Property(e => e.StlineDelvrycode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("STLINE_DELVRYCODE");

                entity.Property(e => e.StlineDestcostgrp).HasColumnName("STLINE_DESTCOSTGRP");

                entity.Property(e => e.StlineDestindex).HasColumnName("STLINE_DESTINDEX");

                entity.Property(e => e.StlineDiscper).HasColumnName("STLINE_DISCPER");

                entity.Property(e => e.StlineFtime).HasColumnName("STLINE_FTIME");

                entity.Property(e => e.StlineGlobtrans).HasColumnName("STLINE_GLOBTRANS");

                entity.Property(e => e.StlineHalf).HasColumnName("STLINE_HALF");

                entity.Property(e => e.StlineInputAmount).HasColumnName("STLINE_INPUT_AMOUNT");

                entity.Property(e => e.StlineInputDiffprcost).HasColumnName("STLINE_INPUT_DIFFPRCOST");

                entity.Property(e => e.StlineInputDiffprcrcost).HasColumnName("STLINE_INPUT_DIFFPRCRCOST");

                entity.Property(e => e.StlineInputDiffrepprice).HasColumnName("STLINE_INPUT_DIFFREPPRICE");

                entity.Property(e => e.StlineInputDistcost).HasColumnName("STLINE_INPUT_DISTCOST");

                entity.Property(e => e.StlineInputDistdisc).HasColumnName("STLINE_INPUT_DISTDISC");

                entity.Property(e => e.StlineInputDistexp).HasColumnName("STLINE_INPUT_DISTEXP");

                entity.Property(e => e.StlineInputDistprom).HasColumnName("STLINE_INPUT_DISTPROM");

                entity.Property(e => e.StlineInputLinenet).HasColumnName("STLINE_INPUT_LINENET");

                entity.Property(e => e.StlineInputOutcost).HasColumnName("STLINE_INPUT_OUTCOST");

                entity.Property(e => e.StlineInputPrice).HasColumnName("STLINE_INPUT_PRICE");

                entity.Property(e => e.StlineInputPrprice).HasColumnName("STLINE_INPUT_PRPRICE");

                entity.Property(e => e.StlineInputTotal).HasColumnName("STLINE_INPUT_TOTAL");

                entity.Property(e => e.StlineInputVatamnt).HasColumnName("STLINE_INPUT_VATAMNT");

                entity.Property(e => e.StlineInputVatmatrah).HasColumnName("STLINE_INPUT_VATMATRAH");

                entity.Property(e => e.StlineInvoicelnno).HasColumnName("STLINE_INVOICELNNO");

                entity.Property(e => e.StlineInvoiceref).HasColumnName("STLINE_INVOICEREF");

                entity.Property(e => e.StlineIocode).HasColumnName("STLINE_IOCODE");

                entity.Property(e => e.StlineIocodeTuru)
                    .IsRequired()
                    .HasMaxLength(33)
                    .IsUnicode(false)
                    .HasColumnName("STLINE_IOCODE_TURU");

                entity.Property(e => e.StlineLineexp)
                    .HasMaxLength(251)
                    .IsUnicode(false)
                    .HasColumnName("STLINE_LINEEXP");

                entity.Property(e => e.StlineLinetype).HasColumnName("STLINE_LINETYPE");

                entity.Property(e => e.StlineLogicalref).HasColumnName("STLINE_LOGICALREF");

                entity.Property(e => e.StlineMonth).HasColumnName("STLINE_MONTH");

                entity.Property(e => e.StlineOrdficheref).HasColumnName("STLINE_ORDFICHEREF");

                entity.Property(e => e.StlineOrdtransref).HasColumnName("STLINE_ORDTRANSREF");

                entity.Property(e => e.StlineOutputAmount).HasColumnName("STLINE_OUTPUT_AMOUNT");

                entity.Property(e => e.StlineOutputDiffprcost).HasColumnName("STLINE_OUTPUT_DIFFPRCOST");

                entity.Property(e => e.StlineOutputDiffprcrcost).HasColumnName("STLINE_OUTPUT_DIFFPRCRCOST");

                entity.Property(e => e.StlineOutputDiffrepprice).HasColumnName("STLINE_OUTPUT_DIFFREPPRICE");

                entity.Property(e => e.StlineOutputDistcost).HasColumnName("STLINE_OUTPUT_DISTCOST");

                entity.Property(e => e.StlineOutputDistdisc).HasColumnName("STLINE_OUTPUT_DISTDISC");

                entity.Property(e => e.StlineOutputDistexp).HasColumnName("STLINE_OUTPUT_DISTEXP");

                entity.Property(e => e.StlineOutputDistprom).HasColumnName("STLINE_OUTPUT_DISTPROM");

                entity.Property(e => e.StlineOutputLinenet).HasColumnName("STLINE_OUTPUT_LINENET");

                entity.Property(e => e.StlineOutputOutcost).HasColumnName("STLINE_OUTPUT_OUTCOST");

                entity.Property(e => e.StlineOutputPrice).HasColumnName("STLINE_OUTPUT_PRICE");

                entity.Property(e => e.StlineOutputPrprice).HasColumnName("STLINE_OUTPUT_PRPRICE");

                entity.Property(e => e.StlineOutputTotal).HasColumnName("STLINE_OUTPUT_TOTAL");

                entity.Property(e => e.StlineOutputVatamnt).HasColumnName("STLINE_OUTPUT_VATAMNT");

                entity.Property(e => e.StlineOutputVatmatrah).HasColumnName("STLINE_OUTPUT_VATMATRAH");

                entity.Property(e => e.StlinePrcurr).HasColumnName("STLINE_PRCURR");

                entity.Property(e => e.StlinePrevlineno).HasColumnName("STLINE_PREVLINENO");

                entity.Property(e => e.StlinePrevlineref).HasColumnName("STLINE_PREVLINEREF");

                entity.Property(e => e.StlineQuarter).HasColumnName("STLINE_QUARTER");

                entity.Property(e => e.StlineReportrate).HasColumnName("STLINE_REPORTRATE");

                entity.Property(e => e.StlineSatirTuru)
                    .IsRequired()
                    .HasMaxLength(39)
                    .IsUnicode(false)
                    .HasColumnName("STLINE_SATIR_TURU");

                entity.Property(e => e.StlineSourcecostgrp).HasColumnName("STLINE_SOURCECOSTGRP");

                entity.Property(e => e.StlineSourceindex).HasColumnName("STLINE_SOURCEINDEX");

                entity.Property(e => e.StlineSpecode)
                    .HasMaxLength(17)
                    .IsUnicode(false)
                    .HasColumnName("STLINE_SPECODE");

                entity.Property(e => e.StlineTrcode).HasColumnName("STLINE_TRCODE");

                entity.Property(e => e.StlineTrcurr).HasColumnName("STLINE_TRCURR");

                entity.Property(e => e.StlineTrrate).HasColumnName("STLINE_TRRATE");

                entity.Property(e => e.StlineUinfo1).HasColumnName("STLINE_UINFO1");

                entity.Property(e => e.StlineUinfo2).HasColumnName("STLINE_UINFO2");

                entity.Property(e => e.StlineUomref).HasColumnName("STLINE_UOMREF");

                entity.Property(e => e.StlineUsref).HasColumnName("STLINE_USREF");

                entity.Property(e => e.StlineVat).HasColumnName("STLINE_VAT");

                entity.Property(e => e.StlineVatinc).HasColumnName("STLINE_VATINC");

                entity.Property(e => e.StlineWeek).HasColumnName("STLINE_WEEK");

                entity.Property(e => e.StlineYear).HasColumnName("STLINE_YEAR");

                entity.Property(e => e.UnitsetfCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_CODE");

                entity.Property(e => e.UnitsetfCyphcode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_CYPHCODE");

                entity.Property(e => e.UnitsetfName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_NAME");

                entity.Property(e => e.UnitsetfSpecode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETF_SPECODE");

                entity.Property(e => e.UnitsetlCode)
                    .HasMaxLength(11)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_CODE");

                entity.Property(e => e.UnitsetlName)
                    .HasMaxLength(51)
                    .IsUnicode(false)
                    .HasColumnName("UNITSETL_NAME");
            });

            modelBuilder.Entity<Lv001SalesServiceTotal>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("LV_001_SALES_SERVICE_TOTAL");

                entity.Property(e => e.CapideptNr).HasColumnName("CAPIDEPT_NR");

                entity.Property(e => e.CapidivNr).HasColumnName("CAPIDIV_NR");

                entity.Property(e => e.CapiwhouseNr).HasColumnName("CAPIWHOUSE_NR");

                entity.Property(e => e.InvoiceGrpcode).HasColumnName("INVOICE_GRPCODE");

                entity.Property(e => e.InvoiceGrpcodeTipi)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false)
                    .HasColumnName("INVOICE_GRPCODE_TIPI");

                entity.Property(e => e.Period).HasColumnName("PERIOD");

                entity.Property(e => e.SlsmanCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SLSMAN_CODE");

                entity.Property(e => e.SrvcardCode)
                    .HasMaxLength(25)
                    .IsUnicode(false)
                    .HasColumnName("SRVCARD_CODE");

                entity.Property(e => e.StlineCancelled).HasColumnName("STLINE_CANCELLED");

                entity.Property(e => e.StlineCancelledAçiklama)
                    .IsRequired()
                    .HasMaxLength(43)
                    .IsUnicode(false)
                    .HasColumnName("STLINE_CANCELLED_AÇIKLAMA");

                entity.Property(e => e.StlineDay).HasColumnName("STLINE_DAY");

                entity.Property(e => e.StlineHalf).HasColumnName("STLINE_HALF");

                entity.Property(e => e.StlineInputAmount).HasColumnName("STLINE_INPUT_AMOUNT");

                entity.Property(e => e.StlineInputDiffprcost).HasColumnName("STLINE_INPUT_DIFFPRCOST");

                entity.Property(e => e.StlineInputDiffprcrcost).HasColumnName("STLINE_INPUT_DIFFPRCRCOST");

                entity.Property(e => e.StlineInputDiffrepprice).HasColumnName("STLINE_INPUT_DIFFREPPRICE");

                entity.Property(e => e.StlineInputDistcost).HasColumnName("STLINE_INPUT_DISTCOST");

                entity.Property(e => e.StlineInputDistdisc).HasColumnName("STLINE_INPUT_DISTDISC");

                entity.Property(e => e.StlineInputDistexp).HasColumnName("STLINE_INPUT_DISTEXP");

                entity.Property(e => e.StlineInputDistprom).HasColumnName("STLINE_INPUT_DISTPROM");

                entity.Property(e => e.StlineInputLinenet).HasColumnName("STLINE_INPUT_LINENET");

                entity.Property(e => e.StlineInputOutcost).HasColumnName("STLINE_INPUT_OUTCOST");

                entity.Property(e => e.StlineInputPrice).HasColumnName("STLINE_INPUT_PRICE");

                entity.Property(e => e.StlineInputTotal).HasColumnName("STLINE_INPUT_TOTAL");

                entity.Property(e => e.StlineInputVatamnt).HasColumnName("STLINE_INPUT_VATAMNT");

                entity.Property(e => e.StlineInputVatmatrah).HasColumnName("STLINE_INPUT_VATMATRAH");

                entity.Property(e => e.StlineMonth).HasColumnName("STLINE_MONTH");

                entity.Property(e => e.StlineOutputAmount).HasColumnName("STLINE_OUTPUT_AMOUNT");

                entity.Property(e => e.StlineOutputDiffprcost).HasColumnName("STLINE_OUTPUT_DIFFPRCOST");

                entity.Property(e => e.StlineOutputDiffprcrcost).HasColumnName("STLINE_OUTPUT_DIFFPRCRCOST");

                entity.Property(e => e.StlineOutputDiffrepprice).HasColumnName("STLINE_OUTPUT_DIFFREPPRICE");

                entity.Property(e => e.StlineOutputDistcost).HasColumnName("STLINE_OUTPUT_DISTCOST");

                entity.Property(e => e.StlineOutputDistdisc).HasColumnName("STLINE_OUTPUT_DISTDISC");

                entity.Property(e => e.StlineOutputDistexp).HasColumnName("STLINE_OUTPUT_DISTEXP");

                entity.Property(e => e.StlineOutputDistprom).HasColumnName("STLINE_OUTPUT_DISTPROM");

                entity.Property(e => e.StlineOutputLinenet).HasColumnName("STLINE_OUTPUT_LINENET");

                entity.Property(e => e.StlineOutputOutcost).HasColumnName("STLINE_OUTPUT_OUTCOST");

                entity.Property(e => e.StlineOutputPrice).HasColumnName("STLINE_OUTPUT_PRICE");

                entity.Property(e => e.StlineOutputTotal).HasColumnName("STLINE_OUTPUT_TOTAL");

                entity.Property(e => e.StlineOutputVatamnt).HasColumnName("STLINE_OUTPUT_VATAMNT");

                entity.Property(e => e.StlineOutputVatmatrah).HasColumnName("STLINE_OUTPUT_VATMATRAH");

                entity.Property(e => e.StlineQuarter).HasColumnName("STLINE_QUARTER");

                entity.Property(e => e.StlineWeek).HasColumnName("STLINE_WEEK");

                entity.Property(e => e.StlineYear).HasColumnName("STLINE_YEAR");
            });

            modelBuilder.Entity<Report>(entity =>
            {
                entity.Property(e => e.Id).HasColumnName("id");

                entity.Property(e => e.Content).IsUnicode(false);

                entity.Property(e => e.Name)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}
